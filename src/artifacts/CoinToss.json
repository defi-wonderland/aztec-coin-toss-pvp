{
  "name": "CoinToss",
  "functions": [
    {
      "name": "_claim_funds",
      "functionType": "open",
      "isInternal": true,
      "parameters": [
        {
          "name": "round_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "secret_hash",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_header",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::BlockHeader",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "archive_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "_increase_bettors",
      "functionType": "open",
      "isInternal": true,
      "parameters": [
        {
          "name": "round_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_header",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::BlockHeader",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "archive_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "_increase_reveals",
      "functionType": "open",
      "isInternal": true,
      "parameters": [
        {
          "name": "round_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "user_bet",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_header",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::BlockHeader",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "archive_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "_set_result",
      "functionType": "open",
      "isInternal": true,
      "parameters": [
        {
          "name": "caller",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "round_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "answer",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_header",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::BlockHeader",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "archive_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "bet",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "bet",
          "type": {
            "kind": "boolean"
          },
          "visibility": "private"
        },
        {
          "name": "round_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "bet_randomness",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "unshield_nonce",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "claim",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "round_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "secret_hash",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "compute_note_hash_and_nullifier",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [
        {
          "name": "contract_address",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "nonce",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "storage_slot",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "preimage",
          "type": {
            "kind": "array",
            "length": 4,
            "type": {
              "kind": "field"
            }
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "array",
          "length": 4,
          "type": {
            "kind": "field"
          }
        }
      ],
      "bytecode": "H4sIAAAAAAAA/+3dB5gcR5UH8GmttLutdkJpJUuylS1ZaXZ3lC1p1pYcDgcODnPmMIfBHBzm4MjRGBNtc6Qj55yzOYI5gsGATTLBNhgwYLBJJpmcg6pm/jv/rS01U/g9zYz21ffp03bXbL1fVU/1dnXX1BSVSiWrNFLfvn/TK5MT8uvN/6u3LQ1ncmVVNZ3TesTZJ+jMIu8Bae90hXaVNs7oAWN/DxgHhN+bMOI9OrjvX77v38x9/4p9/27MG/vzyuT3sds3I6in29ff/Hka7Rto/tzX/L+/GUv6+FVky6z1yx/Dak5tM53aCG0zozK5zfsjbT4QafNBKuNwyq8Ex+Sw5u/MFj4GLtasysSUBdt1+nk21W+OrKVakGUOxZmnUOe5lfbrjPgF/R775iv4hhJ888k3FPEdqeBbkOA7knwLIr5FCr6FCb5FZFksa/HvaVgWU5yjFep8VKX9OiN+Qb/HvqUKviUJvqXkWxLxLVfwLUvwLScffo/f0ysVfCsSfCvJtyLiO0bBtyrBdwz5VkV8axR8qxN8a8i3OuJbq+A7NsG3lnzHRnzrFXzrEnzrybcu4tuo4NuQ4NtIvg0R37CCr1pp3zdMvmrEN6rgG0nwjZJvJOLbpOCrJfg2ka8W8W1R8G1O8G0h3+aIb5uCb2uCbxv5tkZ8O2R9I863PcG3gyy7ZC01ZzkuwbKLLDtlLX6MvFu2zGroR10Rp6B8PuZ14bplFBPlhnU1q1mdZXvgzOl127vAh307FS15YHGp7LwU8/GxPF7W58/hYwm+48myV9Qy6u/ZnZBg2UuWPaKWxjn8RNky/Tn8JPKjrohTUD4f85OE65ZRTJSLbfaZ1axmNatZzWpWs5rVrGY1q1nNalazmtWsZjWrWc1qVrOa1axmNatZzWpWeauzjAXOnF431gU+7NujaMkDi0tl80RiPj6Wp8j6/JyakxN8p5DlVFHLiJ9T808JllPJcntRS2NOzWmyZfo5NaeTH3VFnILy+ZifLly3jGKiXGyzz6xmNatZzWpWs5rVrGY1q1nNalazmtWsZjWrWXvF6iwnB86cXndyF/iw7/aKljywuFR2nz3m42N5B1mffyZxRoLvDmS5k6zFr9XwzwmWO5HljrIW/0ziX2TL9M8k7kx+1BVxCsrnY35n4bplFBPlYpt9Zp3aVmc5I3Dm9LozusCHfXdUtOSBxaWy81LMx8fyLrI+fw4/M8F3F7LcVdQy7J8r/2uC5a5kOUvU0jiH/5tsmf4cfjfyo66IU1A+H/O7Cdcto5goF9vsM6tZzWpWs5rVrGY169S2OsuZgTOn153ZBT7sO0vRkgcWl8rGKTEfH8u7y/r8mO7sBN/dyXKOqKUxpvv3BMs5ZLmHqKUxprunbJl+THcv8qOuiFNQPh/zewnXLaOYKBfb7DOrWc1qVrOa1axmNevUtjrL2YEzp9ed3QU+7LuHoiUPLC6VjVNiPj6W95b1+THduQm+e5PlvgqW/0iw3Jcs95G1+DHdf8qW6cd09yM/6oo4BeXzMb+fcN0yiolysc2+XrE6y7mBM6fXndsFPuy7j6IlDywulfWfmI+P5f1lfb5/n5fguz9ZHqhg+a8EywPJ8gBZiz/X/Ldsmf5c8yDyo66IU1A+H/MHCdcto5goF9vs6xWrs5wXOHN63Xld4MO+Byha8sDiUln/ifn4WD5EwffgBN9DyPfgiO9hCr6HJvgeRr6HRnyPUPA9PMH3CPI9POJ7lILvkQm+R5HvkRHfYxR8j07wPYZ8j474zlfwPTbBdz75HhvxXaDge1yC7wLyPS7iu1DB9/gE34Xke3zE90QF3xMSfE8k3xMivicr+J6U4Hsy+Z4U8T1VwfeUBN9TyfeUiO9iBd9FCb6LyXdRxPc0Bd8lCb6nke+SiO/pCr7/SfA9nXz4Pf6+8Gcq+J6R4Hsm+Z4R8T1bwfesBN+zyfesiO85Cr7/TfA9h3z4PX7/PU/B99wE3/PI99yI7wUKvucn+F5AvudHfC9S8L0wwfci8r0w4nuJgu/FCb6XkO/FEd/LFHwvTfC9jHwvjfheoeB7eYLvFeR7ecT3KgXfKxN8ryLfKyO+1yj4Xp3gew35Xh3xvU7B99oE3+vI99qI7w0Kvtcn+N5AvtdHfG9S8L0xwfcm8r0x4nuLgu/NCb63kO/NEd/bFHxvTfC9jXxvjfjeoeB7e4LvHeR7e8T3LgXfOxN87yLfOyO+d8v6/P39SxN87ybLe2Ut/jPk/5dgeS9Z3iNr8c8a3idbpn/W8H7yo66IU1A+H/P3C9cto5goF9vsM+vUtjrLpYEzp9dd2gU+7HuPoiUPLC6VnZdiPj6WH5D1+XP4ZQm+D5DlQ6KWxtrk/59g+RBZPihqaZzDPyxbpj+Hf4T8qCviFJTPx/wjwnXLKCbKxTb7zGpWs5rVrGY1q1nNalazmtWsZjWrWc1qVrOatVesznJZ4MzpdZd1gQ/7PqhoyQOLS2X32WM+PpYflfX5ZxKXJ/g+SpaPi1oazyQ+lmD5OFmuELU0nkl8QrZM/0zik+RHXRGnoHw+5p8UrltGMVEuttlnVrOa1axmNatZzWpWs5rVrGY1q1nNalazmtWsvWJ1lssDZ06vu7wLfNh3haIlDywuld1nj/n4WF4l6/PPJK5M8F1Fls+IWhrfy/CpBMtnyPJpUUvjmcRnZcv0zyQ+R37UFXEKyudj/jnhumUUE+Vim31mNatZzWpWs5rVrGad2lZnuTJw5vS6K7vAh32fVrTkgcWlsnFKzMfH8vOyPj+muzrB93myfEnU0hjTfSHB8iWyfFHU0hjTXSNbph/TXUt+1BVxCsrnY36tcN0yiolysc0+s5rVrGY1q1nNalazTm2rs1wdOHN63dVd4MO+Lypa8sDiUtk4JebjY/llWZ8f012X4PsyWb4qammM6b6SYPkqWa4XtTTGdF+TLdOP6b5OftQVcQrK52P+deG6ZRQT5WKbfWY1q1nNalazmtWsZp3aVme5LnDm9LrrusCHfdcrWvLA4lLZOCXm42P5DVmfH9PdkOD7BllulLX47xn4ZoLlRrJ8S9bix3Tfli3Tj+m+Q37UFXEKyudj/h3humUUE+Vim31mndpWZ7khcOb0uhu6wId931K05IHFpbLzUszHx/JmWZ8/h9+U4LuZLN+Xtfhz+HcTLN8ny/dkLf4c/gPZMv05/IfkR10Rp6B8PuY/FK5bRjFRLrbZZ9apbXWWmwJnTq+7qQt82Pc9RUseWFwqOy/FfHwsfyTr8+fwWxJ8PyLLTxUsP06wIL6z/CTIr9625M/hP5Mt05/DbyU/6oo4BeXzMb9VuG4ZxUS52GZfr1id5ZbAmdPrbukCH/b9RNGSBxaXyvpPzMfH8hcKvp8n+H5Bvp9HfL9S8P0ywfcr8v0y4vuNgu/XCb7fkO/XEd/vFHy/TfD9jny/jfj+oOD7fYLvD+T7fcT3JwXfHxN8fyLfHyO+vyj4/pzg+wv5/hzx4ZeFfOe4Mv7aLGt68x8j+yj/rMHW6/r7W6bZsm12T1fGrIgJcfoo/9b+1utmkmmWrMn/zWoWP14utmdVOh9X+Bj468pZlYmp7H07myzzZC3+PsWcBMs8ssyVtfhr3CHZMquuzPnCZboyFlCboP1gLyh/PrXXAuH2yigmysU2+8w6ta3OMitw5vS6WV3gw7655BsI2s/9HdpAf4fmyFprzsrn2gvIgFh99Jor6e/jSPPnmZQ/i+oytzK5rYXP5b6tEQflYhuxZlJd5pJF+lyeVSb+Xal3WVzhtvd/E/h9PjvS7og/RA7hv03DrowFEcd8coT9zzmOlHWMuDIWRhxHkgPxF5Jjkaxj1JWxOOJYRA7EX0yOo2QdfqzCDpfKrrOOIssSBcvRCZYlZFmmYFmaYFlGlhUKluUJlhVkWaVgWZlgWUWW1QqWYxIsq8lyrIJlTYLlWLKsU7CsTbAgvrvewblgLu1Dn+RrSPQNvlbCe3Qh7cN7ZRrtwzHro31oO4z7XbusD6zV25hcHLTLeopTlY3jx64bKhNTWftXybJR1uLHrsOyZXruCPlRV8QpKJ+vbUaE65ZRTJSLbfa1ax3qIeuCHrIu7LBVow+4Mkdly6wdsq+MQWrL0aBNuT6bZWP7e3+1ysRUds7aTJZNshZ/ztoiW6Y/Z20lP+qKOAXl89+grcJ1yygmysU2+9q1jnTYqhB3BP2gFsQaDtrBxd4hHNv1g22ViamsH+wgy3ZZi+8Hx8mW6fvBTvKjrohTUP40qttO4bplFBPlYpt97Vq3dNiqcKxqrsxdsmWO9y205a6gTbk+Y8KxXd/aXZmYyvrWGFnqshbft46XLdP3rRPIj7oiTkH5fVS3E4TrllFMlItt9rVr3dlhq8KxGnVl7pEtc7xvoS33BG3K9TlJNrYfc+6tTExlfeskspwoa/F962TZMn3fOoX8qCviFJTPfwtOEa5bRjFRLrbZ1651Zw9ZT+gh67wOW/Omh51u3yHNn9Hn3FhjfXOOTS8+o+N8l2Y0/x+g3wnLUXi+VNN4RuzKwHOh6VR3xOmj/Gvomet1zZ9zqvNsKufmSD5S2Tmbn9cLP4+qurj8nKlOMTiu9PMnjps1/yEG9vfRzzf1t9rjqNaPpc/P+HX887zgdwrKX6hc50XkqNM2Yrn3yfX0nrqZ5hcIz0Ua5vpyuwxQuyCf7+dq9jeOH5svAqPrQ3h/8vlxobAtozgoF9v8vAP7hsiHevC5ZIPNWxQdV3bJvMVRm7eYnlwZNr9ualt7dS7gYNB+7tx+xEDLKjwXcDQ2F3AwaDeeC1il+ftzmi6bC9iy2FxAmwsYOg7wXEA/X4cdLpVdMywii80HbKUlZFmmYFmaYFlGFpsP2ErdOB8wNr7luXB8vYT3I18X4H0xjfbh+PAcN7QTzy9YI9sGVZ5ft4biCM8x9OMczGFEameOobOslbUMa8wVdGXwHD7UFXEKyue/2RuE65ZRTJSLbfa1ax3qIeuCDls13lcKczxH8dwRbbkxaFOuj/D8O3/vBfNXkcrOA4pz8oYV5uT5qvG8ONQVcQrK5/N6TbhuGcVEudhmX7vWDR22KsQdf/5eDWKtD9pBYX6h7webKhNTWT/gZ9TCczmHFebk+SbleXGoK+IUlM/zxrYJ1y2rTJwbWadt9rVrHe2wVeFY1RTmIo73LbTl9qBNuT7C8+9838I8S6SyvqU4J29YYU6e71s8Lw51RZyC8nne2G7humUUE+Vim33tWrd12KpwrEYV5iKO961wLnOs7cea/7trDbwXcP+uj/KvHmi97mK6Hy3cH/w4kI+DS2V9E/EVzhPDCvPBfd/cTn7UFXEKyudxoPRc8Kwy8RxYp232tWsd6iHrgg5bNd5XCn/3x8eBaMutQZtyfYQ/s+P/RvNnRVwqOw9sIovG9a/w2GLSZx5RV8Thz7vxOFDj8261oE2xvb/P5pVZt3fYqnFPAv1gSxBrR9AOCvdifD/gzyO6VNYPNpJF+HPIwwr3zTyR75uhrohTUD6PA4Xvo/n31oagTbHNvnattQ5bFY5VTeG+/3jfQluuC9qU6yP8bGMkdV0Dfv4hvd6DwvMr37f4+RXqys+pwrUT+mlfXahuGcVEudhmX7vW9R22KhyrUYVnqeN9C225KmhT1Cdv/uN9fjw42KqvjfPSkivDxnmdtdo4r61k47xGsnFexcZ5Ns6zcV6K1cZ5baW2x3l8LYp9fC3q8mbSa5E/Q+9adcSuVVv5M6ludv1Xbu2R67+RDl7/1ez6r5XPc0e6/fpvWw9Zd/eQtdPX1bzOxBbah3Um0Od4nQmXfwTVBftu1/z5EPqdS5t/tA+mtSkG6XcOwNoUoxqfWXRltLs2xXH0GcBd9B6IrU1xWiQfydamKF+b4lS8sSoH/9oUY/SeOo2u5Q/U2hSD1C6dWJsC8Xt9bQrUg88l/PllW5viNiX7Tq14srUp0pKtTWHWg3odjUOD9nN/h86n64oD8Z1ahwbtxutovC9vuS7s4fX6NM7lto7G5Ha3dTQO+DoafpzIjozi8poZi2Xj+tuAsfHeYqp/OIZyjqNlHX79A3agDTjV6eejybJUwbIkwbKULMsVLMsSLMvJslLBsiLBspIs0nPnnGVVgoXn0wnP7fSW1QkWntspvZ5E6toWa8ki/UzZWdYlWHgdBZwLeE2TJc2f+doVfYPvFeA9yvef8F6ZRvtwzHidE7Qdz4+Rnp/g4oTPpF1bbQzqonBfvmZrHrTy+Tqr29c8GOoh68Yesi7qsFWjD2g8Ow/Xp9gUtCnXR3rOgDtn4VkgUtk5i7/fSXitDH/OEl5rYdKcGNQVcXieCf9d0phnsi1oU2zvb05MmbXWYatC3PH5K5uDWKNBOyjMx7K1JCif523aWhLlVoVjVeunsoTKbHstCRdb+LucfN8aq0xMZX1L8fudfN8S/n4n37f4O5ZQV8QpKJ8/n7dXuG4ZxUS52GZfu9bdHbYqHCs/5+ZE2TLH+xba8sSgTbm98f1a+1unBfmn03OF6c2fcyqTx7FjsvXx41j+DjiXyvrrGFk0+mtdtkzfX/m8Hp7vCsrncazwed73gXplYptim33tWod6yLqnh6yLOmzV6AMK19Dj49jw+yFj9ZEeO7hzFn8Xq0tl5yzFuf1q6yzy/HrUldcuRD6PY6XH6GVrF7KvXeuuDlsV4o5fDxwXxKoH7aBwXyz5fg7fR9D4vnaNe9A8Bx915fuPyOdxrMYc/P3df9zf5wXKrFs7bFU4VjWF5xqT7hENB23K9RF+tpS8pjWvpSz8OWO1te35mSLqys8Okc/jWOHPmJauwc6+dq0jHbYqHKtRhefbk9bJXhu0Kerj+sFhwT53zXGRjVMly7RxahdYbZzavtXGqX832Ti1YuPUf8Rq49SWxcap7dfNxql/N3V0nMrX0rx+GF9LH97cfxjlX5K32kP4WnaEr9+Ryvom4is8Ox5WGDdUQz/qijgF5R9OdasL1y2rTHwuXo/UNcU61GGrxrFSuJYd75toy11Bm3J9hK+5/JgV15tIZX1rB1k05hkJX9/6vsXXMqgr4hSVA/JdR/79uj1o0/C7iVKsu3vIureHrPUOW3nNm520D2veoM/xmjf82f0j6Hfw+a7b0T5c2/HnQHHvFK93yyocTOvoHEq/cwDW0alpfGbZldHuOjpX0FydT9B7JLaOzrWRfCRbR6d8HZ1r8lZ7HOzr6FxF76lr6Vr/QK2jcyi1SyfW0UH8Xl9HB/XgcwnWLwj7uxi4uU6PD+D+APU1A89oNtAAxcRNuMFKa1HWgvL/Bt+lrydJvAEA",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "constructor",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "divinity",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "private_oracle",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "token",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "bet_amount",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "phase_length",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "end_bet_phase",
      "functionType": "open",
      "isInternal": true,
      "parameters": [
        {
          "name": "round_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_header",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::BlockHeader",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "archive_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "end_reveal_phase",
      "functionType": "open",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_header",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::BlockHeader",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "archive_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_bet_amount_unconstrained",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "field"
        }
      ],
      "bytecode": "H4sIAAAAAAAA/8VUSQ7CMAx0QhYCEl/gzqmID/QN/KASFUck4P+CQEYdrKqXpsKXuE4y44ztGhEx8rWVDGaUfyh+oHhb1mamBeKrhenfGL5gJcrZlnVX3mLr8p62IxoG0rYSz5Hrw7hCXEl+64jYSmmRyMde1m5P+37kThjh4/uIORl00HdZI6/e0syzj0bM09I3uDYqhyVzgQ7AdSqXf/LGurxNxlgTL/oiku7gx7lEPvePVeeiLDNTQYYeqIXJ/Q+bmt0lezDrh//T43m7d9f+3HcXQ2k5laKl1NjnkUdJHcWmyhgpBhwurZan2vs1rlFrthcEivocEAcAAA==",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_config_unconstrained",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "types::config_note::ConfigNote",
          "fields": [
            {
              "name": "divinity",
              "type": {
                "kind": "struct",
                "path": "aztec::types::address::AztecAddress",
                "fields": [
                  {
                    "name": "address",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "private_oracle",
              "type": {
                "kind": "struct",
                "path": "aztec::types::address::AztecAddress",
                "fields": [
                  {
                    "name": "address",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "token",
              "type": {
                "kind": "struct",
                "path": "aztec::types::address::AztecAddress",
                "fields": [
                  {
                    "name": "address",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "bet_amount",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "header",
              "type": {
                "kind": "struct",
                "path": "aztec::note::note_header::NoteHeader",
                "fields": [
                  {
                    "name": "contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nonce",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_slot",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_transient",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            }
          ]
        }
      ],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_divinity_address_unconstrained",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::types::address::AztecAddress",
          "fields": [
            {
              "name": "address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "H4sIAAAAAAAA/8VUuw7CMAx0Qh4EJH6BnakM7P0G/qASFSMS8P+CQE49rKpLU+ElrpPcOWe7RkSMfG0lgxnlH4ofKN6WtZlpgfhqYfo3hi9YiXK2Zd2Vt9i6vKftiIaBtK3Ec+T6MK4QV5LfOiK2Ulok8rGXtdvTvh+5E0b4+D5iTgYd9F3WyKu3NPPsoxHztPQNro3KYclcoANwncrln7yxLm+TMdbEi76IpDv4cS6Rz/1j1bkoy8xUkKEHamFy/8OmZnfJHsz64f/0eN7u3bU/993FUFpOpWgpNfZ55FFSR7GpMkaKAYdLq+Wp9n6Na9Sa7QUdXUc/EAcAAA==",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_oracle_address_unconstrained",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::types::address::AztecAddress",
          "fields": [
            {
              "name": "address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "H4sIAAAAAAAA/8VUSQ7CMAx0QhYCEl/gzqlIPKBv4AeVqDgiAf8XBDLqYFW9NBW+xHWSGWds14iIka+tZDCj/EPxA8XbsjYzLRBfLUz/xvAFK1HOtqy78hZbl/e0HdEwkLaVeI5cH8YV4kryW0fEVkqLRD72snZ72vcjd8IIH99HzMmgg77LGnn1lmaefTRinpa+wbVROSyZC3QArlO5/JM31uVtMsaaeNEXkXQHP84l8rl/rDoXZZmZCjL0QC1M7n/Y1Owu2YNZP/yfHs/bvbv25767GErLqRQtpcY+jzxK6ig2VcZIMeBwabU81d6vcY1as70ARoe13RAHAAA=",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_phase_length_unconstrained",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "field"
        }
      ],
      "bytecode": "H4sIAAAAAAAA/8VUSQ7CMAx0QhYCEl/gzqnwgr6BH1Si4ogE/F8QyKiDVfXSVPgS10lmnLFdIyJGvraSwYzyD8UPFG/L2sy0QHy1MP0bwxesRDnbsu7KW2xd3tN2RMNA2lbiOXJ9GFeIK8lvHRFbKS0S+djL2u1p34/cCSN8fB8xJ4MO+i5r5NVbmnn20Yh5WvoG10blsGQu0AG4TuXyT95Yl7fJGGviRV9E0h38OJfI5/6x6lyUZWYqyNADtTC5/2FTs7tkD2b98H96PG/37tqf++5iKC2nUrSUGvs88iipo9hUGSPFgMOl1fJUe7/GNWrN9gJfUAj+EAcAAA==",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_result",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [
        {
          "name": "round_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "boolean"
        }
      ],
      "bytecode": "H4sIAAAAAAAA/81XzU7DMAxO+t/9/3AnTzC1u3DhUO6c4AkqbXDZqLQW8fosmy2+ZRVCmstmqY1rN/4+22mUekoprY7ig47CtoLG7DLJtVysDPl6++uZ9JSeUSLQCyH8SL4+GXLnMdxfMeSmHP+I8gtluSwtlq9OxV0jBegh1DqQ5ZJH6qeHQjEP/YtlYz7YGAnUxIeaWOmDPwZfIlwvrc7XPD8jv79y9a7Mtav+p7IxlwPizLVMgb+bT184HxujR7ECwOoD5rCD3g0olqaLMXqAO+oAl3FCwmUejOXDO4bGIdTD7UcXtUEpQGcs5KKvzCVV5/t7Cv4EbJ4z1/bgCfwT0j2wTUn3W2JPwDYmfdoyF2s0cXLJLpNDjRCngGfG6gGH6Q1wSf6JC/eE444dLtfEncniHvbROeDyGp1B3Rl/DjzuhHloh4cGXMZKQZ+DzXPei4mjL8uxi3NZbvkH6lR+278iGIXPwLn9vniPrptqV76vX9blSgOtwKGIvx6o47bHR78AbPwph2Dj+Xj85zh4jDz7dSuE8sdEVUuibf57Gh9pfD3WzdSbqjGZ+djfy82m+lqvFgZ9tdl+1o2pm3LXmLddtTX54htCyIFWpA4AAA==",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_reveal_notes_unconstrained",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [
        {
          "name": "start_offset",
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 32
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "array",
          "length": 10,
          "type": {
            "kind": "struct",
            "path": "std::option::Option",
            "fields": [
              {
                "name": "_is_some",
                "type": {
                  "kind": "boolean"
                }
              },
              {
                "name": "_value",
                "type": {
                  "kind": "struct",
                  "path": "types::reveal_note::RevealNote",
                  "fields": [
                    {
                      "name": "owner",
                      "type": {
                        "kind": "struct",
                        "path": "aztec::types::address::AztecAddress",
                        "fields": [
                          {
                            "name": "address",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "round_id",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "randomness",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "header",
                      "type": {
                        "kind": "struct",
                        "path": "aztec::note::note_header::NoteHeader",
                        "fields": [
                          {
                            "name": "contract_address",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "nonce",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "storage_slot",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "is_transient",
                            "type": {
                              "kind": "boolean"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_round_data",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [
        {
          "name": "round_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "types::round_data::RoundData",
          "fields": [
            {
              "name": "phase",
              "type": {
                "kind": "integer",
                "sign": "unsigned",
                "width": 120
              }
            },
            {
              "name": "current_phase_end",
              "type": {
                "kind": "integer",
                "sign": "unsigned",
                "width": 120
              }
            },
            {
              "name": "reveals_count",
              "type": {
                "kind": "integer",
                "sign": "unsigned",
                "width": 120
              }
            },
            {
              "name": "bettors",
              "type": {
                "kind": "integer",
                "sign": "unsigned",
                "width": 120
              }
            },
            {
              "name": "claim_amount",
              "type": {
                "kind": "integer",
                "sign": "unsigned",
                "width": 120
              }
            }
          ]
        }
      ],
      "bytecode": "H4sIAAAAAAAA/82Y3W7aQBCF19iYv5BASEhISHB+riNDG6kXvfAztE9gKbQ3pEjYVfv4jZ0d9evGrSoxDhkJdjxr5pwzu2a9GxpjPPNsPnyaxBLbxtvZ3NPLFTfBswEdhQW2lXvCp8/K+h3cb9BvdLXGoX79YnJvQGMP2tyadMyf4+zWIEDMR06JBU6N9q3f1NW2IL6YOycT+BzbQJfLPDS/9SrlLOdDSzfnhyJHGzXxUZPCeuhvoa+tXC/PvHyG5Jr8/pdrY8dc6xr/jm7OxZ7lzOfa/EVPT1lPkaNrcwXA6gGzX8PY7dlcnv0IRhe4+zXgCk7T4goPwfJxz61t+6iHOx511IaWwBcscvF2zIXrkkGs79SKaxXHIEX/wPpc84bW9ytyDxA7sP6w4res0cDREm9nZY2Ik+BasLrgMHwDXNqvxEXGRPIeOFx2iXuoi1v+j46AK3P0EHUX/BF4HCnz8BweP4F7BNxj5boXOcYV+o+hX/DH4HGiy6PUP3b0C+4JcE91cRdFjkmF/lPoF/wJeJzp8ij1Txz9gnsG3HNd3HdFjmmF/nPoF/wpeFzo8ij1Tx39gnsB3Etd3PdFjlmF/kvoF/wZeES6PEr9M0e/4ApWB/4IsSvrjxG7tv4EsRvrTxG7dbRxvY8Qk3X8CjHZ910jJvvCG8TkfViwWjYmORPbxtvZfQ37hnvqFPvX+1WIVnmPPi/Wf3mHzPL1Jv26/LRMHzzQco9eeNRCn69lsjXlUUTbycNp0UJM8nCb++IoK1HST6GmQqhvRRQxnv/wfpmXH237+bmOUbZa51EcfXv6Tler9Y/lw13Evix6/J7lUZanmzz6slk/RvO7X48KJpXEEwAA",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_round_id",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "field"
        }
      ],
      "bytecode": "H4sIAAAAAAAA/8VUSQ7CMAx00iwEJL7AnVP5Qd/ADypRcUQC/i8IZNTBqnppKnyJ6yQzztiuEREjX2tkNKP8Y/EDxbuytgstEF8tTP/G8AUrUc62rPvyFluX97Sb0DCQtrV4uD6MK8SV5LeOiDVKi0Q+9rJ2B9r3E3fCBB/fR8zJqIO+yxp59ZZ2mX00Yp6OvsG1VTmsmQt0AK5TufyTN9blbTPGhnjRF5F0Bz/OJfK5f6w6F2WdmQoy9kAtTO5/2NzsrtmDWT/8nx7P272/DuehvxhKy6kULaXGPo88SuooNlfGSDHgcGm1PNXer3GNWrO9APM4bgIQBwAA",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_token_address_unconstrained",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::types::address::AztecAddress",
          "fields": [
            {
              "name": "address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "H4sIAAAAAAAA/8VUuw7CMAx0Qh4EJH6BnakszP0G/qASFSMS8P+CQE49rKpLU+ElrpPcOWe7RkSMfG0lgxnlH4ofKN6WtZlpgfhqYfo3hi9YiXK2Zd2Vt9i6vKftiIaBtK3Ec+T6MK4QV5LfOiK2Ulok8rGXtdvTvh+5E0b4+D5iTgYd9F3WyKu3NPPsoxHztPQNro3KYclcoANwncrln7yxLm+TMdbEi76IpDv4cS6Rz/1j1bkoy8xUkKEHamFy/8OmZnfJHsz64f/0eN7u3bU/993FUFpOpWgpNfZ55FFSR7GpMkaKAYdLq+Wp9n6Na9Sa7QWxNSHDEAcAAA==",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_user_bets_unconstrained",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [
        {
          "name": "start_offset",
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 32
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "array",
          "length": 10,
          "type": {
            "kind": "struct",
            "path": "std::option::Option",
            "fields": [
              {
                "name": "_is_some",
                "type": {
                  "kind": "boolean"
                }
              },
              {
                "name": "_value",
                "type": {
                  "kind": "struct",
                  "path": "types::bet_note::BetNote",
                  "fields": [
                    {
                      "name": "owner",
                      "type": {
                        "kind": "struct",
                        "path": "aztec::types::address::AztecAddress",
                        "fields": [
                          {
                            "name": "address",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "round_id",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "bet",
                      "type": {
                        "kind": "boolean"
                      }
                    },
                    {
                      "name": "randomness",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "header",
                      "type": {
                        "kind": "struct",
                        "path": "aztec::note::note_header::NoteHeader",
                        "fields": [
                          {
                            "name": "contract_address",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "nonce",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "storage_slot",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "is_transient",
                            "type": {
                              "kind": "boolean"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "initialize",
      "functionType": "open",
      "isInternal": false,
      "parameters": [
        {
          "name": "phase_length",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "bet_amount",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "oracle_address",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "divinity_address",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "token_address",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_header",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::BlockHeader",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "archive_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "is_round_randomness_nullified",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [
        {
          "name": "round_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "randomness",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "boolean"
        }
      ],
      "bytecode": "H4sIAAAAAAAA/82XS2rDMBCGRw87ftFV79CtkxNo02W76RFCSk2zalro8RMlGvhRJhDICHvAyNJYo29+yZLtiMjQxdzpsnRt7A+pHB+ztdGLNZbktIqcBjijzh/pvhU0b9MzmFMN/qDEVOtrNmI+VsiHyyq1E5TY5+l09UJ7ZPa6zGucG4xLMBayuAWxmJlZWmAgaGM/roEq3Ttos0I8XCNcvtwZ2wvPoUZ1lsv4mJ01wnEC1HmsDhj8Aljcglik+Wd/BW0267sqw73BdUPAjxbgvoayUtawTnkqxjyflw3we9AzWg9+1LxRzs3AmByX68h3L6ubmbXEXMWYrW7MzZCY8X0jIZ9emIPI0xXQljJt2TqBxczMcuu86zKtcM9iX9wf3sDPeVkhTi88h7kPBXLHcQLUB8jDZHxzsjSCVujnNpv1XaW+z6m+/dptv9//9vvpc9r9vP5Ph99D/r3OLGy4N2rv+zEGv5+err+H8Iz0Qp54RuZrVfXniEXBHxj8mWQ7AtJRWaxlDgAA",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "oracle_callback",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "answer",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "data",
          "type": {
            "kind": "array",
            "length": 5,
            "type": {
              "kind": "field"
            }
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "reveal",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "round_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "user_randomness",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "roll",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "round_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "oracle_nonce",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "start_next_round",
      "functionType": "open",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_header",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::BlockHeader",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "archive_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    }
  ],
  "events": [],
  "debug": {
    "debugSymbols": [
      "",
      "",
      "",
      "eJzVnduuK7uRZf9lPx80xEuQTP9Kox+MriqggIKr0fab4X8vFUrrYpg84tybGTH8dDYOmOLUSuVMraEYWn/98R//+X//+Jd//88//fnHH/764/G/evrxh//91x9//n9//NN//48//+WP//8vP/7w+O3Hv/7pX57//dtvP/7t3//jX3/8If3t//z238uztrxoy6u23LTlTVved5f/9g+rUk25v1Y+/232ufrKr0cftz76deejj8etj779ivypR99+Af/Uo2+/3n/q0bcvj5969O2r6aceffvi+6lHv/VaHbdeq+PWa/W69Vq9br1Wr1uv1evWa/W69Vq9br1Wr1uv1evWa/W69Vq9br1W0+PWizU9br1a0+PWyzU9br1e0+PWCzY9fumKLa19PnwZ4/vDz5a39Phc3lKapPmlK/x4ml9qhONpfqlBjqf5pcY5nSb9UkEdT/NLfXY8zS/V3/E0v9SWx9P8UrkeT4Pq4oTq4oTq4oTq4oTq4ozq4ozq4ozq4ozq4ozq4ozq4ozq4ozq4ozq4ozq4oLq4oLq4oLq4oLq4oLq4oLq4oLq4oLq4oLq4oLq4orq4orq4orq4orq4orq4orq4orq4orq4orq4orqYkN1saG62FBdbKguNlQXG6qLDdXFhupiQ3Wxobq4obq4obq4obq4obq4obq4obq4obq4obq4obq4obq4o7p43wFwSYPq4n2DwSUNqov3/QuXNKgu/jV75HgaVBf/mp1yOs2v2SzH06C6+NdsmeNpXK9w+5robX1M0rhe4e/S/JrnoaWx8nWmnv+enKlf80KOp3F8FW+kcXxHsZHG8R3FRhq/dxSjXPW1+vnP9rm420cWv7Z5n8Wxa6xU+zxL9WG/sPwV3vHNx/nwju9VtPBX/7wlPPK3ta/XTP41mSg0uevd42jy7TZ9rdcM9rzv7bzWb/fGa/32pfpav311/M/6fX/ktV77doK872C81mvfT5D3PYbXevH87rsAr/Xi+d2fp3+tF8/v/kz6a714fvfnul/rxfO7Pxv9Wi+e3/354td68fzuz+i+1ovnd3/O9bVePL/7s6Kv9eL53Z+3fK0Xz+/+zOJrvXh+9+f+XuvF87s/O/daL57f/fmz13rx/O7PcL3Wi+d3fw7qtV48v/uzRK/14vndn8d5rRfP7/5My2u9eH7350Je68Xzuz9b8Vovnt/9+YTXevH87n/G/1ovnt/9z8lf68Xzu/9Z82u9eH73P699rRfP7/5nnq/14vnd/9zwtV48v+LXe2Xx+72y+AVfWfyGryx+xVfe/5TmtV48v/ufdPzP+v3PIl7rxfO7z/Nf68Xzu/8NVa/14vnd/wTgtV48v/vf9PRaL57ffUr/Wi+e333S/Vovnt99WvxaL57ffeb6Wi+e330U+Vqvnd+yz9xe67XzW/a/Yue1Xju/ReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXReRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXVeRXJvIrE/mVifzKRH5lIr8ykV+ZyK9M5Fcm8isT+ZWJ/MpEfmUivzKRX5nIr0zkVybyKxP5lYn8ykR+ZSK/MpFfmcivTORXJvIrE/mVifzKRH5lIr8ykV+ZyK9M5Fcm8isT+ZWJ/MpEfmUivzKRX5nIr0zkVybyKxP5lYn8ykR+ZSK/MpFfmcivTORX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jguWeG4ZIXjkhWOS1Y4LlnhuGSF45IVjktWOC5Z4bhkheOSFY5LVjguWeG4ZIXjkhWOS1Y4LlnhuGSF45IVjktWOC5Z4bhkheOSFY5LVjguWeG4ZJXjklWOS1Y5LlnluGT1gWnbynHJKsclqxyXrHJcsspxySrHJascl6xyXLLKcckqxyWrHJesclyyynHJKsclqxyXrHJcsspxySrHJascl6xyXLLKcckqxyWrHJesclyyynHJKsclqxyXrHJcsspxySrHJascl6xyXLLKcckqxyWrHJesclyyynHJKsclqxyXrHJcsspxySrHJascl6xyXLLKcckqxyWrHJesclyyynHJKsclqxyXrHJcsspxySrHJascl6xyXLLKcckqxyWrHJesclyyynHJKsclqxyXrHJcsspxySrHJascl6xyXLLKcckqxyWrHJesclyyynHJKsclqxyXrHJcsspxySrHJascl6xyXLLKcckqxyWrHJesclyyynHJKsclqxyXrHJcsspxySrHJascl6xyXLLKcckqxyWrHJfMOC6ZcVwy47hkxnHJ7IFpW+O4ZMZxyYzjkhnHJTOOS2Ycl8w4LplxXDLjuGTGccmM45IZxyUzjktmHJfMOC6ZcVwy47hkxnHJjOOSGcclM45LZhyXzDgumXFcMuO4ZMZxyYzjkhnHJTOOS2Ycl8w4LplxXDLjuGTGccmM45IZxyUzjktmHJfMOC6ZcVwy47hkxnHJjOOSGcclM45LZhyXzDgumXFcMuO4ZMZxyYzjkhnHJTOOS2Ycl8w4LplxXDLjuGTGccmM45IZxyUzjktmHJfMOC6ZcVwy47hkxnHJjOOSGcclM45LZhyXzDgumXFcMuO4ZMZxyYzjkhnHJTOOS2Ycl8w4LplxXDLjuGTGccmM45IZxyUzjktmHJfMOC6ZcVwy47hkxnHJjOOSGcclM45LZhyXzDguWeO4ZI3jkjWOS9Y4Lll7YNq2cVyyxnHJGsclaxyXrHFcssZxyRrHJWscl6xxXLLGcckaxyVrHJescVyyxnHJGsclaxyXrHFcssZxyRrHJWscl6xxXLLGcckaxyVrHJescVyyxnHJGsclaxyXrHFcssZxyRrHJWscl6xxXLLGcckaxyVrHJescVyyxnHJGsclaxyXrHFcssZxyRrHJWscl6xxXLLGcckaxyVrHJescVyyxnHJGsclaxyXrHFcssZxyRrHJWscl6xxXLLGcckaxyVrHJescVyyxnHJGsclaxyXrHFcssZxyRrHJWscl6xxXLLGcckaxyVrHJescVyyxnHJGsclaxyXrHFcssZxyRrHJWscl6xxXLLGcckaxyVrHJescVyyxnHJGsclaxyXrHFcssZxyRrHJWscl6xxXLLGcckaxyXrHJesc1yyznHJOscl6w9M23aOS9Y5LlnnuGSd45J1jkvWOS5Z57hkneOSdY5L1jkuWee4ZJ3jknWOS9Y5LlnnuGSd45J1jkvWOS5Z57hkneOSdY5L1jkuWZ+7ZKmUXF/HPf9t5Xcjpdzy1+Jva8s1WV3s45HLZd/Wps9I09aNjTRt39BIc8csNtK0jWMjTVs5NtK0nWMjTVs6NtK0rWMjTVs7NhKvveeOWmwkXnvPnbXYSLz2njtssZF47T132mIj8dp77rjFRuK199x5i43Ea++5AxcbidfecycuNhKvveeOXGwkXnvPnbnYSLz2njt0sZF47T136mIj8dp77tjFRuK199y5i43Ea++5gxcbidfecycvNhKvveeOXmwkXnvPnb3YSLz2njt8sZF47T13+mIj8dp77vjFRuK199z5i43Ea++5AxgbidfecycwNhKvveeOYGwkXnvPncHYSLz2njuEsZF47T13CmMj8dp77hjGRuK199w5jI3Ea++5gxgbCdfeY+4kxkbCtfeYO4qxkXDtPR649h5zdzE2Eq69x9xljI2Ea+8xdxtDI80dx9hIvPaeO4+xkXjtPXcgYyPx2nvuRMZG4rX33JGMjcRr77kzGRuJ195zhzI2Eq+9505lbCRee88dy9hIvPbmuZaD51oOnms5eK7l4LmWg+daDp5rOXiu5eC5loPnWg6eazl4ruXguZaD51oOnms5eK7l4LmWg+daDp5rOXiu5eC5loPnWg6eazl4ruXguZaD51oOnms5eK7l4LmWg+daDp5rOXiu5eC5loPnWg6eazl4ruXguZaD51oOnms5eK7l4LmWg+daDp5rOXiu5eC5lsPftayP9Fpc8+PvIv3j2mzXa21u42utPT7juzf92fjud4Wz8Vd3kH59JqqP9i3+x4Grnn974KKNa7GvA1t2vYIWbRwYaeVORkZatHFkpEUbR0ZatHFkpEXDRkZatGZkpEUTRkZadGxkJF57r9zJwEgrd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",
      "",
      "",
      "eJztnMFu2zAMht/F52AQJUqU8irDDsXWAQWKdlh7K/LuS9BYVh1VRBaFbAyf1gGU/eW3+0l0XL0Nj88/714fnp9ehu3b4Ibt97fh5c/d0+F/L693f1+HrdkM90+/9v/uNsPvh8f7YQu7zUkVoAvhWLn/OcZcnWyt3FuAsdzbwJQnorHYWD/V+t2PzYA3Se0FqR36TI3GX0AdatRk0ohDEGybPQV7rLXGFp/TUaU64njgBNOnBKwduclNN8odL+W2YMZaaz0y3JTGOzC6MNWaWq2PYyChuKUAsFKLkMZitFAc2deqbTLpWO1MJKaaEMcw4pQFHtJLXze9ADm9kqGans13iCvvPDDn3k1gZANJaDKMoQ+JHGhAjwbsCY2t0tgwqpMQGEW4RPkMLsUi/dpV7TmZQHXmvip8vzkFqhP4WfBoINOgwVDCH85QnWzPPIOxrTPUJ8bzzuBzSAhIzAVATymXU3HwI1B9xrsmUAKXy5Mzc6D6VKYIVJ8d9IBs3c6KQHVBKwJd7ujOQJd7tzNQD5d2Beqh3q5A8qZmgBRMHcwERDQHUjB1G0jB1E0gp2DqNpCCqdtACqZuAymYug2kYOo2kIKp20AKpm4DiZvam6JFNDbOgcRNzQGJm5oBQnFTc0DipuaAxE3NAYmbmgMSNzUHJG5qDkjc1ByQvKnRFs/DcP44BuVNzQDJm7oN5OVNzQDJm5oBkjc1AyRvagZI3tQMkLypGSB5UzNACqaO09SBKc2BFEzdBlIwdRMoKJi6DaRg6jaQgqnbQAqmbgMpmLoNpGDqNpCCqdtA8qb2xXfMPrg5kLypGSB5U7eBSN7UDJC8qRkgeVMzQPKmZoDkTc0AyZuaAZI3NQMkbuqAMb+MEvzJV5wkbuqwn8wyUPl+4hFI3NQhODsB0fySRXFTk4k5IQKcJxTFTU0Q8tfkZGH+SC+Km5qsCxPQyXooipuaHOTyDwc/AombmtDl78vIm/lLcVHc1ORxumTeM+UBxxsuFG9fgqvWOjt+1L3gil/fs193jOLTxU2kIj5nnZlKftudyjeZq6kApJQ7KWuAeTkWTZ7NEYqD/0eI4vPsFUPcTwF5TWFt8UJ9/Y9cTHQ5c5Mui1F8dbDIGJP8mmaRMcqvxBYZo/z6cZExyq96Fxmj/Fp9kTF+9Q7jRmL86i3JjcS4pB5GMca1i+kS49rF9IgRzNrG9Mlx7WP65Lg2Mn1yXDuZPjkuqpVxNh96H6PlcnSYv9UzaC7awsEsqpdRzHFRzYxijovqZhRzXFQ7o5jjovoZvRw/2QRqzfHcHBfVzyjmuKh+RjHHRfUzijmu/UyfHNd+pk+Oaz/TJ8e1n+mT49rP9Mlx7We65Ci/beI1c6Q0PceNdNG2qvLbN54XjI/ju8PkHRMM82jgW33x69M4KkCxcTLmUdWlHjuqurDB/McCvhzlzPsWt9+qv+3THq4fdoG2dBxU79XZUdULD3l3agvFfQjhff/aT0a1z7UfVe3e2FH1y8WNql8ublT1cjVG7Xb/AEmpEhE=",
      "",
      "",
      "eJzNlcsKgzAQRf9l1qFkZuLzV0oX0loQxJbqTvLvfaDUYko2IneXwL1wFjNnRmpv52pobl1P5Uj2kFB5HKm/V9373w/VY6BSOLdiqO4un7dk3tC1aWsq2ZtVmiWdw6yq36wWgbQmbgprkSyy7E/mxZOC8WRgPDkYTwHGwxYNiNGABA1I0YAcGhCapRlN04zmaUYTNaOZWtBMLWimFjRTC5qpBc3UsrupneUp7MT+AK2zwulMIQt4l0/wu1t9S/jdL8CG8BpWj83mknPrWdOwHiKl8ApHSuE1i5TCqxAphUfwf8n7J3oBQhc=",
      "",
      "eJzNlcsKgzAQRf9l1lIyM4kaf6V0Ia0FQWyp7iT/3geKLaa4Ebk7hXPhLJKTgZrbuezrW9tRMZA5OCqOA3X3sn3/d3356KkQMZonVLWXz3fqQ0LXuqmo4JAsaJZURphVdWbVR2h1doTVuy+Wwyl5+aRgPhmYTw7m48F82KAJMZqQoAkpmpBFE0KrNKNlmtE6zWihZrRSC1qpBa3UglZqQSu1oJVadi+1NTzCVsyP0JIV5yeLNJ9ZZ0b53au+pfzuL8CG8hpPj8mmkbXLs6bxPKyM4ld4ZRS/Ziuj+FVYGcWP4P9RCE9oBEJD",
      "eJzNlc0KgzAQBt9lz1Kyu4k2vkrpQVoLgmip3iTv3h9sbTHFi8h3S2AW5pCdDFS3p6Kv2qajfCCzc5QfBuquRfO8d31x6ykX9pwlVDbn19mmIaFLVZeUc0hmNEsqI8yqOrHqI7Q6O8Lq3RfL4Zg8fFIwnwzMZw/m48F82KAJMZqQoAkpmpBFE0KrNKNlmtE6zWihZrRSC1qpBa3UglZqQSu1oJVaNi+1NTzCVsyP0JwV598W6X5inRnlN6/6mvKb/wAryms8Peajbu38rWk8DwtD8RVeGIqv2cJQfBUWhuJP8P9QCHd0+EL7",
      "eJzNlUEKgzAQRe8yaymZmahNrlK6kNaCIFqqO8ndq6BgMcWNyN8l8D+8xcybger2UfRV23TkBzKXlPxtoO5dNNO/64tPT144c1lCZfOc3rloSOhV1SV5DskmzZLJHGbVVVZdJK2pncPq0lWWwz0ZeTIwnhyM5wrG48B42KABMRqQoAEpGpBFA0KzNKNpmtE8zWiiZjRTC5qpBc3UgmZqQTO1oJlaTje1NTyHrZgfoG125FgoZAVvrzP86VY/Ev70C3AgvMbVY/KlZO121jSuh51SfIV3SvE12ynFV2GnFB/B/6UQvgoVQqE=",
      "eJzNmMtqwzAQRf9Fa1Ok0Ywl+VdKF6FNIRCS0mQX/O99YOVB1FgUMb47G+5Ix2Cdi30y2/3r6rjZ7w5mOBn7FMzwfDKHj9Xu5/5wXH0ezUDEvXRmvXv7vU5+7Mz7Zrs2gxu7u3SUnI2pvyR9LGRTCFPWWZJzOMn40n3TRCiaBEXjLBaOw8IhLByPhcNYOIKF02PhYDnZYUnZYVmZsKxMWFYmLCsTlpWpgZVTcJct4gyPuMBTWjzT4+f0eeHI1+umib2Bwhdjb+D7xdgblMNi7A2aZDH2BrWzFLtv0FGLsTcotMXYK9pPrH24haOeMrz3/maT+7SXzO6TXGXdBFTRf7pAFQ2oC1RRa7pAFV2lC1RRQLpAFa2iC1RRFapAXOF/XaAKqesCoZma0UzNaKZmNFMzmqkZzdSMZmpGM7WgmVrQTC1ophY0UwuaqQXN1IJmalE3Ndv85cpkb4AKK4eYF47hkuUwwatbvSW8egM0hO/V2+Kf8Nfv/BlevVlawpeVZvPvfmK+P+V9WTszQ2U1zAyVj+TMUPkoPB4K5Vfw76Fx/AKRJPKW",
      "",
      "eJzNmt1qAjEQRt8l10tJJpn8+CqlF9JaEERL9U723Ytld10xNamE2e9OZCZ7vDknime1O7yvT9vD/qhWZ6VfjFGr17M6fq33lzeOp/X3Sa2ILPtObfYfv6+j7Tv1ud1t1Mr03d10ZB5mY/LXSRszsymEYdZo4mk4cf/WXXAIC8di4TgsHMbC8Vg4AQsnYuEkKBzSWDhYViYsKxOWlQnLyoRlZcKyMmFZmRpYOQVzfUQs8DC7OExzIPP4c9rx4Ojm56aBvYHCl2K3DXy/GHuDOCzG3qAki7E3yM5i7A0atRh7g6Atxl5Tv6QfPsKQpxHeWnvzkPtpy24Ytolns2YAqumfKFBNAUWBarImCeRqWiUKVBMgUaCaqogC1aRCFKjG/6JANVIXBUIztUMztUMztUMzNaOZmtFMzWimZjRTM5qpGc3UjGZqRjM1o5ma0Uzt0UztxU3t9PjN1ZG+AcqczGmkN17PTuYw4It7vS2+eAXa4os342l8YzL44oVpiy/eo3/hezud7F0OX7xebfHFW9cWX7yMz+One/wg3tG2+NjV9d5P+IEz+NjVLeJjV7eIj13dOX7MXBoCdnWL+ODVvV4aQu7KFsCrW8IHr24JH7y6M/zcjTOCV7eEj13dQNNfdoL1GXzs6hbxsatbxMeu7hzfuQw+dnVL+CmfLT1u0Xxp/G0r5WNRWMor+vGS0XkzlrbyQipt5T3w91bf/wB7GEED",
      "eJzNlcsKgzAQRf9l1lIyM1Ebf6V0Ia0FQbRUd5J/74O0tZjiRuTuErgXzmLmzEhNdyqHumt7KkYyu5SKw0j9tWyf/34obwMVImJdQlV7fr1z8Qld6qaign0yS7NkEsKsqt+sukhaUxvC6tJJlv0xefBkYDw5GM8ejMeB8bBBA2I0IEEDUjQgiwaEZmlG0zSjeZrRRM1ophY0UwuaqQXN1IJmakEztWxuams4hK2YH6B5Vjj7UEzg7T7Ab271NeE3vwArwmtcPSZ/l6ydz5rG9bBQiq/wQim+Zgul+CoslOIj+L/k/R1AVUIu",
      "eJzNlcsKgzAQRf9l1lIyM4mvXyldSGtBEFuqO8m/90HEFlPciNydwrlwFsnJSO3tXA3NreupHMkcHJXHkfp71b3/+6F6DFSKsMsTqrvL5ztPfULXpq2pZJ8saJZUAsyqOrNaRGh1NsBauC+W/Sl5+aRgPhmYTw7mU4D5sEETYjQhQRNSNCGLJoRWaUbLNKN1mtFCzWilFrRSC1qpBa3UglZqQSu17F5qazjAVsyP0JIVV0wWaT6zzgT53au+pfzuL8CG8hpPj8mmkbXLs6bxPKyM4ld4ZRS/Ziuj+FVYGcWP4P+R90+t6kKI",
      "",
      "",
      "eJzNlUFqwzAQRe+itSnWjKRRfJXShWlTCASn1N4F371pEzeEjjrwN9LOBj30Yd58nd3x9Douh9M0u+Hs+qedG57Pbv4Yp+//eRk/FzcQex86t5/efr4lrJ17Pxz3bvDrS3ehfI9hHsMIwxjDAoZFDEsYJhiWMQyzhDBLCLOEMEsIs4QwSwizhDBLCLOEMEsIs4QxSxizhDFLGLOEMUsYs4TVAXD2cqM4C9+hePn+e5p83k6TeVrCFkgy/Z4N1zhBHWy9OKow9eKoItaLowpeL466OPXiqAtZL476HNSLoz4z9eKoz1e9OG21cmyrlWNbrRzbauXYVivHtlo5Flo583bBzqeHC65YoT0trNByFlZoIwsrtIaBpcJ2W1hhCy2ssC0WVrDawgr2WRhmScIsSZglCbMkYZYIZolglghmiWCWiD6AxHHDUvZ3jPsbpg/gAUsKpg/gP2xdvwAuF4p/",
      "eJztnNFq3DAQRf/Fz0vRSCONtb9S+hDaFAIhLU3ewv57HVLLxqvOkK7SmxV+ygYk6/h690hjCz8P9z++3jzd/Xh4HI7PQxiOn5+Hx583Dy//PT7d/Hoaju4w3D58m/6eDsP3u/vb4Uinw1kr4pDSn5bT53EsrbOvNY+eaG4efTKaZ5G5sfNxaRtPXw4DXyV1/I/UgWOhZhcvoE41apLgywDCPuv0Ict8ntPncTUEv3PmAqBvl/3YgJ4dldbsOK3ppyFykyGcV4Yg12SMWIJiYjEuAkfJpbmQ3yIRAClTKM1zcFsk//GQqrMDFqmqfixS1etYpBbSbozUwsSNkdrotSlSGx23RPIIextIEHsntyCJbJEg9taRIPbWkSD21pEg9taRIPbWkSD21pEg9taRIPZWkQLE3joSwN7RrSpK58ctEsDeFhLA3hYSwN4WEsDeFhLA3hYSwN4WEsDeFhLA3gYSA+xtISHszcvBI/P2Zg4j7G0gIextICHsbSAh7G0gIextICHsbSAh7G0gIeytI0WEvQ0kiL3HZULhnLdIEHvrSBB760gQe+tIEHvrSBB760gQe+tIEHvrSBB7q0gJYm8dCWHvuHqaHVPYIiHsbSAh7G0gIextICHsbSAh7G0gIextICHsbSAh7K0jCcLeBhLA3onHsg0mxbMHqQKwd5omuYKUXNwiAeydUvALkpxdOIC9xY0lJSE+Swlgb6FUHsqLp+2NQQHYW3xIC9LZekkA9pZAshz8bOOZAOwtHMrzOIluuz1PAPaWyMuFi9Fonnj+4qXVZlAK1bbBzyc7CW/1U3775kvAFHIVuQDmsTfmMs46FydGLkQ5l5rLOzK267IrczzT6uD/ECNg7n3HGKcJoaw0/KRlPRlyYyipu3xZkIAVQ59BItY5XQaJWJ11GSRiTdllkIiVcJdBItbvXQb58auO6wgyf/wy5UqC7KuuAQa5VzaNgtwrm0ZB7pVNoyD3yqZRkHtl0yjIvbJpFGRnlU3w5dBTjt4KMnB5BOjYXfLKidxZZQMLklxnpQ0wyc5qG2CSnRU3wCQ7q26ASXZW3gCT7Ky+ASbZWYEDTLKzCgeY5F7itEpyr3EaJYl4OV6nSe41Tqsk9xqnVZJ7jdMqyc5qHMnLfd5RLnlJLCFeQPm2aOI47z2WGIxo9F0jn6oLj+Vlr2n1pZxCfu1Tn2OtTvXpJM9n4ml1kSm9Lov+0ksd6qVXVbhmr6pczF7VH5LZq/odU3qdTr8BfuWkQg==",
      "",
      "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",
      ""
    ],
    "fileMap": {
      "1": {
        "source": "mod types;\n\n/// @notice This contract implements a private coin toss game between users.\n/// @dev The contract is deployed with a bet_amount and a private oracle.\n///      The user can create a bet note with a bet (true or false) which is later settled by the private oracle.\n///      The users that betted for the winner receive (in equal parts) the bets made by the users that lost.\ncontract CoinToss {\n\n    /////////////////////////////////////////////////////////////////////\n    //                             Imports                             //\n    /////////////////////////////////////////////////////////////////////\n\n\n    use crate::types::oracle::{\n        DivinityAddressSubmitQuestionStruct, \n        FromSubmitQuestionStruct, \n        PrivateOraclePrivateContextInterface, \n    };\n\n    use crate::types::{\n        bet_note::{BetNote, BetNoteMethods, BET_NOTE_LEN},\n        reveal_note::{RevealNote, RevealNoteMethods, REVEAL_NOTE_LEN},\n        config_note::{ConfigNote, ConfigNoteMethods, CONFIG_NOTE_LEN},\n        round_data::{RoundData, RoundDataSerializationMethods, ROUND_DATA_SERIALIZED_LEN, Phase},\n        token::{\n            AccountsBroadcastEscrowNoteForStruct,\n            FromEscrowStruct,\n            FromTransferStruct, \n            OwnerEscrowStruct,\n            OwnerSettleEscrowStruct,\n            RecipientSettleEscrowStruct,\n            TokenPrivateContextInterface, \n            ToTransferStruct,\n            FromUnshieldStruct,\n            ToUnshieldStruct,\n            FromShieldStruct,\n            TokenPublicContextInterface\n        }\n    };\n\n    use dep::aztec::{\n        context::Context,\n        types::type_serialization::{\n            field_serialization::{FieldSerializationMethods, FIELD_SERIALIZED_LEN},\n            bool_serialization::{BoolSerializationMethods, BOOL_SERIALIZED_LEN},\n            aztec_address_serialization::{AztecAddressSerializationMethods, AZTEC_ADDRESS_SERIALIZED_LEN},\n        },\n        note::{\n            note_getter_options::NoteGetterOptions,\n            note_header::NoteHeader,\n            note_viewer_options::NoteViewerOptions,\n            utils as note_utils\n        },\n        oracle::{\n            get_public_key::get_public_key,\n            rand::rand\n        },\n        selector::compute_selector,\n        state_vars::{\n            immutable_singleton::ImmutableSingleton,\n            set::Set,\n            map::Map, \n            public_state::PublicState\n        },\n        types::address::AztecAddress,\n    };\n\n    use dep::std::option::Option;\n\n    /////////////////////////////////////////////////////////////////////\n    //                             Storage                             //\n    /////////////////////////////////////////////////////////////////////\n\n    global ROUND_ID_SLOT = 1;\n    global PHASE_LENGTH_SLOT = 2;\n    global BET_AMOUNT_SLOT = 3;\n    global ORACLE_ADDRESS_SLOT = 4;\n    global DIVINITY_ADDRESS_SLOT = 5;\n    global TOKEN_ADDRESS_SLOT = 6;\n    global RESULTS_SLOT = 7;\n    global ROUND_DATA_SLOT = 8;\n    global CONFIG_NOTE_SLOT = 9;\n    global BETS_SLOT = 10;\n    global REVEALS_SLOT = 11;\n\n    /// @member config The config note, containing the divinity address, the private oracle address, the token address and the bet amount\n    /// @member bets The set of bet notes (ie active bets)\n    struct Storage {\n        ////////////////////////////// public //////////////////////////\n        round_id: PublicState<Field, FIELD_SERIALIZED_LEN>,\n        phase_length: PublicState<Field, FIELD_SERIALIZED_LEN>,\n        bet_amount: PublicState<Field, FIELD_SERIALIZED_LEN>,\n        oracle_address: PublicState<AztecAddress, AZTEC_ADDRESS_SERIALIZED_LEN>,\n        divinity_address: PublicState<AztecAddress, AZTEC_ADDRESS_SERIALIZED_LEN>,\n        token_address: PublicState<AztecAddress, AZTEC_ADDRESS_SERIALIZED_LEN>,\n        results: Map<PublicState<bool, BOOL_SERIALIZED_LEN>>,\n        rounds: Map<PublicState<RoundData, ROUND_DATA_SERIALIZED_LEN>>,\n\n        ///////////////////////////// private //////////////////////////\n        config: ImmutableSingleton<ConfigNote, CONFIG_NOTE_LEN>,\n        bets: Set<BetNote, BET_NOTE_LEN>,\n        reveals: Set<RevealNote, REVEAL_NOTE_LEN>,\n    }\n\n    impl Storage {\n        fn init(context: Context) -> Self {\n            Storage {\n                ////////////////////////////// public //////////////////////////\n                round_id: PublicState::new(context, ROUND_ID_SLOT, FieldSerializationMethods),\n                phase_length: PublicState::new(context, PHASE_LENGTH_SLOT, FieldSerializationMethods),\n                bet_amount: PublicState::new(context, BET_AMOUNT_SLOT, FieldSerializationMethods),\n                oracle_address: PublicState::new(context, ORACLE_ADDRESS_SLOT, AztecAddressSerializationMethods),\n                divinity_address: PublicState::new(context, DIVINITY_ADDRESS_SLOT, AztecAddressSerializationMethods),\n                token_address: PublicState::new(context, TOKEN_ADDRESS_SLOT, AztecAddressSerializationMethods),\n                results: Map::new(\n                    context,\n                    RESULTS_SLOT,\n                    |context, slot| {\n                        PublicState::new(\n                            context,\n                            slot,\n                            BoolSerializationMethods,\n                        )\n                    },\n                ),\n                 rounds: Map::new(\n                    context,\n                    ROUND_DATA_SLOT,\n                    |context, slot| {\n                        PublicState::new(\n                            context,\n                            slot,\n                            RoundDataSerializationMethods,\n                        )\n                    },\n                ),\n\n                ////////////////////////////// private //////////////////////////\n                config: ImmutableSingleton::new(\n                    context,\n                    CONFIG_NOTE_SLOT,\n                    ConfigNoteMethods,\n                ),\n                bets: Set::new(context, BETS_SLOT, BetNoteMethods),\n                reveals: Set::new(context, REVEALS_SLOT, RevealNoteMethods),\n            }\n        }\n    }\n\n    /////////////////////////////////////////////////////////////////////\n    //                           Constructor                           //\n    /////////////////////////////////////////////////////////////////////\n\n    /// @notice         Constructor for the contract, setting the config note\n    /// @custom:privacy private\n    /// @param          divinity The divinity address, invoked by the oracle\n    /// @param          private_oracle The private oracle contract address\n    /// @param          token The token used to bet\n    /// @param          bet_amount The bet amount\n    /// @param          phase_length The phase length\n    #[aztec(private)]\n    fn constructor(divinity: AztecAddress, private_oracle: AztecAddress, token: AztecAddress, bet_amount: Field, phase_length: Field) {\n        let mut config_note = ConfigNote::new(divinity, private_oracle, token, bet_amount);\n        storage.config.initialize(&mut config_note, Option::none(), false);\n\n        let selector = compute_selector(\"initialize(Field,Field,(Field),(Field),(Field))\");\n        context.call_public_function(context.this_address(), selector, [phase_length, bet_amount, private_oracle.address, divinity.address, token.address]);\n    }\n\n    /////////////////////////////////////////////////////////////////////\n    //                   Public external functions                    //\n    /////////////////////////////////////////////////////////////////////\n\n    #[aztec(public)]\n    fn start_next_round() {\n        let timestamp = context.timestamp();\n        let phase_length = storage.phase_length.read();\n\n        let current_round_id = storage.round_id.read();\n        if(current_round_id != 0) {\n            let current_round_data = storage.rounds.at(storage.round_id.read()).read();\n            assert(current_round_data.phase >= Phase::REVEAL, \"Current round not finished\");\n        }\n        let next_round_id = current_round_id + 1;\n        storage.round_id.write(next_round_id);\n        storage.rounds.at(next_round_id).write(RoundData::new(Phase::BETTING, (timestamp + phase_length) as u120, 0, 0, 0));\n    }\n\n    #[aztec(public)]\n    fn end_reveal_phase() {\n        let current_round_id = storage.round_id.read(); \n        let current_round_data = storage.rounds.at(current_round_id).read();\n        let number_of_bettors = current_round_data.bettors;\n        let number_of_winners = current_round_data.reveals_count;\n        let timestamp = context.timestamp() as u120;\n\n        assert(current_round_data.phase == Phase::REVEAL, \"Reveal phase over\");\n        assert(timestamp >= current_round_data.current_phase_end, \"Reveal phase not finished\");\n        \n        let bet_amount = storage.bet_amount.read() as u120;\n        let claim_amount = number_of_bettors * bet_amount / number_of_winners;\n\n        let timestamp = context.timestamp() as u120;\n        let phase_length = storage.phase_length.read() as u120;\n\n        let updated_round_data = RoundData::new(Phase::CLAIM, (timestamp + phase_length) as u120, number_of_winners, number_of_bettors, claim_amount);\n        storage.rounds.at(current_round_id).write(updated_round_data);\n    }\n\n    /////////////////////////////////////////////////////////////////////\n    //                   Public internal functions                    //\n    /////////////////////////////////////////////////////////////////////\n\n    #[aztec(public)]\n    fn initialize(phase_length: Field, bet_amount: Field, oracle_address: AztecAddress, divinity_address: AztecAddress, token_address: AztecAddress) {\n        assert(context.msg_sender() == context.this_address());\n\n        storage.phase_length.write(phase_length);\n        storage.bet_amount.write(bet_amount);\n        storage.oracle_address.write(oracle_address);\n        storage.divinity_address.write(divinity_address);\n        storage.token_address.write(token_address);\n    }\n\n    #[aztec(public)]\n    internal fn end_bet_phase(round_id: Field) {\n        let timestamp = context.timestamp() as u120;\n        let phase_length = storage.phase_length.read() as u120;\n\n        // Check that the phase is BETTING \n        let current_round_id = storage.round_id.read();\n        assert(round_id == current_round_id, \"Round id mismatch\");\n\n        let current_round_data = storage.rounds.at(storage.round_id.read()).read();\n        assert(current_round_data.phase == Phase::BETTING, \"Not in bet phase\");\n\n        // Check that the timestamp is after the end of the bet phase\n        assert(timestamp >= current_round_data.current_phase_end, \"Bet phase not finished\");\n\n        // Set state to AWAITING_ANSWER and update the end phase timestamp\n        let new_round_data = RoundData::new(Phase::AWAITING_ANSWER, (timestamp + phase_length) as u120, 0, current_round_data.bettors, 0);\n        storage.rounds.at(current_round_id).write(new_round_data);\n    }\n\n    /////////////////////////////////////////////////////////////////////\n    //                   Private external functions                    //\n    /////////////////////////////////////////////////////////////////////\n    #[aztec(private)]\n    fn bet(bet: bool, round_id: Field, bet_randomness: Field, unshield_nonce: Field) {\n        let config_note = storage.config.get_note();\n        let token = config_note.token;\n        let bet_amount = config_note.bet_amount;\n        let bettor = AztecAddress::new(context.msg_sender());\n        let address_this = AztecAddress::new(context.this_address());\n        let token = TokenPrivateContextInterface::at(token.address);\n\n        // Unshield private balance from the user to the coin toss. This requires an authwit.\n        let _ = token.unshield(\n            &mut context,\n            FromUnshieldStruct { address: bettor.address }, \n            ToUnshieldStruct {address: address_this.address }, \n            bet_amount, \n            unshield_nonce\n        );\n\n        // Create a bet note for the user. This method nullifies the randomness and round_id combinarion.\n        let mut user_bet: BetNote = BetNote::new(&mut context, bettor, round_id, bet, bet_randomness);\n        storage.bets.insert(&mut user_bet, true);\n\n        let selector = compute_selector(\"_increase_bettors(Field)\");\n        context.call_public_function(context.this_address(), selector, [round_id]);\n    }\n\n    /////////////////////////////////////////////////////////////////////\n    //                   Public internal functions                    //\n    /////////////////////////////////////////////////////////////////////\n    #[aztec(public)]\n    internal fn _increase_bettors(\n        round_id: Field,\n    ) {\n        let current_round_id = storage.round_id.read();\n        assert(current_round_id == round_id, \"Round id mismatch\");\n\n        let current_round_data = storage.rounds.at(current_round_id).read();\n        assert(current_round_data.phase >= Phase::BETTING, \"Betting phase over\");\n\n        let updated_round_data = current_round_data.add_bettor();\n        storage.rounds.at(round_id).write(updated_round_data);\n    }\n\n    #[aztec(public)]\n    internal fn _set_result(caller: Field, round_id: Field, answer: Field) {\n        let oracle = storage.oracle_address.read();\n        let timestamp = context.timestamp() as u120;\n        let phase_length = storage.phase_length.read() as u120;\n\n        assert(caller == oracle.address, \"Caller is not the oracle\");\n\n        let current_round_id = storage.round_id.read();\n        assert(current_round_id == round_id, \"Round id mismatch\");\n\n        let current_round_data = storage.rounds.at(current_round_id).read();\n        assert(current_round_data.phase == Phase::AWAITING_ANSWER, \"Not in awaiting answer phase\");\n\n        let new_round_data = RoundData::new(Phase::REVEAL, (timestamp + phase_length) as u120, 0, current_round_data.bettors, 0);\n        storage.rounds.at(round_id).write(new_round_data);\n\n        storage.results.at(round_id).write(answer as bool);\n    }\n\n    #[aztec(public)]\n    internal fn _increase_reveals(round_id: Field, user_bet: Field) {\n        let timestamp = context.timestamp() as u120;\n\n        let round_data = storage.rounds.at(round_id).read();\n        assert(round_data.phase == Phase::REVEAL, \"Reveal phase over\");\n        assert(timestamp < round_data.current_phase_end, \"Reveal phase finished\");\n\n        let results = storage.results.at(round_id).read();\n        assert(results == user_bet as bool, \"User bet does not match result\");\n\n        let updated_round_data = round_data.increase_reveal_count();\n        storage.rounds.at(round_id).write(updated_round_data);\n    }\n\n    #[aztec(public)]\n    internal fn _claim_funds(round_id: Field, secret_hash: Field) {\n        let address_this = AztecAddress::new(context.this_address());\n        let token = TokenPublicContextInterface::at(storage.token_address.read().address);\n\n        let round_data = storage.rounds.at(round_id).read();\n\n        let claim_amount = round_data.claim_amount;\n\n        let _ = token.shield(\n            context,\n            FromShieldStruct { address: address_this.address },\n            claim_amount as Field,\n            secret_hash,\n            0\n        );\n    }\n\n    /////////////////////////////////////////////////////////////////////\n    //                   Private internal functions                    //\n    /////////////////////////////////////////////////////////////////////\n\n    /// @notice         Calls the oracle to get the result of the bet round\n    /// @custom:privacy private\n    /// @param          round_id The id of the current round\n    #[aztec(private)]\n    fn roll(round_id: Field, oracle_nonce: Field) {\n        let sender = AztecAddress::new(context.msg_sender());\n        let config_note = storage.config.get_note();\n        let divinity = config_note.divinity;\n        let oracle = config_note.private_oracle;\n        let oracle_contract = PrivateOraclePrivateContextInterface::at(oracle.address);\n        let address_this = AztecAddress::new(context.this_address());\n\n        // Create the question in the oracle\n        let callback = [address_this.address, round_id, 0, 0, 0, 0];\n        let __ = oracle_contract.submit_question(\n            &mut context,\n            FromSubmitQuestionStruct { address: sender.address },\n            round_id,\n            DivinityAddressSubmitQuestionStruct { address: divinity.address },\n            oracle_nonce,\n            callback\n        );\n\n        // End the bet phase and update public state\n        // This checks that the round id is correct and that the phase is BETTING\n        let selector = compute_selector(\"end_bet_phase(Field)\");\n        context.call_public_function(context.this_address(), selector, [round_id]);\n    }\n\n    /// @notice         Called by the oracle to set the result of the bet round\n    /// @param          answer The answer of the oracle\n    /// @param          data The data of the oracle \n    ///                 data[0]: round_id\n    ///                 data[1:5]: unused\n    #[aztec(private)]\n    fn oracle_callback(answer: Field, data: [Field; 5]) {\n        let round_id = data[0];\n        let selector = compute_selector(\"_set_result(Field,Field,Field)\");\n        context.call_public_function(context.this_address(), selector, [context.msg_sender(), round_id, answer]);\n    }\n\n    #[aztec(private)]\n    fn reveal(round_id: Field, user_randomness: Field) {\n        let options = NoteGetterOptions::new().select(1, round_id).select(3, user_randomness).set_limit(1);\n        let bet_notes = storage.bets.get_notes(options);\n        let bettor = AztecAddress::new(context.msg_sender());\n\n        if (bet_notes[0].is_some()) {\n            let bet_note = bet_notes[0].unwrap_unchecked();\n            let user_bet = bet_note.bet;\n            \n            let mut reveal_note: RevealNote = RevealNote::new(bettor, round_id, user_randomness);\n            storage.reveals.insert(&mut reveal_note, true);\n\n            storage.bets.remove(bet_note);\n\n            let selector = compute_selector(\"_increase_reveals(Field,Field)\");\n            context.call_public_function(context.this_address(), selector, [round_id, user_bet as Field]);\n        } else {\n            assert(false, \"Bet note not found\");\n        }\n    }\n\n    #[aztec(private)]\n    fn claim(round_id: Field, secret_hash: Field) {\n        let bettor = AztecAddress::new(context.msg_sender());\n        let options = NoteGetterOptions::new().select(0, bettor.address).select(1, round_id).set_limit(1);\n        let reveal_notes = storage.reveals.get_notes(options);\n\n        if (reveal_notes[0].is_some()) {\n            let reveal_note = reveal_notes[0].unwrap_unchecked();\n            storage.reveals.remove(reveal_note);\n\n            let selector = compute_selector(\"_claim_funds(Field,Field)\");\n            context.call_public_function(context.this_address(), selector, [round_id,secret_hash]);\n        } else {\n            assert(false, \"Reveal note not found\");\n        }\n    }\n\n    /////////////////////////////////////////////////////////////////////\n    //             Public unconstrained external functions             //\n    /////////////////////////////////////////////////////////////////////\n\n    /// @notice         Gets the config note\n    /// @custom:privacy unconstrained\n    /// @return         The config note (divinity, private oracle, token, bet_amount)\n    unconstrained fn get_config_unconstrained() -> ConfigNote {\n        storage.config.view_note()\n    }\n\n    /// @notice         Gets the bet notes for an user\n    /// @custom:privacy unconstrained\n    /// @param          start_offset The offset to start from\n    /// @return         The bet notes (padded with empty notes, up to 10)\n    unconstrained fn get_user_bets_unconstrained(start_offset: u32) -> [Option<BetNote>; 10] {\n        let user_bets_getter_option = NoteViewerOptions::new().set_offset(start_offset);\n        storage.bets.view_notes(user_bets_getter_option)\n    }\n\n    /// @notice         Gets the reveal notes for an user\n    /// @custom:privacy unconstrained\n    /// @param          start_offset The offset to start from\n    /// @return         The reveal notes (padded with empty notes, up to 10)\n    unconstrained fn get_reveal_notes_unconstrained(start_offset: u32) -> [Option<RevealNote>; 10] {\n        let reveal_notes_getter_option = NoteViewerOptions::new().set_offset(start_offset);\n        storage.reveals.view_notes(reveal_notes_getter_option)\n    }\n\n    /// @notice         Compute the note hash and nullifier for a note\n    /// @custom:privacy unconstrained\n    /// @param          contract_address The contract address (this)\n    /// @param          nonce The nonce\n    /// @param          storage_slot The storage slot of the note\n    /// @param          preimage The preimage of the note\n    /// @return         The note hash and nullifier\n    unconstrained fn compute_note_hash_and_nullifier(contract_address: Field, nonce: Field, storage_slot: Field, preimage: [Field; CONFIG_NOTE_LEN]) -> [Field; 4] {\n        let note_header = NoteHeader::new(contract_address, nonce, storage_slot);\n\n        if(storage_slot == BETS_SLOT) {\n            note_utils::compute_note_hash_and_nullifier(BetNoteMethods, note_header, preimage)\n        } else if(storage_slot == REVEALS_SLOT) {\n            note_utils::compute_note_hash_and_nullifier(RevealNoteMethods, note_header, preimage)\n        } else {\n            note_utils::compute_note_hash_and_nullifier(ConfigNoteMethods, note_header, preimage)\n        }\n    }\n\n    unconstrained fn get_phase_length_unconstrained() -> Field {\n        storage.phase_length.read()\n    }\n\n    unconstrained fn get_bet_amount_unconstrained() -> Field {\n        storage.bet_amount.read()\n    }\n\n    unconstrained fn get_oracle_address_unconstrained() -> AztecAddress {\n        storage.oracle_address.read()\n    }\n\n    unconstrained fn get_divinity_address_unconstrained() -> AztecAddress {\n        storage.divinity_address.read()\n    }\n\n    unconstrained fn get_token_address_unconstrained() -> AztecAddress {\n        storage.token_address.read()\n    }\n\n    unconstrained fn get_round_id() -> Field {\n        storage.round_id.read()\n    }\n\n    unconstrained fn get_round_data(round_id: Field) -> RoundData {\n        storage.rounds.at(round_id).read()\n    }\n\n    unconstrained fn get_result(round_id: Field) -> bool {\n        storage.results.at(round_id).read()\n    }\n\n    /// @notice         Gets a bet note by its round id and randomness combination and checks whether these params were nullified\n    /// @custom:privacy unconstrained\n    /// @param          round_id The id of the round this bet was made in\n    /// @param          randomness The randomness the user used for this bet in this round\n    /// @param          bet_id The id of the bet\n    /// @return         A boolean indicating whether a bet with this combination of fields has been initialized or not\n    unconstrained fn is_round_randomness_nullified(round_id: Field, randomness: Field) -> bool {\n        BetNote::is_round_randomness_nullified(round_id, randomness)\n    }\n}",
        "path": "/home/shaito/wonderland/aztec-coin-toss-pvp/src/main.nr"
      },
      "4": {
        "source": "mod poseidon;\nmod mimc;\n\n#[foreign(sha256)]\npub fn sha256<N>(_input: [u8; N]) -> [u8; 32] {}\n\n#[foreign(blake2s)]\npub fn blake2s<N>(_input: [u8; N]) -> [u8; 32] {}\n\nstruct PedersenPoint {\n   x : Field,\n   y : Field,\n}\n\npub fn pedersen_commitment<N>(input: [Field; N]) -> PedersenPoint {\n    pedersen_commitment_with_separator(input, 0)\n}\n\n#[foreign(pedersen)]\npub fn __pedersen_commitment_with_separator<N>(_input: [Field; N], _separator: u32) -> [Field; 2] {}\n\npub fn pedersen_commitment_with_separator<N>(input: [Field; N], separator: u32) -> PedersenPoint {\n    let values = __pedersen_commitment_with_separator(input, separator);\n    PedersenPoint { x: values[0], y: values[1] }\n}\n\npub fn pedersen_hash<N>(input: [Field; N]) -> Field {\n    pedersen_hash_with_separator(input, 0)\n}\n\n#[foreign(pedersen_hash)]\npub fn pedersen_hash_with_separator<N>(_input: [Field; N], _separator: u32) -> Field {}\n\npub fn hash_to_field<N>(_input: [Field; N]) -> Field {\n    let mut inputs_as_bytes = [];\n\n    for i in 0..N {\n        let input_bytes = _input[i].to_le_bytes(32);\n        for i in 0..32 {\n            inputs_as_bytes = inputs_as_bytes.push_back(input_bytes[i]);\n        }\n    }\n\n    let hashed_input = blake2s(inputs_as_bytes);\n    crate::field::bytes32_to_field(hashed_input)\n}\n\n#[foreign(keccak256)]\npub fn keccak256<N>(_input: [u8; N], _message_size: u32) -> [u8; 32] {}\n\n",
        "path": "std/hash.nr"
      },
      "33": {
        "source": "struct Option<T> {\n    _is_some: bool,\n    _value: T,\n}\n\nimpl<T> Option<T> {\n    /// Constructs a None value\n    pub fn none() -> Self {\n        Self { _is_some: false, _value: crate::unsafe::zeroed() }\n    }\n\n    /// Constructs a Some wrapper around the given value\n    pub fn some(_value: T) -> Self {\n        Self { _is_some: true, _value }\n    }\n\n    /// True if this Option is None\n    pub fn is_none(self) -> bool {\n        !self._is_some\n    }\n\n    /// True if this Option is Some\n    pub fn is_some(self) -> bool {\n        self._is_some\n    }\n\n    /// Asserts `self.is_some()` and returns the wrapped value.\n    pub fn unwrap(self) -> T {\n        assert(self._is_some);\n        self._value\n    }\n\n    /// Returns the inner value without asserting `self.is_some()`\n    /// Note that if `self` is `None`, there is no guarantee what value will be returned,\n    /// only that it will be of type `T`.\n    pub fn unwrap_unchecked(self) -> T {\n        self._value\n    }\n\n    /// Returns the wrapped value if `self.is_some()`. Otherwise, returns the given default value.\n    pub fn unwrap_or(self, default: T) -> T {\n        if self._is_some {\n            self._value\n        } else {\n            default\n        }\n    }\n\n    /// Returns the wrapped value if `self.is_some()`. Otherwise, calls the given function to return\n    /// a default value.\n    pub fn unwrap_or_else<Env>(self, default: fn[Env]() -> T) -> T {\n        if self._is_some {\n            self._value\n        } else {\n            default()\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `Some(f(x))`. Otherwise, this returns `None`.\n    pub fn map<U, Env>(self, f: fn[Env](T) -> U) -> Option<U> {\n        if self._is_some {\n            Option::some(f(self._value))\n        } else {\n            Option::none()\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `f(x)`. Otherwise, this returns the given default value.\n    pub fn map_or<U, Env>(self, default: U, f: fn[Env](T) -> U) -> U {\n        if self._is_some {\n            f(self._value)\n        } else {\n            default\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `f(x)`. Otherwise, this returns `default()`.\n    pub fn map_or_else<U, Env1, Env2>(self, default: fn[Env1]() -> U, f: fn[Env2](T) -> U) -> U {\n        if self._is_some {\n            f(self._value)\n        } else {\n            default()\n        }\n    }\n\n    /// Returns None if self is None. Otherwise, this returns `other`.\n    pub fn and(self, other: Self) -> Self {\n        if self.is_none() {\n            Option::none()\n        } else {\n            other\n        }\n    }\n\n    /// If self is None, this returns None. Otherwise, this calls the given function\n    /// with the Some value contained within self, and returns the result of that call.\n    ///\n    /// In some languages this function is called `flat_map` or `bind`.\n    pub fn and_then<U, Env>(self, f: fn[Env](T) -> Option<U>) -> Option<U> {\n        if self._is_some {\n            f(self._value)\n        } else {\n            Option::none()\n        }\n    }\n\n    /// If self is Some, return self. Otherwise, return `other`.\n    pub fn or(self, other: Self) -> Self {\n        if self._is_some {\n            self\n        } else {\n            other\n        }\n    }\n\n    /// If self is Some, return self. Otherwise, return `default()`.\n    pub fn or_else<U, Env>(self, default: fn[Env]() -> Self) -> Self {\n        if self._is_some {\n            self\n        } else {\n            default()\n        }\n    }\n\n    // If only one of the two Options is Some, return that option.\n    // Otherwise, if both options are Some or both are None, None is returned.\n    pub fn xor(self, other: Self) -> Self {\n        if self._is_some {\n            if other._is_some {\n                Option::none()\n            } else {\n                self\n            }\n        } else if other._is_some {\n            other\n        } else {\n            Option::none()\n        }\n    }\n\n    /// Returns `Some(x)` if self is `Some(x)` and `predicate(x)` is true.\n    /// Otherwise, this returns `None`\n    pub fn filter<Env>(self, predicate: fn[Env](T) -> bool) -> Self {\n        if self._is_some {\n            if predicate(self._value) {\n                self\n            } else {\n                Option::none()\n            }\n        } else {\n            Option::none()\n        }\n    }\n\n    /// Flattens an Option<Option<T>> into a Option<T>.\n    /// This returns None if the outer Option is None. Otherwise, this returns the inner Option.\n    pub fn flatten(option: Option<Option<T>>) -> Option<T> {\n        if option._is_some {\n            option._value\n        } else {\n            Option::none()\n        }\n    }\n}\n",
        "path": "std/option.nr"
      },
      "75": {
        "source": "global ARGS_LENGTH: Field = 16;\nglobal RETURN_VALUES_LENGTH: Field = 4;\n\n/**\n * Convention for constant array lengths are mainly divided in 2 classes:\n *  - FUNCTION CALL\n *  - TRANSACTION\n *\n * Agreed convention is to use MAX_XXX_PER_CALL resp. MAX_XXX_PER_TX, where XXX denotes a type of element such as\n * commitment, or nullifier, e.g.,:\n *  - MAX_NEW_NULLIFIERS_PER_CALL\n *  - MAX_NEW_COMMITMENTS_PER_TX\n *\n * In the kernel circuits, we accumulate elements such as commitments and the nullifiers from all functions calls in a\n * transaction. Therefore, we always must have:\n * MAX_XXX_PER_TX ≥ MAX_XXX_PER_CALL\n *\n * For instance:\n * MAX_NEW_COMMITMENTS_PER_TX ≥ MAX_NEW_COMMITMENTS_PER_CALL\n * MAX_NEW_NULLIFIERS_PER_TX ≥ MAX_NEW_NULLIFIERS_PER_CALL\n *\n */\n\n// docs:start:constants\n// \"PER CALL\" CONSTANTS\nglobal MAX_NEW_COMMITMENTS_PER_CALL: Field = 16;\nglobal MAX_NEW_NULLIFIERS_PER_CALL: Field = 16;\nglobal MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL: Field = 4;\nglobal MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL: Field = 4;\nglobal MAX_NEW_L2_TO_L1_MSGS_PER_CALL: Field = 2;\nglobal MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL: Field = 16;\nglobal MAX_PUBLIC_DATA_READS_PER_CALL: Field = 16;\nglobal MAX_READ_REQUESTS_PER_CALL: Field = 32;\nglobal MAX_PENDING_READ_REQUESTS_PER_CALL: Field = 32;\n\n// \"PER TRANSACTION\" CONSTANTS\nglobal MAX_NEW_COMMITMENTS_PER_TX: Field = 64;\nglobal MAX_NEW_NULLIFIERS_PER_TX: Field = 64;\nglobal MAX_PRIVATE_CALL_STACK_LENGTH_PER_TX: Field = 8;\nglobal MAX_PUBLIC_CALL_STACK_LENGTH_PER_TX: Field = 8;\nglobal MAX_NEW_L2_TO_L1_MSGS_PER_TX: Field = 2;\nglobal MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_TX: Field = 16;\nglobal MAX_PUBLIC_DATA_READS_PER_TX: Field = 16;\nglobal MAX_NEW_CONTRACTS_PER_TX: Field = 1;\nglobal MAX_OPTIONALLY_REVEALED_DATA_LENGTH_PER_TX: Field = 4;\nglobal MAX_READ_REQUESTS_PER_TX: Field = 128;\nglobal MAX_PENDING_READ_REQUESTS_PER_TX: Field = 128;\nglobal NUM_ENCRYPTED_LOGS_HASHES_PER_TX: Field = 1;\nglobal NUM_UNENCRYPTED_LOGS_HASHES_PER_TX: Field = 1;\n// docs:end:constants\n\n// ROLLUP CONTRACT CONSTANTS - constants used only in l1-contracts\nglobal NUMBER_OF_L1_L2_MESSAGES_PER_ROLLUP: Field = 16;\n// TODO(961): Use this constant everywhere instead of hard-coded \"2\".\nglobal KERNELS_PER_BASE_ROLLUP: Field = 2;\nglobal MAX_NEW_NULLIFIERS_PER_BASE_ROLLUP: Field = 128;\nglobal MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_BASE_ROLLUP: Field = 32;\nglobal MAX_PUBLIC_DATA_READS_PER_BASE_ROLLUP: Field = 32;\n\n// TREES RELATED CONSTANTS\nglobal VK_TREE_HEIGHT: Field = 3;\nglobal FUNCTION_TREE_HEIGHT: Field = 5;\nglobal CONTRACT_TREE_HEIGHT: Field = 16;\nglobal NOTE_HASH_TREE_HEIGHT: Field = 32;\nglobal PUBLIC_DATA_TREE_HEIGHT: Field = 254;\nglobal NULLIFIER_TREE_HEIGHT: Field = 20;\nglobal L1_TO_L2_MSG_TREE_HEIGHT: Field = 16;\nglobal ROLLUP_VK_TREE_HEIGHT: Field = 8;\n\n// SUB-TREES RELATED CONSTANTS\nglobal CONTRACT_SUBTREE_HEIGHT: Field = 1;\nglobal CONTRACT_SUBTREE_SIBLING_PATH_LENGTH: Field = 15;\nglobal NOTE_HASH_SUBTREE_HEIGHT: Field = 7;\nglobal NOTE_HASH_SUBTREE_SIBLING_PATH_LENGTH: Field = 25;\nglobal NULLIFIER_SUBTREE_HEIGHT: Field = 7;\nglobal ARCHIVE_HEIGHT: Field = 16;\nglobal NULLIFIER_SUBTREE_SIBLING_PATH_LENGTH: Field = 13;\nglobal L1_TO_L2_MSG_SUBTREE_HEIGHT: Field = 4;\nglobal L1_TO_L2_MSG_SUBTREE_SIBLING_PATH_LENGTH: Field = 12;\n\n// MISC CONSTANTS\nglobal FUNCTION_SELECTOR_NUM_BYTES: Field = 4;\nglobal MAPPING_SLOT_PEDERSEN_SEPARATOR: Field = 4;\nglobal NUM_FIELDS_PER_SHA256: Field = 2;\nglobal ARGS_HASH_CHUNK_LENGTH: u32 = 32;\nglobal ARGS_HASH_CHUNK_COUNT: u32 = 16;\n\n\n// NOIR CONSTANTS - constants used only in yarn-packages/noir-contracts\n// Some are defined here because Noir doesn't yet support globals referencing other globals yet.\n// Move these constants to a noir file once the issue bellow is resolved:\n// https://github.com/noir-lang/noir/issues/1734\nglobal L1_TO_L2_MESSAGE_LENGTH: Field = 8;\nglobal L1_TO_L2_MESSAGE_ORACLE_CALL_LENGTH: Field = 26;\nglobal MAX_NOTE_FIELDS_LENGTH: Field = 20;\n// GET_NOTE_ORACLE_RETURN_LENGT = MAX_NOTE_FIELDS_LENGTH + 1 + 2\n// The plus 1 is 1 extra field for nonce.\n// + 2 for EXTRA_DATA: [number_of_return_notes, contract_address]\nglobal GET_NOTE_ORACLE_RETURN_LENGTH: Field = 23;\nglobal MAX_NOTES_PER_PAGE: Field = 10;\n// VIEW_NOTE_ORACLE_RETURN_LENGTH = MAX_NOTES_PER_PAGE * (MAX_NOTE_FIELDS_LENGTH + 1) + 2;\nglobal VIEW_NOTE_ORACLE_RETURN_LENGTH: Field = 212;\nglobal CALL_CONTEXT_LENGTH: Field = 7;\nglobal BLOCK_HEADER_LENGTH: Field = 7;\nglobal FUNCTION_DATA_LENGTH: Field = 4;\nglobal CONTRACT_DEPLOYMENT_DATA_LENGTH: Field = 6;\n// Change this ONLY if you have changed the PrivateCircuitPublicInputs structure.\n// In other words, if the structure/size of the public inputs of a function call changes then we\n// should change this constant as well as the offsets in private_call_stack_item.nr\nglobal PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH: Field = 155;\nglobal CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH: Field = 3;\nglobal CONTRACT_STORAGE_READ_LENGTH: Field = 2;\n// Change this ONLY if you have changed the PublicCircuitPublicInputs structure.\nglobal PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH: Field = 142;\nglobal GET_NOTES_ORACLE_RETURN_LENGTH: Field = 674;\nglobal EMPTY_NULLIFIED_COMMITMENT: Field = 1000000;\nglobal CALL_PRIVATE_FUNCTION_RETURN_SIZE: Field = 161;\nglobal PUBLIC_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH: Field = 87;\nglobal PRIVATE_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH: Field = 144;\nglobal COMMITMENTS_NUM_BYTES_PER_BASE_ROLLUP: Field = 4096;\nglobal NULLIFIERS_NUM_BYTES_PER_BASE_ROLLUP: Field = 4096;\nglobal PUBLIC_DATA_WRITES_NUM_BYTES_PER_BASE_ROLLUP: Field = 2048;\nglobal CONTRACTS_NUM_BYTES_PER_BASE_ROLLUP: Field = 64;\nglobal CONTRACT_DATA_NUM_BYTES_PER_BASE_ROLLUP: Field = 128;\nglobal CONTRACT_DATA_NUM_BYTES_PER_BASE_ROLLUP_UNPADDED: Field = 104;\nglobal L2_TO_L1_MSGS_NUM_BYTES_PER_BASE_ROLLUP: Field = 128;\nglobal LOGS_HASHES_NUM_BYTES_PER_BASE_ROLLUP: Field = 128;\n\n/**\n * Enumerate the hash_indices which are used for pedersen hashing.\n * We start from 1 to avoid the default generators. The generator indices are listed\n * based on the number of elements each index hashes. The following conditions must be met:\n *\n * +-----------+-------------------------------+----------------------+\n * | Hash size | Number of elements hashed (n) | Condition to use     |\n * |-----------+-------------------------------+----------------------|\n * | LOW       | n ≤ 8                         | 0 < hash_index ≤ 32  |\n * | MID       | 8 < n ≤ 16                    | 32 < hash_index ≤ 40 |\n * | HIGH      | 16 < n ≤ 48                   | 40 < hash_index ≤ 48 |\n * +-----------+-------------------------------+----------------------+\n *\n * Note: When modifying, modify `GeneratorIndexPacker` in packer.hpp accordingly.\n */\n// Indices with size ≤ 8\nglobal GENERATOR_INDEX__COMMITMENT = 1;\nglobal GENERATOR_INDEX__COMMITMENT_NONCE = 2;\nglobal GENERATOR_INDEX__UNIQUE_COMMITMENT = 3;\nglobal GENERATOR_INDEX__SILOED_COMMITMENT = 4;\nglobal GENERATOR_INDEX__NULLIFIER = 5;\nglobal GENERATOR_INDEX__INITIALIZATION_NULLIFIER = 6;\nglobal GENERATOR_INDEX__OUTER_NULLIFIER = 7;\nglobal GENERATOR_INDEX__PUBLIC_DATA_READ = 8;\nglobal GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST = 9;\nglobal GENERATOR_INDEX__FUNCTION_DATA = 10;\nglobal GENERATOR_INDEX__FUNCTION_LEAF = 11;\nglobal GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA = 12;\nglobal GENERATOR_INDEX__CONSTRUCTOR = 13;\nglobal GENERATOR_INDEX__CONSTRUCTOR_ARGS = 14;\nglobal GENERATOR_INDEX__CONTRACT_ADDRESS = 15;\nglobal GENERATOR_INDEX__CONTRACT_LEAF = 16;\nglobal GENERATOR_INDEX__CALL_CONTEXT = 17;\nglobal GENERATOR_INDEX__CALL_STACK_ITEM = 18;\nglobal GENERATOR_INDEX__CALL_STACK_ITEM_2 = 19;\nglobal GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET = 20;\nglobal GENERATOR_INDEX__L2_TO_L1_MSG = 21;\nglobal GENERATOR_INDEX__TX_CONTEXT = 22;\nglobal GENERATOR_INDEX__PUBLIC_LEAF_INDEX = 23;\nglobal GENERATOR_INDEX__PUBLIC_DATA_LEAF = 24;\nglobal GENERATOR_INDEX__SIGNED_TX_REQUEST = 25;\nglobal GENERATOR_INDEX__GLOBAL_VARIABLES = 26;\nglobal GENERATOR_INDEX__PARTIAL_ADDRESS = 27;\nglobal GENERATOR_INDEX__BLOCK_HASH = 28;\n// Indices with size ≤ 16\nglobal GENERATOR_INDEX__TX_REQUEST = 33;\nglobal GENERATOR_INDEX__SIGNATURE_PAYLOAD = 34;\n// Indices with size ≤ 44\nglobal GENERATOR_INDEX__VK = 41;\nglobal GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS = 42;\nglobal GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS = 43;\nglobal GENERATOR_INDEX__FUNCTION_ARGS = 44;\n",
        "path": "/protocol_types/constants.nr"
      },
      "92": {
        "source": "use dep::protocol_types::constants::{\n    RETURN_VALUES_LENGTH,\n    MAX_READ_REQUESTS_PER_CALL,\n    MAX_PENDING_READ_REQUESTS_PER_CALL,\n    MAX_NEW_COMMITMENTS_PER_CALL,\n    MAX_NEW_NULLIFIERS_PER_CALL,\n    MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n    MAX_NEW_L2_TO_L1_MSGS_PER_CALL,\n    NUM_FIELDS_PER_SHA256,\n    MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL,\n    MAX_PUBLIC_DATA_READS_PER_CALL,\n    GENERATOR_INDEX__FUNCTION_ARGS,\n    BLOCK_HEADER_LENGTH,\n    CONTRACT_DEPLOYMENT_DATA_LENGTH,\n    CALL_CONTEXT_LENGTH,\n    PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH,\n    PRIVATE_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH,\n    CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH,\n    CONTRACT_STORAGE_READ_LENGTH,\n    PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH,\n    PUBLIC_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH,\n    GENERATOR_INDEX__BLOCK_HASH,\n    GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS,\n    GENERATOR_INDEX__FUNCTION_DATA,\n    GENERATOR_INDEX__PUBLIC_DATA_READ,\n    GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST,\n    GENERATOR_INDEX__CALL_CONTEXT,\n    GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS,\n    GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA,\n};\n\nuse crate::oracle::debug_log;\nuse crate::types::vec::BoundedVec;\nuse crate::types::point::Point;\nuse crate::hash::pedersen_hash;\n\n// docs:start:private-global-variables\nstruct PrivateGlobalVariables {\n    chain_id: Field,\n    version: Field,\n}\n// docs:end:private-global-variables\n\nimpl PrivateGlobalVariables {\n    fn serialize(self) -> [Field; 2] {\n        [self.chain_id, self.version]\n    }\n}\n\n// docs:start:public-global-variables\nstruct PublicGlobalVariables {\n    chain_id: Field,\n    version: Field,\n    block_number: Field,\n    timestamp: Field,\n}\n// docs:end:public-global-variables\n\nimpl PublicGlobalVariables {\n    fn serialize(self) -> [Field; 4] {\n        [self.chain_id, self.version, self.block_number, self.timestamp]\n    }\n}\n\n// docs:start:contract-deployment-data\nstruct ContractDeploymentData {\n    deployer_public_key: Point,\n    constructor_vk_hash : Field,\n    function_tree_root : Field,\n    contract_address_salt : Field,\n    portal_contract_address : Field,\n}\n// docs:end:contract-deployment-data\n\nimpl ContractDeploymentData {\n    fn serialize(self) -> [Field; CONTRACT_DEPLOYMENT_DATA_LENGTH] {\n        [\n            self.deployer_public_key.x,\n            self.deployer_public_key.y,\n            self.constructor_vk_hash,\n            self.function_tree_root,\n            self.contract_address_salt,\n            self.portal_contract_address,\n        ]\n    }\n\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA)\n    }\n}\n\n// PrivateContextInputs are expected to be provided to each private function\n// docs:start:private-context-inputs\nstruct PrivateContextInputs {\n    call_context : CallContext,\n    block_header: BlockHeader,\n    contract_deployment_data: ContractDeploymentData,\n    private_global_variables: PrivateGlobalVariables,\n}\n// docs:end:private-context-inputs\n\n// PublicContextInputs are expected to be provided to each public function\n// docs:start:public-context-inputs\nstruct PublicContextInputs {\n    call_context: CallContext,\n    block_header: BlockHeader,\n\n    public_global_variables: PublicGlobalVariables,\n}\n// docs:end:public-context-inputs\n\n// docs:start:call-context\nstruct CallContext {\n    msg_sender : Field,\n    storage_contract_address : Field,\n    portal_contract_address : Field,\n    function_selector: Field,\n\n    is_delegate_call : bool,\n    is_static_call : bool,\n    is_contract_deployment: bool,\n}\n// docs:end:call-context\n\nimpl CallContext {\n    fn serialize(self) -> [Field; CALL_CONTEXT_LENGTH] {\n        [\n            self.msg_sender,\n            self.storage_contract_address,\n            self.portal_contract_address,\n            self.function_selector,\n            self.is_delegate_call as Field,\n            self.is_static_call as Field,\n            self.is_contract_deployment as Field,\n        ]\n    }\n\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__CALL_CONTEXT)\n    }\n}\n\n// docs:start:block-header\nstruct BlockHeader {\n    note_hash_tree_root : Field,\n    nullifier_tree_root : Field,\n    contract_tree_root : Field,\n    l1_to_l2_messages_tree_root : Field,\n    archive_root: Field,\n    public_data_tree_root: Field,\n    global_variables_hash: Field,\n}\n// docs:end:block-header\n\nimpl BlockHeader {\n    // NOTE: this order must match the order in `private_circuit_public_inputs.hpp`\n    pub fn serialize(self) -> [Field; BLOCK_HEADER_LENGTH] {\n        [\n            self.note_hash_tree_root,\n            self.nullifier_tree_root,\n            self.contract_tree_root,\n            self.l1_to_l2_messages_tree_root,\n            self.archive_root,\n            self.public_data_tree_root,\n            self.global_variables_hash,\n        ]\n    }\n\n    pub fn deserialize(deserialized: [Field; BLOCK_HEADER_LENGTH]) -> Self {\n        BlockHeader {\n            note_hash_tree_root: deserialized[0],\n            nullifier_tree_root: deserialized[1],\n            contract_tree_root: deserialized[2],\n            l1_to_l2_messages_tree_root: deserialized[3],\n            archive_root: deserialized[4],\n            public_data_tree_root: deserialized[5],\n            global_variables_hash: deserialized[6],\n        }\n    }\n\n    pub fn empty() -> Self {\n        Self { note_hash_tree_root: 0, nullifier_tree_root: 0, contract_tree_root: 0, l1_to_l2_messages_tree_root: 0, archive_root: 0, public_data_tree_root: 0, global_variables_hash: 0 }\n    }\n\n    pub fn block_hash(self) -> Field {\n        // TODO(#3442): Unify the ordering in `BlockHeader::serialize` function and the ordering\n        // in the block hash preimage --> This requires changes in the circuits.\n        let inputs = [\n            self.global_variables_hash,\n            self.note_hash_tree_root,\n            self.nullifier_tree_root,\n            self.contract_tree_root,\n            self.l1_to_l2_messages_tree_root,\n            self.public_data_tree_root\n        ];\n        pedersen_hash(inputs, GENERATOR_INDEX__BLOCK_HASH)\n    }\n}\n\nstruct FunctionData {\n    function_selector: Field,\n    is_internal: bool,\n    is_private: bool,\n    is_constructor: bool,\n}\n\nimpl FunctionData {\n    fn hash(self) -> Field {\n        pedersen_hash([\n            self.function_selector,\n            self.is_internal as Field,\n            self.is_private as Field,\n            self.is_constructor as Field,\n        ], GENERATOR_INDEX__FUNCTION_DATA)\n    }\n}\n\nstruct PrivateCircuitPublicInputs {\n    call_context: CallContext,\n    args_hash: Field,\n    return_values: [Field; RETURN_VALUES_LENGTH],\n    read_requests: [Field; crate::abi::MAX_READ_REQUESTS_PER_CALL],\n    pending_read_requests: [Field; crate::abi::MAX_PENDING_READ_REQUESTS_PER_CALL],\n    new_commitments: [Field; MAX_NEW_COMMITMENTS_PER_CALL],\n    new_nullifiers: [Field; MAX_NEW_NULLIFIERS_PER_CALL],\n    nullified_commitments: [Field; MAX_NEW_NULLIFIERS_PER_CALL],\n    private_call_stack: [Field; MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL],\n    public_call_stack: [Field; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n    new_l2_to_l1_msgs: [Field; MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n    // Explore introducing a new type like uint256 (similar to Point), so it's more explicit that\n    // we're talking about a single number backed by two field elements.\n    encrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    unencrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    encrypted_log_preimages_length: Field,\n    unencrypted_log_preimages_length: Field,\n    block_header: BlockHeader,\n    contract_deployment_data: ContractDeploymentData,\n    chain_id: Field,\n    version: Field,\n}\n\nimpl PrivateCircuitPublicInputs {\n    fn hash(self) -> Field {\n        let mut fields: BoundedVec<Field, PRIVATE_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH> = BoundedVec::new(0); \n        fields.push(self.call_context.hash());\n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        fields.push_array(self.read_requests);\n        fields.push_array(self.pending_read_requests);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.nullified_commitments);\n        fields.push_array(self.private_call_stack);\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.encrypted_logs_hash);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.encrypted_log_preimages_length);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_header.serialize());\n        fields.push(self.contract_deployment_data.hash());\n        fields.push(self.chain_id);\n        fields.push(self.version);\n\n        pedersen_hash(fields.storage, GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS)\n    }\n\n    fn serialize(self) -> [Field; PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH] {\n        let mut fields: BoundedVec<Field, PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH> = BoundedVec::new(0); \n        fields.push_array(self.call_context.serialize());\n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        fields.push_array(self.read_requests);\n        fields.push_array(self.pending_read_requests);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.private_call_stack);\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.encrypted_logs_hash);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.encrypted_log_preimages_length);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_header.serialize());\n        fields.push_array(self.contract_deployment_data.serialize());\n        fields.push(self.chain_id);\n        fields.push(self.version);\n        fields.storage\n    }\n}\n\nstruct ContractStorageRead {\n    storage_slot: Field,\n    value: Field,\n}\n\nimpl ContractStorageRead {\n    pub fn serialize(self) -> [Field; CONTRACT_STORAGE_READ_LENGTH] {\n        [self.storage_slot, self.value]\n    }\n\n    pub fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__PUBLIC_DATA_READ)\n    }\n\n    pub fn empty() -> Self {\n        Self { storage_slot: 0, value: 0 }\n    }\n}\n\nstruct ContractStorageUpdateRequest {\n    storage_slot: Field,\n    old_value: Field,\n    new_value: Field,\n}\n\nimpl ContractStorageUpdateRequest {\n    pub fn serialize(self) -> [Field; CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH] {\n        [self.storage_slot, self.old_value, self.new_value]\n    }\n\n    pub fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST)\n    }\n\n    pub fn empty() -> Self {\n        Self { storage_slot: 0, old_value: 0, new_value: 0 }\n    }\n}\n\nstruct PublicCircuitPublicInputs {\n    call_context: CallContext,\n    args_hash: Field,\n    return_values: [Field; RETURN_VALUES_LENGTH],\n    contract_storage_update_requests: [ContractStorageUpdateRequest; MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n    contract_storage_read: [ContractStorageRead; MAX_PUBLIC_DATA_READS_PER_CALL],\n    public_call_stack: [Field; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n    new_commitments: [Field; MAX_NEW_COMMITMENTS_PER_CALL],\n    new_nullifiers: [Field; crate::abi::MAX_NEW_NULLIFIERS_PER_CALL],\n    new_l2_to_l1_msgs: [Field; crate::abi::MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n    unencrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    unencrypted_log_preimages_length: Field,\n    block_header: BlockHeader,\n    prover_address: Field,\n}\n\nimpl PublicCircuitPublicInputs {\n    \n    pub fn hash(self) -> Field {\n        let mut inputs: BoundedVec<Field, PUBLIC_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH> = BoundedVec::new(0);\n        inputs.push(self.call_context.hash());\n        inputs.push(self.args_hash);\n        inputs.push_array(self.return_values);\n        for i in 0..MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL {\n            inputs.push(self.contract_storage_update_requests[i].hash());\n        }\n        for i in 0..MAX_PUBLIC_DATA_READS_PER_CALL {\n            inputs.push(self.contract_storage_read[i].hash());\n        }\n        inputs.push_array(self.public_call_stack);\n        inputs.push_array(self.new_commitments);\n        inputs.push_array(self.new_nullifiers);\n        inputs.push_array(self.new_l2_to_l1_msgs);\n\n        inputs.push_array(self.unencrypted_logs_hash);\n        inputs.push(self.unencrypted_log_preimages_length);\n        inputs.push_array(self.block_header.serialize());\n        inputs.push(self.prover_address);\n\n        pedersen_hash(inputs.storage, GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS)\n    }\n\n    pub fn serialize(self) -> [Field; PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH] {\n        let mut fields: BoundedVec<Field, PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH> = BoundedVec::new(0); \n        fields.push_array(self.call_context.serialize());   \n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        for i in 0..MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL {\n            fields.push_array(self.contract_storage_update_requests[i].serialize());\n        }\n        for i in 0..MAX_PUBLIC_DATA_READS_PER_CALL {\n            fields.push_array(self.contract_storage_read[i].serialize());\n        }\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_header.serialize());\n        fields.push(self.prover_address);\n        fields.storage\n    }\n}\n\nstruct Hasher {\n    fields: [Field],\n}\n\nimpl Hasher {\n    pub fn new()-> Self {\n        Self { fields: [] }\n    }\n\n    pub fn add(&mut self, field: Field) {\n        self.fields = self.fields.push_back(field);\n    }\n\n    pub fn add_multiple<N>(&mut self, fields: [Field; N]) {\n        for i in 0..N {\n            self.fields = self.fields.push_back(fields[i]);\n        }\n    }\n\n    pub fn hash(self) -> Field {\n        hash_args(self.fields)\n    }\n}\n\nglobal ARGS_HASH_CHUNK_LENGTH: u32 = 32;\nglobal ARGS_HASH_CHUNK_COUNT: u32 = 16;\n\npub fn hash_args<N>(args: [Field; N]) -> Field {\n    if args.len() == 0 {\n        0\n    } else {\n        let mut chunks_hashes = [0; ARGS_HASH_CHUNK_COUNT];\n        for i in 0..ARGS_HASH_CHUNK_COUNT {\n            let mut chunk_hash = 0;\n            let start_chunk_index = i * ARGS_HASH_CHUNK_LENGTH;\n            if start_chunk_index < (args.len() as u32) {\n                let mut chunk_args = [0; ARGS_HASH_CHUNK_LENGTH];\n                for j in 0..ARGS_HASH_CHUNK_LENGTH {\n                    let item_index = i * ARGS_HASH_CHUNK_LENGTH + j;\n                    if item_index < (args.len() as u32) {\n                        chunk_args[j] = args[item_index];\n                    }\n                }\n                chunk_hash = pedersen_hash(chunk_args, GENERATOR_INDEX__FUNCTION_ARGS);\n            }\n            chunks_hashes[i] = chunk_hash;\n        }\n        pedersen_hash(chunks_hashes, GENERATOR_INDEX__FUNCTION_ARGS)\n    }\n}\n",
        "path": "/aztec/abi.nr"
      },
      "93": {
        "source": "use dep::protocol_types::constants::GENERATOR_INDEX__CONTRACT_ADDRESS;\nuse crate::hash::pedersen_hash;\n\npub fn compute_address(pub_key_x: Field, pub_key_y: Field, partial_address: Field) -> Field {\n    pedersen_hash([pub_key_x, pub_key_y, partial_address],\n        GENERATOR_INDEX__CONTRACT_ADDRESS)\n}\n",
        "path": "/aztec/address.nr"
      },
      "94": {
        "source": "use dep::protocol_types::constants::{\n    EMPTY_NULLIFIED_COMMITMENT,\n    MAX_NEW_COMMITMENTS_PER_CALL,\n    MAX_NEW_L2_TO_L1_MSGS_PER_CALL,\n    MAX_NEW_NULLIFIERS_PER_CALL,\n    MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_DATA_READS_PER_CALL,\n    MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL,\n    MAX_READ_REQUESTS_PER_CALL,\n    MAX_PENDING_READ_REQUESTS_PER_CALL,\n    NUM_FIELDS_PER_SHA256,\n    RETURN_VALUES_LENGTH,\n};\n\nuse crate::abi;\n\nuse crate::abi::{\n    hash_args,\n    CallContext,\n    ContractDeploymentData,\n    BlockHeader,\n    FunctionData,\n    PrivateCircuitPublicInputs,\n    PublicCircuitPublicInputs,\n};\n\n// TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n// use dep::std::collections::vec::Vec;\n\n// l1 to l2 messaging\nuse crate::messaging::process_l1_to_l2_message;\nuse crate::private_call_stack_item::PrivateCallStackItem;\nuse crate::public_call_stack_item::PublicCallStackItem;\n\nuse crate::types::{\n    vec::BoundedVec,\n    point::Point,\n};\n\nuse crate::utils::arr_copy_slice;\n\nuse crate::oracle::{\n    arguments,\n    call_private_function::call_private_function_internal,\n    public_call::call_public_function_internal,\n    enqueue_public_function_call::enqueue_public_function_call_internal,\n    context::get_portal_address,\n    get_block_header::get_block_header,\n};\n\nuse dep::std::option::Option;\n\n// When finished, one can call .finish() to convert back to the abi\nstruct PrivateContext {\n    // docs:start:private-context\n    inputs: abi::PrivateContextInputs,\n\n    args_hash : Field,\n    return_values : BoundedVec<Field, RETURN_VALUES_LENGTH>,\n\n    read_requests: BoundedVec<Field, MAX_READ_REQUESTS_PER_CALL>,\n    pending_read_requests: BoundedVec<Field, MAX_PENDING_READ_REQUESTS_PER_CALL>,\n\n    new_commitments: BoundedVec<Field, MAX_NEW_COMMITMENTS_PER_CALL>,\n    new_nullifiers: BoundedVec<Field, MAX_NEW_NULLIFIERS_PER_CALL>,\n    nullified_commitments: BoundedVec<Field, MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    private_call_stack : BoundedVec<Field, MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL>,\n    public_call_stack : BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n    new_l2_to_l1_msgs : BoundedVec<Field, MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n    // docs:end:private-context\n\n    block_header: BlockHeader,\n\n    // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    // encrypted_logs_preimages: Vec<Field>,\n    // unencrypted_logs_preimages: Vec<Field>,\n}\n\nimpl PrivateContext {\n    pub fn new(inputs: abi::PrivateContextInputs, args_hash: Field) -> PrivateContext {\n        PrivateContext {\n            inputs: inputs,\n\n            args_hash: args_hash,\n            return_values: BoundedVec::new(0),\n\n            read_requests: BoundedVec::new(0),\n            pending_read_requests: BoundedVec::new(0),\n\n            new_commitments: BoundedVec::new(0),\n            new_nullifiers: BoundedVec::new(0),\n            nullified_commitments: BoundedVec::new(0),\n\n            block_header: inputs.block_header,\n\n            private_call_stack: BoundedVec::new(0),\n            public_call_stack: BoundedVec::new(0),\n            new_l2_to_l1_msgs: BoundedVec::new(0),\n\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n        }\n    }\n\n    pub fn msg_sender(self) -> Field {\n        self.inputs.call_context.msg_sender\n    }\n\n    pub fn this_address(self) -> Field {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    pub fn this_portal_address(self) -> Field {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    pub fn chain_id(self) -> Field {\n        self.inputs.private_global_variables.chain_id\n    }\n\n    pub fn version(self) -> Field {\n        self.inputs.private_global_variables.version\n    }\n\n    pub fn selector(self) -> Field {\n        self.inputs.call_context.function_selector\n    }\n\n    pub fn get_block_header(self, block_number: u32) -> BlockHeader {\n        get_block_header(block_number, self)\n    }\n\n    pub fn finish(self) -> abi::PrivateCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let encrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let unencrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let encrypted_log_preimages_length = 0;\n        let unencrypted_log_preimages_length = 0;\n\n        let priv_circuit_pub_inputs = abi::PrivateCircuitPublicInputs {\n            call_context: self.inputs.call_context,\n            args_hash: self.args_hash,\n            return_values: self.return_values.storage,\n            read_requests: self.read_requests.storage,\n            pending_read_requests: self.pending_read_requests.storage,\n            new_commitments: self.new_commitments.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            nullified_commitments: self.nullified_commitments.storage,\n            private_call_stack: self.private_call_stack.storage,\n            public_call_stack: self.public_call_stack.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            encrypted_logs_hash: encrypted_logs_hash,\n            unencrypted_logs_hash: unencrypted_logs_hash,\n            encrypted_log_preimages_length: encrypted_log_preimages_length,\n            unencrypted_log_preimages_length: unencrypted_log_preimages_length,\n            block_header: self.block_header,\n            contract_deployment_data: self.inputs.contract_deployment_data,\n            chain_id: self.inputs.private_global_variables.chain_id,\n            version: self.inputs.private_global_variables.version,\n        };\n        priv_circuit_pub_inputs\n    }\n\n    pub fn push_read_request(&mut self, read_request: Field) {\n        self.read_requests.push(read_request);\n    }\n\n    pub fn push_pending_read_request(&mut self, pending_read_request: Field) {\n        self.pending_read_requests.push(pending_read_request);\n    }\n\n    pub fn push_new_note_hash(&mut self, note_hash: Field) {\n        self.new_commitments.push(note_hash);\n    }\n\n    // We never push a zero nullified_commitment as zero is used to indicate the end\n    // of a field array in private kernel. This routine transparently replaces a\n    // zero value into the special placeholder: EMPTY_NULLIFIED_COMMITMENT.\n    pub fn push_new_nullifier(&mut self, nullifier: Field, nullified_commitment: Field) {\n        self.new_nullifiers.push(nullifier);\n        let mut non_zero_nullified = nullified_commitment;\n        if (non_zero_nullified == 0) {\n            non_zero_nullified = EMPTY_NULLIFIED_COMMITMENT;\n        }\n        self.nullified_commitments.push(non_zero_nullified);\n    }\n\n    // docs:start:context_message_portal\n    pub fn message_portal(&mut self, content: Field) \n    // docs:end:context_message_portal\n    {\n        self.new_l2_to_l1_msgs.push(content);\n    }\n\n    // PrivateContextInputs must be temporarily passed in to prevent too many unknowns\n    // Note this returns self to get around an issue where mutable structs do not maintain mutations unless reassigned\n    // docs:start:context_consume_l1_to_l2_message\n    // docs:start:consume_l1_to_l2_message\n    pub fn consume_l1_to_l2_message(\n        &mut self,\n        msg_key: Field,\n        content: Field,\n        secret: Field\n    ) \n    // docs:end:context_consume_l1_to_l2_message\n    {\n        let nullifier = process_l1_to_l2_message(self.block_header.l1_to_l2_messages_tree_root, self.this_address(), self.this_portal_address(), self.chain_id(), self.version(), msg_key, content, secret);\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT)\n    }\n    // docs:end:consume_l1_to_l2_message\n\n    pub fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self.inputs;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self.inputs;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn call_private_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n        args: [Field; ARGS_COUNT]\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_private_function_with_packed_args(contract_address, function_selector, args_hash)\n    }\n\n    pub fn call_private_function_no_args(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        self.call_private_function_with_packed_args(contract_address, function_selector, 0)\n    }\n\n    pub fn call_private_function_with_packed_args(\n        &mut self,\n        contract_address: Field,\n        function_selector: Field,\n        args_hash: Field\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let fields = call_private_function_internal(\n            contract_address, \n            function_selector, \n            args_hash\n        );\n        let item = PrivateCallStackItem {\n            contract_address: fields[0],\n            function_data: FunctionData {\n                function_selector: fields[1],\n                is_internal: fields[2] as bool,\n                is_private: fields[3] as bool,\n                is_constructor: fields[4] as bool,\n            },\n            public_inputs: PrivateCircuitPublicInputs {\n                call_context: CallContext {\n                    msg_sender : fields[5],\n                    storage_contract_address : fields[6],\n                    portal_contract_address : fields[7],\n                    function_selector: fields[8], // practically same as fields[1]\n                    is_delegate_call : fields[9] as bool,\n                    is_static_call : fields[10] as bool,\n                    is_contract_deployment: fields[11] as bool,\n                },\n                // TODO handle the offsets as a variable incremented during extraction?\n                args_hash: fields[12],\n                return_values: arr_copy_slice(fields, [0; RETURN_VALUES_LENGTH], 13),\n                read_requests: arr_copy_slice(fields, [0; MAX_READ_REQUESTS_PER_CALL], 17),\n                pending_read_requests: arr_copy_slice(fields, [0; MAX_READ_REQUESTS_PER_CALL], 49),\n                new_commitments: arr_copy_slice(fields, [0; MAX_NEW_COMMITMENTS_PER_CALL], 81),\n                new_nullifiers: arr_copy_slice(fields, [0; MAX_NEW_NULLIFIERS_PER_CALL], 97),\n                nullified_commitments: arr_copy_slice(fields, [0; MAX_NEW_NULLIFIERS_PER_CALL], 113),\n                private_call_stack: arr_copy_slice(fields, [0; MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL], 129),\n                public_call_stack: arr_copy_slice(fields, [0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL], 133),\n                new_l2_to_l1_msgs: arr_copy_slice(fields, [0; MAX_NEW_L2_TO_L1_MSGS_PER_CALL], 137),\n                encrypted_logs_hash: arr_copy_slice(fields, [0; NUM_FIELDS_PER_SHA256], 139),\n                unencrypted_logs_hash: arr_copy_slice(fields, [0; NUM_FIELDS_PER_SHA256], 141),\n                encrypted_log_preimages_length: fields[143],\n                unencrypted_log_preimages_length: fields[144],\n                block_header: BlockHeader {\n                    // Must match order in `private_circuit_public_inputs.hpp`\n                    note_hash_tree_root : fields[145],\n                    nullifier_tree_root : fields[146],\n                    contract_tree_root : fields[147],\n                    l1_to_l2_messages_tree_root : fields[148],\n                    archive_root : fields[149],\n                    public_data_tree_root: fields[150],\n                    global_variables_hash: fields[151],\n                },\n                contract_deployment_data: ContractDeploymentData {\n                    deployer_public_key: Point::new(fields[152], fields[153]),\n                    constructor_vk_hash : fields[154],\n                    function_tree_root : fields[155],\n                    contract_address_salt : fields[156],\n                    portal_contract_address : fields[157],\n                },\n                chain_id: fields[158],\n                version: fields[159],\n            },\n            is_execution_request: fields[160] as bool,\n        };\n        assert(contract_address == item.contract_address);\n        assert(function_selector == item.function_data.function_selector);\n\n        assert(args_hash == item.public_inputs.args_hash);\n\n        assert(item.is_execution_request == false);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        // We are issuing a regular call which is not delegate, static, or deployment. We also constrain\n        // the msg_sender in the nested call to be equal to our address, and the execution context address\n        // for the nested call to be equal to the address we actually called.\n        assert(item.public_inputs.call_context.is_delegate_call == false);\n        assert(item.public_inputs.call_context.is_static_call == false);\n        assert(item.public_inputs.call_context.is_contract_deployment == false);\n        assert(item.public_inputs.call_context.msg_sender == self.inputs.call_context.storage_contract_address);\n        assert(item.public_inputs.call_context.storage_contract_address == contract_address);\n\n        self.private_call_stack.push(item.hash());\n\n        item.public_inputs.return_values\n    }\n\n    pub fn call_public_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash)\n    }\n\n    pub fn call_public_function_no_args(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field,\n    ) {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0)\n    }\n\n    pub fn call_public_function_with_packed_args(\n        &mut self,\n        contract_address: Field,\n        function_selector: Field,\n        args_hash: Field\n    ) {\n        let fields = enqueue_public_function_call_internal(\n            contract_address, \n            function_selector, \n            args_hash\n        );\n        let item = PublicCallStackItem {\n            contract_address: fields[0],\n            function_data: FunctionData {\n                function_selector: fields[1],\n                is_internal: fields[2] as bool,\n                is_private: fields[3] as bool,\n                is_constructor: fields[4] as bool,\n            },\n            public_inputs: PublicCircuitPublicInputs {\n                call_context: CallContext {\n                    msg_sender : fields[5],\n                    storage_contract_address : fields[6],\n                    portal_contract_address : fields[7],\n                    function_selector: fields[8], // practically same as fields[1]\n                    is_delegate_call : fields[9] as bool,\n                    is_static_call : fields[10] as bool,\n                    is_contract_deployment: fields[11] as bool,\n                },\n                args_hash: fields[12],\n                return_values: [0; RETURN_VALUES_LENGTH],\n                contract_storage_update_requests: [ContractStorageUpdateRequest::empty(); MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n                contract_storage_read: [ContractStorageRead::empty(); MAX_PUBLIC_DATA_READS_PER_CALL],\n                public_call_stack: [0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n                new_commitments: [0; MAX_NEW_COMMITMENTS_PER_CALL],\n                new_nullifiers: [0; MAX_NEW_NULLIFIERS_PER_CALL],\n                new_l2_to_l1_msgs:[0; MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n                unencrypted_logs_hash:[0; NUM_FIELDS_PER_SHA256],\n                unencrypted_log_preimages_length: 0,\n                block_header: BlockHeader::empty(),\n                prover_address: 0,\n            },\n            is_execution_request: true,\n        };\n\n        assert(contract_address == item.contract_address);\n        assert(function_selector == item.function_data.function_selector);\n        \n        assert(args_hash == item.public_inputs.args_hash);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        // We are issuing a regular call which is not delegate, static, or deployment. We also constrain\n        // the msg_sender in the nested call to be equal to our address, and the execution context address\n        // for the nested call to be equal to the address we actually called.\n        assert(item.public_inputs.call_context.is_delegate_call == false);\n        assert(item.public_inputs.call_context.is_static_call == false);\n        assert(item.public_inputs.call_context.is_contract_deployment == false);\n        assert(item.public_inputs.call_context.msg_sender == self.inputs.call_context.storage_contract_address);\n        assert(item.public_inputs.call_context.storage_contract_address == contract_address);\n\n        self.public_call_stack.push(item.hash());\n    }\n}\n\nuse crate::abi::{\n    ContractStorageRead,\n    ContractStorageUpdateRequest\n};\n\nstruct PublicContext {\n    inputs: abi::PublicContextInputs,\n\n    args_hash : Field,\n    return_values : BoundedVec<Field, RETURN_VALUES_LENGTH>,\n\n    contract_storage_update_requests: BoundedVec<ContractStorageUpdateRequest, MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL>,\n    contract_storage_read: BoundedVec<ContractStorageRead, MAX_PUBLIC_DATA_READS_PER_CALL>,\n    public_call_stack: BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n\n    new_commitments: BoundedVec<Field, MAX_NEW_COMMITMENTS_PER_CALL>,\n    new_nullifiers: BoundedVec<Field, crate::abi::MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    new_l2_to_l1_msgs: BoundedVec<Field, crate::abi::MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n\n    unencrypted_logs_hash: BoundedVec<Field, NUM_FIELDS_PER_SHA256>,\n    unencrypted_logs_preimages_length: Field,\n\n    block_header: BlockHeader,\n    prover_address: Field,\n}\n\nimpl PublicContext {\n    pub fn new(inputs: abi::PublicContextInputs, args_hash: Field) -> PublicContext {\n        let empty_storage_read = ContractStorageRead::empty();\n        let empty_storage_update = ContractStorageUpdateRequest::empty();\n        PublicContext {\n            inputs: inputs,\n\n            args_hash: args_hash,\n            return_values: BoundedVec::new(0),\n\n            contract_storage_update_requests: BoundedVec::new(empty_storage_update),\n            contract_storage_read: BoundedVec::new(empty_storage_read),\n            public_call_stack: BoundedVec::new(0),\n\n            new_commitments: BoundedVec::new(0),\n            new_nullifiers: BoundedVec::new(0),\n\n            new_l2_to_l1_msgs: BoundedVec::new(0),\n\n            \n            unencrypted_logs_hash: BoundedVec::new(0),\n            unencrypted_logs_preimages_length: 0,\n\n            block_header: inputs.block_header,\n            prover_address: 0,\n\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n        }\n    }\n\n    pub fn msg_sender(self) -> Field {\n        self.inputs.call_context.msg_sender\n    }\n\n    pub fn this_address(self) -> Field {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    pub fn this_portal_address(self) -> Field {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    pub fn chain_id(self) -> Field {\n        self.inputs.public_global_variables.chain_id\n    }\n\n    pub fn version(self) -> Field {\n        self.inputs.public_global_variables.version\n    }\n\n    pub fn selector(self) -> Field {\n        self.inputs.call_context.function_selector\n    }\n\n    pub fn block_number(self) -> Field {\n        self.inputs.public_global_variables.block_number\n    }\n\n    pub fn timestamp(self) -> Field {\n        self.inputs.public_global_variables.timestamp\n    }\n\n    pub fn finish(self) -> abi::PublicCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let unencrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let unencrypted_log_preimages_length = 0;\n\n\n        // Compute the public call stack hashes\n        let pub_circuit_pub_inputs = abi::PublicCircuitPublicInputs {\n            call_context: self.inputs.call_context, // Done\n            args_hash: self.args_hash, // Done\n            contract_storage_update_requests: self.contract_storage_update_requests.storage,\n            contract_storage_read: self.contract_storage_read.storage,\n            return_values: self.return_values.storage,\n            new_commitments: self.new_commitments.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            public_call_stack: self.public_call_stack.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            unencrypted_logs_hash: unencrypted_logs_hash,\n            unencrypted_log_preimages_length: unencrypted_log_preimages_length,\n            block_header: self.inputs.block_header,\n            prover_address: self.prover_address,\n        };\n        pub_circuit_pub_inputs\n    }\n\n    pub fn push_new_note_hash(&mut self, note_hash: Field) {\n        self.new_commitments.push(note_hash);\n    }\n\n    pub fn push_new_nullifier(&mut self, nullifier: Field, _nullified_commitment: Field) {\n        self.new_nullifiers.push(nullifier);\n    }\n\n    pub fn message_portal(&mut self, content: Field) {\n        self.new_l2_to_l1_msgs.push(content);\n    }\n\n    // PrivateContextInputs must be temporarily passed in to prevent too many unknowns\n    // Note this returns self to get around an issue where mutable structs do not maintain mutations unless reassigned\n    pub fn consume_l1_to_l2_message(&mut self, msg_key: Field, content: Field, secret: Field) {\n        let this = (*self).this_address();\n        let nullifier = process_l1_to_l2_message(self.block_header.l1_to_l2_messages_tree_root, this, self.this_portal_address(), self.chain_id(), self.version(), msg_key, content, secret);\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT)\n    }\n\n    pub fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn call_public_function<ARGS_COUNT>(\n        _self: Self,\n        contract_address: Field, \n        function_selector: Field,\n        args: [Field; ARGS_COUNT],\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = abi::hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        call_public_function_internal(\n            contract_address, \n            function_selector, \n            args_hash,\n        )\n    }\n\n    pub fn call_public_function_no_args(\n        _self: Self,\n        contract_address: Field, \n        function_selector: Field,\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        call_public_function_internal(\n            contract_address, \n            function_selector, \n            0,\n        )\n    }\n\n}\n\nstruct Context {\n    private: Option<&mut PrivateContext>,\n    public: Option<&mut PublicContext>,\n}\n\nimpl Context {\n    pub fn private(context: &mut PrivateContext) -> Context {\n        Context {\n            private: Option::some(context),\n            public: Option::none()\n        }\n    }\n\n    pub fn public(context: &mut PublicContext) -> Context {\n        Context {\n            public: Option::some(context),\n            private: Option::none()\n        }\n    }\n\n    pub fn none() -> Context {\n        Context {\n            public: Option::none(),\n            private: Option::none()\n        }\n    }\n}\n",
        "path": "/aztec/context.nr"
      },
      "95": {
        "source": "use dep::std::hash::{pedersen_hash_with_separator, sha256};\nuse dep::protocol_types::constants::{\n  GENERATOR_INDEX__SIGNATURE_PAYLOAD,\n  GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET,\n};\n\npub fn sha256_to_field<N>(bytes_to_hash: [u8; N]) -> Field {\n    let sha256_hashed = sha256(bytes_to_hash);\n\n    // Convert it to a field element\n    let mut v = 1;\n    let mut high = 0 as Field;\n    let mut low = 0 as Field;\n\n    for i in 0..16 {\n        high = high + (sha256_hashed[15 - i] as Field) * v;\n        low = low + (sha256_hashed[16 + 15 - i] as Field) * v;\n        v = v * 256;\n    }\n\n    // Abuse that a % p + b % p = (a + b) % p and that low < p\n    let hash_in_a_field = low + high * v;\n\n    hash_in_a_field\n}\n\npub fn compute_secret_hash(secret: Field) -> Field {\n    // TODO(#1205) This is probably not the right index to use\n    pedersen_hash([secret], GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET)\n}\n\npub fn pedersen_hash<N>(inputs: [Field; N], hash_index: u32) -> Field {\n    pedersen_hash_with_separator(inputs, hash_index)\n}\n",
        "path": "/aztec/hash.nr"
      },
      "102": {
        "source": "use crate::context::{PrivateContext, PublicContext};\nuse crate::oracle;\nuse crate::types::point::Point;\n\npub fn emit_encrypted_log<N>(\n    context: &mut PrivateContext,\n    contract_address: Field,\n    storage_slot: Field,\n    encryption_pub_key: Point,\n    log: [Field; N]\n) {\n    let _ = oracle::logs::emit_encrypted_log(contract_address, storage_slot, encryption_pub_key, log);\n    context.accumulate_encrypted_logs(log);\n}\n\npub fn emit_unencrypted_log<T>(context: &mut PublicContext, log: T) {\n    let contract_address = context.this_address();\n    let event_selector = 5; // TODO: compute actual event selector.\n    let _ = oracle::logs::emit_unencrypted_log(contract_address, event_selector, log);\n    // context.accumulate_unencrypted_logs(log);\n}\n\n// TODO: We might want to remove this since emitting unencrypted logs from private functions is violating privacy.\n// --> might be a better approach to force devs to make a public function call that emits the log if needed then\n// it would be less easy to accidentally leak information.\n// If we decide to keep this function around would make sense to wait for traits and then merge it with emit_unencrypted_log.\npub fn emit_unencrypted_log_from_private<T>(context: &mut PrivateContext, log: T) {\n    let contract_address = context.this_address();\n    let event_selector = 5; // TODO: compute actual event selector.\n    let _ = oracle::logs::emit_unencrypted_log(contract_address, event_selector, log);\n    // context.accumulate_unencrypted_logs(log);\n}\n",
        "path": "/aztec/log.nr"
      },
      "107": {
        "source": "use crate::abi::PublicContextInputs;\nuse crate::context::{\n    PrivateContext,\n    PublicContext,\n};\nuse crate::note::{\n    note_header::NoteHeader,\n    note_interface::NoteInterface,\n    utils::compute_inner_note_hash,\n};\nuse crate::oracle::notes::{notify_created_note, notify_nullified_note};\nuse dep::protocol_types::constants::EMPTY_NULLIFIED_COMMITMENT;\n\npub fn create_note<Note, N>(\n    context: &mut PrivateContext,\n    storage_slot: Field,\n    note: &mut Note,\n    note_interface: NoteInterface<Note, N>,\n    broadcast: bool\n) {\n    let contract_address = (*context).this_address();\n\n    let header = NoteHeader { contract_address, storage_slot, nonce: 0, is_transient: true };\n    let set_header = note_interface.set_header;\n    set_header(note, header);\n    let inner_note_hash = compute_inner_note_hash(note_interface, *note);\n\n    let serialize = note_interface.serialize;\n    let serialized_note = serialize(*note);\n    assert(notify_created_note(storage_slot, serialized_note, inner_note_hash) == 0);\n\n    context.push_new_note_hash(inner_note_hash);\n\n    if broadcast {\n        let broadcast = note_interface.broadcast;\n        broadcast(context, storage_slot, *note);\n    }\n}\n\npub fn create_note_hash_from_public<Note, N>(\n    context: &mut PublicContext,\n    storage_slot: Field,\n    note: &mut Note,\n    note_interface: NoteInterface<Note, N>\n) {\n    let contract_address = (*context).this_address();\n\n    let header = NoteHeader { contract_address, storage_slot, nonce: 0, is_transient: true };\n    let set_header = note_interface.set_header;\n    set_header(note, header);\n    let inner_note_hash = compute_inner_note_hash(note_interface, *note);\n\n    context.push_new_note_hash(inner_note_hash);\n}\n\npub fn destroy_note<Note, N>(context: &mut PrivateContext, note: Note, note_interface: NoteInterface<Note, N>) {\n    let mut nullifier = 0;\n    let mut nullified_commitment: Field = EMPTY_NULLIFIED_COMMITMENT;\n    let compute_nullifier = note_interface.compute_nullifier;\n    nullifier = compute_nullifier(note);\n\n    // We also need the note commitment corresponding to the \"nullifier\"\n    let get_header = note_interface.get_header;\n    let header = get_header(note);\n    // `nullified_commitment` is used to inform the kernel which pending commitment\n    // the nullifier corresponds to so they can be matched and both squashed/deleted.\n    // nonzero nonce implies \"persistable\" nullifier (nullifies a persistent/in-tree\n    // commitment) in which case `nullified_commitment` is not used since the kernel\n    // just siloes and forwards the nullifier to its output.\n    if (header.is_transient) {\n        // TODO(1718): Can we reuse the note commitment computed in `compute_nullifier`?\n        nullified_commitment = compute_inner_note_hash(note_interface, note);\n    }\n    assert(notify_nullified_note(nullifier, nullified_commitment) == 0);\n\n    context.push_new_nullifier(nullifier, nullified_commitment)\n}\n",
        "path": "/aztec/note/lifecycle.nr"
      },
      "108": {
        "source": "use dep::std::option::Option;\nuse dep::protocol_types::constants::{\n    MAX_READ_REQUESTS_PER_CALL,\n    GET_NOTE_ORACLE_RETURN_LENGTH,\n    GET_NOTES_ORACLE_RETURN_LENGTH,\n    MAX_NOTES_PER_PAGE,\n    VIEW_NOTE_ORACLE_RETURN_LENGTH,\n};\nuse crate::context::PrivateContext;\nuse crate::note::{\n    note_getter_options::{NoteGetterOptions, Select, Sort, SortOrder},\n    note_interface::NoteInterface,\n    note_viewer_options::NoteViewerOptions,\n    utils::compute_note_hash_for_read_or_nullify,\n};\nuse crate::oracle;\nuse crate::types::vec::BoundedVec;\n\nfn check_note_header<Note, N>(context: PrivateContext, storage_slot: Field, note_interface: NoteInterface<Note, N>, note: Note) {\n    let get_header = note_interface.get_header;\n    let header = get_header(note);\n    let contract_address = context.this_address();\n    assert(header.contract_address == contract_address);\n    assert(header.storage_slot == storage_slot);\n}\n\nfn check_note_fields<N>(fields: [Field; N], selects: BoundedVec<Option<Select>, N>) {\n    for i in 0..selects.len {\n        let select = selects.get_unchecked(i).unwrap_unchecked();\n        assert(fields[select.field_index] == select.value, \"Mismatch return note field.\");\n    }\n}\n\nfn check_notes_order<N>(fields_0: [Field; N], fields_1: [Field; N], sorts: BoundedVec<Option<Sort>, N>) {\n    for i in 0..sorts.len {\n        let sort = sorts.get_unchecked(i).unwrap_unchecked();\n        let eq = fields_0[sort.field_index] == fields_1[sort.field_index];\n        let lt = fields_0[sort.field_index] as u120 < fields_1[sort.field_index] as u120;\n        if sort.order == SortOrder.ASC {\n            assert(eq | lt, \"Return notes not sorted in ascending order.\");\n        } else if !eq {\n            assert(!lt, \"Return notes not sorted in descending order.\");\n        }\n    }\n}\n\npub fn get_note<Note, N>(context: &mut PrivateContext, storage_slot: Field, note_interface: NoteInterface<Note, N>) -> Note {\n    let note = get_note_internal(storage_slot, note_interface);\n\n    check_note_header(*context, storage_slot, note_interface, note);\n\n    let note_hash_for_read_request = compute_note_hash_for_read_or_nullify(note_interface, note);\n\n    context.push_read_request(note_hash_for_read_request);\n    note\n}\n\npub fn get_notes<Note, N, FILTER_ARGS>(\n    context: &mut PrivateContext,\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    options: NoteGetterOptions<Note, N, FILTER_ARGS>\n) -> [Option<Note>; MAX_READ_REQUESTS_PER_CALL] {\n    let opt_notes = get_notes_internal(storage_slot, note_interface, options);\n    let mut num_notes = 0;\n    let mut prev_fields = [0; N];\n    for i in 0..opt_notes.len() {\n        let opt_note = opt_notes[i];\n        if opt_note.is_some() {\n            let note = opt_note.unwrap_unchecked();\n            let serialize = note_interface.serialize;\n            let fields = serialize(note);\n            check_note_header(*context, storage_slot, note_interface, note);\n            check_note_fields(fields, options.selects);\n            if i != 0 {\n                check_notes_order(prev_fields, fields, options.sorts);\n            }\n            prev_fields = fields;\n\n            let note_hash_for_read_request = compute_note_hash_for_read_or_nullify(note_interface, note);\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1410): test to ensure\n            // failure if malicious oracle injects 0 nonce here for a \"pre-existing\" note.\n            context.push_read_request(note_hash_for_read_request);\n\n            num_notes += 1;\n        };\n    }\n    if options.limit != 0 {\n        assert(num_notes <= options.limit, \"Invalid number of return notes.\");\n    }\n    opt_notes\n}\n\nunconstrained fn get_note_internal<Note, N>(storage_slot: Field, note_interface: NoteInterface<Note, N>) -> Note {\n    let placeholder_note = [Option::none()];\n    let placeholder_fields = [0; GET_NOTE_ORACLE_RETURN_LENGTH];\n    oracle::notes::get_notes(storage_slot,\n        note_interface,\n        0,\n        [],\n        [],\n        [],\n        [],\n        1, // limit\n        0, // offset\n        placeholder_note,\n        placeholder_fields)[0].unwrap() // Notice: we don't allow dummies to be returned from get_note (singular).\n}\n\nunconstrained fn get_notes_internal<Note, N, FILTER_ARGS>(\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    options: NoteGetterOptions<Note, N, FILTER_ARGS>\n) -> [Option<Note>; MAX_READ_REQUESTS_PER_CALL] {\n    let (num_selects, select_by, select_values, sort_by, sort_order) = flatten_options(options.selects, options.sorts);\n    let placeholder_opt_notes = [Option::none(); MAX_READ_REQUESTS_PER_CALL];\n    let placeholder_fields = [0; GET_NOTES_ORACLE_RETURN_LENGTH];\n    let opt_notes = oracle::notes::get_notes(storage_slot,\n        note_interface,\n        num_selects,\n        select_by,\n        select_values,\n        sort_by,\n        sort_order,\n        options.limit,\n        options.offset,\n        placeholder_opt_notes,\n        placeholder_fields);\n\n    let filter = options.filter;\n    let filter_args = options.filter_args;\n    filter(opt_notes, filter_args)\n}\n\nunconstrained pub fn view_notes<Note, N>(storage_slot: Field, note_interface: NoteInterface<Note, N>, options: NoteViewerOptions<Note, N>) -> [Option<Note>; MAX_NOTES_PER_PAGE] {\n    let (num_selects, select_by, select_values, sort_by, sort_order) = flatten_options(options.selects, options.sorts);\n    let placeholder_opt_notes = [Option::none(); MAX_NOTES_PER_PAGE];\n    let placeholder_fields = [0; VIEW_NOTE_ORACLE_RETURN_LENGTH];\n    oracle::notes::get_notes(storage_slot,\n        note_interface,\n        num_selects,\n        select_by,\n        select_values,\n        sort_by,\n        sort_order,\n        options.limit,\n        options.offset,\n        placeholder_opt_notes,\n        placeholder_fields)\n}\n\nunconstrained fn flatten_options<Note, N>(selects: BoundedVec<Option<Select>, N>, sorts: BoundedVec<Option<Sort>, N>) -> (u8, [u8; N], [Field; N], [u8; N], [u2; N]) {\n    let mut num_selects = 0;\n    let mut select_by = [0; N];\n    let mut select_values = [0; N];\n    for i in 0..selects.len {\n        let select = selects.get(i);\n        if select.is_some() {\n            select_by[num_selects] = select.unwrap_unchecked().field_index;\n            select_values[num_selects] = select.unwrap_unchecked().value;\n            num_selects += 1;\n        };\n    }\n\n    let mut sort_by = [0; N];\n    let mut sort_order = [0; N];\n    for i in 0..sorts.len {\n        let sort = sorts.get(i);\n        if sort.is_some() {\n            sort_by[i] = sort.unwrap_unchecked().field_index;\n            sort_order[i] = sort.unwrap_unchecked().order;\n        };\n    }\n\n    (num_selects, select_by, select_values, sort_by, sort_order)\n}\n",
        "path": "/aztec/note/note_getter.nr"
      },
      "110": {
        "source": "use crate::hash::pedersen_hash;\nuse dep::protocol_types::constants::{GENERATOR_INDEX__UNIQUE_COMMITMENT, GENERATOR_INDEX__SILOED_COMMITMENT};\n\npub fn compute_inner_hash(storage_slot: Field, note_hash: Field) -> Field {\n    // TODO(#1205) Do we need a generator index here?\n    pedersen_hash([storage_slot, note_hash], 0)\n}\n\npub fn compute_siloed_hash(contract_address: Field, inner_note_hash: Field) -> Field {\n    let inputs = [contract_address, inner_note_hash];\n    pedersen_hash(inputs, GENERATOR_INDEX__SILOED_COMMITMENT)\n}\n\npub fn compute_unique_hash(nonce: Field, siloed_note_hash: Field) -> Field {\n    let inputs = [nonce, siloed_note_hash];\n    pedersen_hash(inputs, GENERATOR_INDEX__UNIQUE_COMMITMENT)\n}\n",
        "path": "/aztec/note/note_hash.nr"
      },
      "114": {
        "source": "use dep::protocol_types::constants::GENERATOR_INDEX__OUTER_NULLIFIER;\nuse crate::{\n    note::{\n        note_hash::{compute_inner_hash, compute_siloed_hash, compute_unique_hash},\n        note_header::NoteHeader,\n        note_interface::NoteInterface,\n    },\n    utils::arr_copy_slice,\n    hash::pedersen_hash,\n};\n\npub fn compute_inner_note_hash<Note, N>(note_interface: NoteInterface<Note, N>, note: Note) -> Field {\n    let get_header = note_interface.get_header;\n    let header = get_header(note);\n\n    let compute_note_hash = note_interface.compute_note_hash;\n    let note_hash = compute_note_hash(note);\n\n    compute_inner_hash(header.storage_slot, note_hash)\n}\n\npub fn compute_siloed_note_hash<Note, N>(note_interface: NoteInterface<Note, N>, note_with_header: Note) -> Field {\n    let get_header = note_interface.get_header;\n    let header = get_header(note_with_header);\n\n    let inner_note_hash = compute_inner_note_hash(note_interface, note_with_header);\n\n    compute_siloed_hash(header.contract_address, inner_note_hash)\n}\n\npub fn compute_unique_siloed_note_hash<Note, N>(note_interface: NoteInterface<Note, N>, note_with_header: Note) -> Field {\n    let get_header = note_interface.get_header;\n    let header = get_header(note_with_header);\n\n    let siloed_note_hash = compute_siloed_note_hash(note_interface, note_with_header);\n\n    compute_unique_hash(header.nonce, siloed_note_hash)\n}\n\npub fn compute_siloed_nullifier<Note, N>(note_interface: NoteInterface<Note, N>, note_with_header: Note) -> Field {\n    let get_header = note_interface.get_header;\n    let header = get_header(note_with_header);\n\n    let compute_nullifier = note_interface.compute_nullifier;\n    let inner_nullifier = compute_nullifier(note_with_header);\n\n    let input = [header.contract_address, inner_nullifier];\n    pedersen_hash(input, GENERATOR_INDEX__OUTER_NULLIFIER)\n}\n\npub fn compute_note_hash_for_read_or_nullify<Note, N>(note_interface: NoteInterface<Note, N>, note_with_header: Note) -> Field {\n    let get_header = note_interface.get_header;\n    let header = get_header(note_with_header);\n\n    // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1386)\n    if (header.is_transient) {\n        // If a note is transient, we just read the inner_note_hash (kernel will silo by contract address).\n        compute_inner_note_hash(note_interface, note_with_header)\n    } else if (header.nonce == 0) {\n        // If not transient and nonce is zero, that means we are reading a public note.\n        compute_siloed_note_hash(note_interface, note_with_header)\n    } else {\n        // When nonce is nonzero, that means we are reading a settled note (from tree) created in a\n        // previous TX. So we need the unique_siloed_note_hash which has already been hashed with\n        // contract address and then nonce. This hash will match the existing leaf in the private\n        // data tree, so the kernel can just perform a membership check directly on this hash/leaf.\n        compute_unique_siloed_note_hash(note_interface, note_with_header)\n    }\n}\n\npub fn compute_note_hash_and_nullifier<Note, N, S>(note_interface: NoteInterface<Note, N>, note_header: NoteHeader, serialized_note: [Field; S]) -> [Field; 4] {\n    let deserialize = note_interface.deserialize;\n    let set_header = note_interface.set_header;\n    let mut note = deserialize(arr_copy_slice(serialized_note, [0; N], 0));\n    set_header(&mut note, note_header);\n\n    let compute_note_hash = note_interface.compute_note_hash;\n    let note_hash = compute_note_hash(note);\n    let inner_note_hash = compute_inner_hash(note_header.storage_slot, note_hash);\n\n    let siloed_note_hash = compute_siloed_hash(note_header.contract_address, inner_note_hash);\n\n    let unique_siloed_note_hash = compute_unique_hash(note_header.nonce, siloed_note_hash);\n\n    let compute_nullifier = note_interface.compute_nullifier;\n    let inner_nullifier = compute_nullifier(note);\n\n    [inner_note_hash, siloed_note_hash, unique_siloed_note_hash, inner_nullifier]\n}\n",
        "path": "/aztec/note/utils.nr"
      },
      "116": {
        "source": "#[oracle(packArguments)]\nfn pack_arguments_oracle<N>(_args: [Field; N]) -> Field {}\n\n// TODO: explain what this does.\nunconstrained pub fn pack_arguments<N>(args: [Field; N]) -> Field {\n    pack_arguments_oracle(args)\n}\n",
        "path": "/aztec/oracle/arguments.nr"
      },
      "117": {
        "source": "use dep::protocol_types::constants::CALL_PRIVATE_FUNCTION_RETURN_SIZE;\n\n#[oracle(callPrivateFunction)]\nfn call_private_function_oracle(_contract_address: Field, _function_selector: Field, _args_hash: Field) -> [Field; CALL_PRIVATE_FUNCTION_RETURN_SIZE] {}\n\nunconstrained pub fn call_private_function_internal(contract_address: Field, function_selector: Field, args_hash: Field) -> [Field; CALL_PRIVATE_FUNCTION_RETURN_SIZE] {\n    call_private_function_oracle(contract_address, function_selector, args_hash)\n}\n",
        "path": "/aztec/oracle/call_private_function.nr"
      },
      "123": {
        "source": "use crate::types::point::Point;\nuse crate::address::compute_address;\n\n#[oracle(getPublicKeyAndPartialAddress)]\nfn get_public_key_and_partial_address_oracle(_address: Field) -> [Field; 3] {}\n\nunconstrained fn get_public_key_and_partial_address_internal(address: Field) -> [Field; 3] {\n    get_public_key_and_partial_address_oracle(address)\n}\n\npub fn get_public_key(address: Field) -> Point {\n    let result = get_public_key_and_partial_address_internal(address);\n    let pub_key_x = result[0];\n    let pub_key_y = result[1];\n    let partial_address = result[2];\n\n    let calculated_address = compute_address(pub_key_x, pub_key_y, partial_address);\n    assert(calculated_address == address);\n\n    Point::new(pub_key_x, pub_key_y)\n}\n",
        "path": "/aztec/oracle/get_public_key.nr"
      },
      "127": {
        "source": "\n// contract_address + \n// args_hash +\n// crate::abi::FUNCTION_DATA_SIZE +\n// crate::abi::CALL_CONTEXT_SIZE +\n// = 2 + 4 + 7\nglobal ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE: Field = 13;\n\n#[oracle(enqueuePublicFunctionCall)]\nfn enqueue_public_function_call_oracle(_contract_address: Field, _function_selector: Field, _args_hash: Field) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE] {}\n\nunconstrained pub fn enqueue_public_function_call_internal(contract_address: Field, function_selector: Field, args_hash: Field) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE] {\n    enqueue_public_function_call_oracle(contract_address, function_selector, args_hash)\n}\n",
        "path": "/aztec/oracle/enqueue_public_function_call.nr"
      },
      "129": {
        "source": "use dep::protocol_types::constants::RETURN_VALUES_LENGTH;\n\n#[oracle(callPublicFunction)]\nfn call_public_function_oracle(_contract_address: Field, _function_selector: Field, _args_hash: Field) -> [Field; RETURN_VALUES_LENGTH] {}\n\nunconstrained pub fn call_public_function_internal(contract_address: Field, function_selector: Field, args_hash: Field) -> [Field; RETURN_VALUES_LENGTH] {\n    call_public_function_oracle(contract_address, function_selector, args_hash)\n}\n",
        "path": "/aztec/oracle/public_call.nr"
      },
      "130": {
        "source": "use dep::std::option::Option;\nuse crate::note::{\n    note_header::NoteHeader,\n    note_interface::NoteInterface,\n};\nuse crate::utils::arr_copy_slice;\n\n#[oracle(notifyCreatedNote)]\nfn notify_created_note_oracle<N>(_storage_slot: Field, _serialized_note: [Field; N], _inner_note_hash: Field) -> Field {}\n\nunconstrained pub fn notify_created_note<N>(storage_slot: Field, serialized_note: [Field; N], inner_note_hash: Field) -> Field {\n    notify_created_note_oracle(storage_slot, serialized_note, inner_note_hash)\n}\n\n#[oracle(notifyNullifiedNote)]\nfn notify_nullified_note_oracle<N>(_nullifier: Field, _inner_note_hash: Field) -> Field {}\n\nunconstrained pub fn notify_nullified_note<N>(nullifier: Field, inner_note_hash: Field) -> Field {\n    notify_nullified_note_oracle(nullifier, inner_note_hash)\n}\n\n#[oracle(getNotes)]\nfn get_notes_oracle<N, S>(\n    _storage_slot: Field,\n    _num_selects: u8,\n    _select_by: [u8; N],\n    _select_values: [Field; N],\n    _sort_by: [u8; N],\n    _sort_order: [u2; N],\n    _limit: u32,\n    _offset: u32,\n    _return_size: u32,\n    _placeholder_fields: [Field; S]\n) -> [Field; S] {}\n\nunconstrained fn get_notes_oracle_wrapper<N, S>(\n    storage_slot: Field,\n    num_selects: u8,\n    select_by: [u8; N],\n    select_values: [Field; N],\n    sort_by: [u8; N],\n    sort_order: [u2; N],\n    limit: u32,\n    offset: u32,\n    mut placeholder_fields: [Field; S]\n) -> [Field; S] {\n    let return_size = placeholder_fields.len() as u32;\n    get_notes_oracle(storage_slot,\n        num_selects,\n        select_by,\n        select_values,\n        sort_by,\n        sort_order,\n        limit,\n        offset,\n        return_size,\n        placeholder_fields)\n}\n\nunconstrained pub fn get_notes<Note, N, M, S, NS>(\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    num_selects: u8,\n    select_by: [u8; M],\n    select_values: [Field; M],\n    sort_by: [u8; M],\n    sort_order: [u2; M],\n    limit: u32,\n    offset: u32,\n    mut placeholder_opt_notes: [Option<Note>; S], // TODO: Remove it and use `limit` to initialize the note array.\n    placeholder_fields: [Field; NS] // TODO: Remove it and use `limit` to initialize the note array.\n) -> [Option<Note>; S] {\n    let fields = get_notes_oracle_wrapper(storage_slot,\n        num_selects,\n        select_by,\n        select_values,\n        sort_by,\n        sort_order,\n        limit,\n        offset,\n        placeholder_fields);\n    let num_notes = fields[0] as u32;\n    let contract_address = fields[1];\n    let deserialize = note_interface.deserialize;\n    let set_header = note_interface.set_header;\n    for i in 0..placeholder_opt_notes.len() {\n        if i as u32 < num_notes {\n            // lengths named as per typescript.\n            let return_header_length: Field = 2; // num_notes & contract_address.\n            let extra_preimage_length: Field = 2; // nonce & is_transient.\n            let read_offset: Field = return_header_length + i * (N + extra_preimage_length);\n            let nonce = fields[read_offset];\n            let is_transient = fields[read_offset + 1] as bool;\n            let header = NoteHeader { contract_address, nonce, storage_slot, is_transient };\n            let serialized_note = arr_copy_slice(fields, [0; N], read_offset + 2);\n            let mut note = deserialize(serialized_note);\n            set_header(&mut note, header);\n            placeholder_opt_notes[i] = Option::some(note);\n        };\n    }\n    placeholder_opt_notes\n}\n\n#[oracle(checkNullifierExists)]\nfn check_nullifier_exists_oracle(_inner_nullifier: Field) -> Field {}\n\nunconstrained pub fn check_nullifier_exists(inner_nullifier: Field) -> bool {\n    check_nullifier_exists_oracle(inner_nullifier) == 1\n}\n",
        "path": "/aztec/oracle/notes.nr"
      },
      "131": {
        "source": "#[oracle(storageRead)]\nfn storage_read_oracle<N>(_storage_slot: Field, _number_of_elements: Field) -> [Field; N] {}\n\nunconstrained fn storage_read_oracle_wrapper<N>(_storage_slot: Field) -> [Field; N] {\n    storage_read_oracle(_storage_slot, N)\n}\n\npub fn storage_read<T, N>(storage_slot: Field, deserialize: fn ([Field; N]) -> T) -> T {\n    let fields = storage_read_oracle_wrapper(storage_slot);\n    deserialize(fields)\n}\n\n#[oracle(storageWrite)]\nfn storage_write_oracle<N>(_storage_slot: Field, _values: [Field; N]) -> [Field; N] {}\n\n// TODO: Remove return value.\nunconstrained pub fn storage_write<N>(storage_slot: Field, fields: [Field; N]) {\n    let _hash = storage_write_oracle(storage_slot, fields);\n}\n",
        "path": "/aztec/oracle/storage.nr"
      },
      "132": {
        "source": "use crate::types::point::Point;\nuse dep::protocol_types::constants::NUM_FIELDS_PER_SHA256;\n\n// TODO: Should take encrypted data.\n#[oracle(emitEncryptedLog)]\nfn emit_encrypted_log_oracle<N>(_contract_address: Field, _storage_slot: Field, _encryption_pub_key: Point, _preimage: [Field; N]) -> Field {}\n\nunconstrained pub fn emit_encrypted_log<N>(contract_address: Field, storage_slot: Field, encryption_pub_key: Point, preimage: [Field; N]) -> [Field; NUM_FIELDS_PER_SHA256] {\n    [emit_encrypted_log_oracle(contract_address, storage_slot, encryption_pub_key, preimage), 0]\n}\n\n#[oracle(emitUnencryptedLog)]\nfn emit_unencrypted_log_oracle<T>(_contract_address: Field, _event_selector: Field, _message: T) -> Field {}\n\nunconstrained pub fn emit_unencrypted_log<T>(contract_address: Field, event_selector: Field, message: T) -> [Field; NUM_FIELDS_PER_SHA256] {\n    // https://github.com/AztecProtocol/aztec-packages/issues/885\n    [emit_unencrypted_log_oracle(contract_address, event_selector, message), 0]\n}\n",
        "path": "/aztec/oracle/logs.nr"
      },
      "133": {
        "source": "use crate::abi::FunctionData;\nuse crate::abi::PrivateCircuitPublicInputs;\nuse dep::protocol_types::constants::GENERATOR_INDEX__CALL_STACK_ITEM;\nuse crate::hash::pedersen_hash;\n\nstruct PrivateCallStackItem {\n    contract_address: Field,\n    function_data: FunctionData,\n    public_inputs: PrivateCircuitPublicInputs,\n    is_execution_request: bool,\n}\n\nimpl PrivateCallStackItem {\n    pub fn hash(self) -> Field {\n        pedersen_hash([\n            self.contract_address,\n            self.function_data.hash(),\n            self.public_inputs.hash(),\n        ], GENERATOR_INDEX__CALL_STACK_ITEM)\n    }\n}\n",
        "path": "/aztec/private_call_stack_item.nr"
      },
      "134": {
        "source": "use crate::{\n    abi,\n    hash::pedersen_hash,\n    abi::{\n        PublicCircuitPublicInputs,\n        FunctionData,\n    },\n};\nuse dep::protocol_types::constants::{\n    RETURN_VALUES_LENGTH,\n    GENERATOR_INDEX__CALL_STACK_ITEM,\n};\n\n// oracles\nuse crate::oracle::{\n    enqueue_public_function_call::enqueue_public_function_call_internal,\n};\n\nstruct PublicCallStackItem {\n    contract_address: Field,\n    function_data: FunctionData,\n    public_inputs: PublicCircuitPublicInputs,\n    is_execution_request: bool,\n}\n\nimpl PublicCallStackItem {\n    pub fn hash(self) -> Field {\n        pedersen_hash([\n            self.contract_address,\n            self.function_data.hash(),\n            self.public_inputs.hash(),\n        ], GENERATOR_INDEX__CALL_STACK_ITEM)\n    }\n}\n\n",
        "path": "/aztec/public_call_stack_item.nr"
      },
      "137": {
        "source": "use dep::std::option::Option;\nuse dep::protocol_types::constants::EMPTY_NULLIFIED_COMMITMENT;\nuse crate::context::{PrivateContext, Context};\nuse crate::note::{\n    lifecycle::create_note,\n    note_getter::{get_note, view_notes},\n    note_interface::NoteInterface,\n    note_viewer_options::NoteViewerOptions,\n};\nuse crate::oracle::notes::check_nullifier_exists;\nuse crate::state_vars::singleton::compute_singleton_initialization_nullifier;\n\n// docs:start:struct\nstruct ImmutableSingleton<Note, N> {\n    context: Option<&mut PrivateContext>,\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    compute_initialization_nullifier: fn (Field, Option<Field>) -> Field,\n}\n// docs:end:struct\n\nimpl<Note, N> ImmutableSingleton<Note, N> {\n    // docs:start:new\n    pub fn new(\n        context: Context,\n        storage_slot: Field,\n        note_interface: NoteInterface<Note, N>,\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        ImmutableSingleton {\n            context: context.private,\n            storage_slot,\n            note_interface,\n            compute_initialization_nullifier: compute_singleton_initialization_nullifier,\n        }\n    }\n    // docs:end:new\n\n    // docs:start:is_initialized\n    unconstrained pub fn is_initialized(self, owner: Option<Field>) -> bool {\n        let compute_initialization_nullifier = self.compute_initialization_nullifier;\n        let nullifier = compute_initialization_nullifier(self.storage_slot, owner);\n        check_nullifier_exists(nullifier)\n    }\n    // docs:end:is_initialized\n\n    // docs:start:initialize\n    pub fn initialize(\n        self,\n        note: &mut Note, \n        owner: Option<Field>,\n        broadcast: bool,\n    ) {\n        let context = self.context.unwrap();\n\n        // Nullify the storage slot.\n        let compute_initialization_nullifier = self.compute_initialization_nullifier;\n        let nullifier = compute_initialization_nullifier(self.storage_slot, owner);\n        context.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT);\n\n        create_note(\n            context,\n            self.storage_slot,\n            note,\n            self.note_interface,\n            broadcast,\n        );\n    }\n    // docs:end:initialize\n\n    // docs:start:get_note\n    pub fn get_note(self) -> Note {\n        let context = self.context.unwrap();\n        let storage_slot = self.storage_slot;\n        get_note(context, storage_slot, self.note_interface)\n    }\n    // docs:end:get_note\n\n    // docs:start:view_note\n    unconstrained pub fn view_note(self) -> Note {\n        let options = NoteViewerOptions::new().set_limit(1);\n        view_notes(self.storage_slot, self.note_interface, options)[0].unwrap()\n    }\n    // docs:end:view_note\n}\n",
        "path": "/aztec/state_vars/immutable_singleton.nr"
      },
      "138": {
        "source": "use crate::context::{PrivateContext, PublicContext, Context};\nuse dep::std::option::Option;\nuse crate::hash::pedersen_hash;\n\n// docs:start:map\nstruct Map<V> {\n    context: Context,\n    storage_slot: Field,\n    state_var_constructor: fn(Context, Field) -> V,\n}\n// docs:end:map\n\nimpl<V> Map<V> {\n    // docs:start:new\n    pub fn new(\n        context: Context,\n        storage_slot: Field,\n        state_var_constructor: fn(Context, Field) -> V,\n    ) -> Map<V> {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        Map {\n            context,\n            storage_slot,\n            state_var_constructor,\n        }\n    }\n    // docs:end:new\n\n    // docs:start:at\n    pub fn at(self, key: Field) -> V {\n        // TODO(#1204): use a generator index for the storage slot\n        let derived_storage_slot = pedersen_hash([self.storage_slot, key],0);\n\n        let state_var_constructor = self.state_var_constructor;\n        state_var_constructor(self.context, derived_storage_slot)\n    }\n    // docs:end:at\n}\n",
        "path": "/aztec/state_vars/map.nr"
      },
      "139": {
        "source": "use crate::context::{Context};\nuse crate::oracle::storage::storage_read;\nuse crate::oracle::storage::storage_write;\nuse crate::types::type_serialization::TypeSerializationInterface;\nuse dep::std::option::Option;\n\n// docs:start:public_state_struct\nstruct PublicState<T, T_SERIALIZED_LEN> {\n    context: Context,\n    storage_slot: Field,\n    serialization_methods: TypeSerializationInterface<T, T_SERIALIZED_LEN>,\n}\n// docs:end:public_state_struct\n\nimpl<T, T_SERIALIZED_LEN> PublicState<T, T_SERIALIZED_LEN> {\n    // docs:start:public_state_struct_new\n    pub fn new(\n        // Note: Passing the contexts to new(...) just to have an interface compatible with a Map.\n        context: Context,\n        storage_slot: Field,\n        serialization_methods: TypeSerializationInterface<T, T_SERIALIZED_LEN>,\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        PublicState {\n            context,\n            storage_slot,\n            serialization_methods,\n        }\n    }\n    // docs:end:public_state_struct_new\n\n    // docs:start:public_state_struct_read\n    pub fn read(self) -> T {\n        assert(self.context.private.is_none(), \"Public state writes only supported in public functions\");\n        storage_read(self.storage_slot, self.serialization_methods.deserialize)\n    }\n    // docs:end:public_state_struct_read\n\n    // docs:start:public_state_struct_write\n    pub fn write(self, value: T) {\n        assert(self.context.private.is_none(), \"Public state writes only supported in public functions\");\n        let serialize = self.serialization_methods.serialize;\n        let fields = serialize(value);\n        storage_write(self.storage_slot, fields);\n    }\n    // docs:end:public_state_struct_write\n}\n",
        "path": "/aztec/state_vars/public_state.nr"
      },
      "140": {
        "source": "use dep::std::option::Option;\nuse crate::abi::PublicContextInputs;\nuse dep::protocol_types::constants::{MAX_NOTES_PER_PAGE, MAX_READ_REQUESTS_PER_CALL};\nuse crate::context::{PrivateContext, PublicContext, Context};\nuse crate::note::{\n    lifecycle::{create_note, create_note_hash_from_public, destroy_note},\n    note_getter::{get_notes, view_notes},\n    note_getter_options::NoteGetterOptions,\n    note_header::NoteHeader,\n    note_interface::NoteInterface,\n    note_viewer_options::NoteViewerOptions,\n    utils::compute_note_hash_for_read_or_nullify,\n};\n\n// docs:start:struct\nstruct Set<Note, N> {\n    context: Context,\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n}\n// docs:end:struct\n\nimpl<Note, N> Set<Note, N> {\n    // docs:start:new\n    pub fn new(\n        context: Context,\n        storage_slot: Field,\n        note_interface: NoteInterface<Note, N>,\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        Set {\n            context,\n            storage_slot,\n            note_interface,\n        }\n    }\n    // docs:end:new\n\n    // docs:start:insert\n    pub fn insert(self,\n        note: &mut Note,\n        broadcast: bool,\n    ) {\n        create_note(\n            self.context.private.unwrap(),\n            self.storage_slot,\n            note,\n            self.note_interface,\n            broadcast,\n        );\n    }\n    // docs:end:insert\n\n    // docs:start:insert_from_public\n    pub fn insert_from_public(self, note: &mut Note) {\n        create_note_hash_from_public(\n            self.context.public.unwrap(),\n            self.storage_slot,\n            note,\n            self.note_interface,\n        );\n    }\n    // docs:end:insert_from_public\n    \n    // DEPRECATED\n    fn assert_contains_and_remove(_self: Self, _note: &mut Note, _nonce: Field) {\n        assert(false, \"`assert_contains_and_remove` has been deprecated. Please call PXE.addNote() to add a note to the database. Then use Set.get_notes() and Set.remove() in your contract to verify and remove a note.\");\n    }\n\n    // DEPRECATED\n    fn assert_contains_and_remove_publicly_created(_self: Self, _note: &mut Note) {\n        assert(false, \"`assert_contains_and_remove_publicly_created` has been deprecated. Please call PXE.addNote() to add a note to the database. Then use Set.get_notes() and Set.remove() in your contract to verify and remove a note.\");\n    }\n\n    // docs:start:remove\n    pub fn remove(self, note: Note) {\n        let context = self.context.private.unwrap();\n        let note_hash = compute_note_hash_for_read_or_nullify(self.note_interface, note);\n        let has_been_read = context.read_requests.any(|r| r == note_hash);\n        assert(has_been_read, \"Can only remove a note that has been read from the set.\");\n\n        destroy_note(\n            context,\n            note,\n            self.note_interface,\n        );\n    }\n    // docs:end:remove\n\n    // docs:start:get_notes\n    pub fn get_notes<FILTER_ARGS>(\n        self,\n        options: NoteGetterOptions<Note, N, FILTER_ARGS>,\n    ) -> [Option<Note>; MAX_READ_REQUESTS_PER_CALL] {\n        let storage_slot = self.storage_slot;\n        let opt_notes = get_notes(\n            self.context.private.unwrap(),\n            storage_slot,\n            self.note_interface,\n            options,\n        );\n        opt_notes\n    }\n    // docs:end:get_notes\n\n    // docs:start:view_notes\n    unconstrained pub fn view_notes(\n        self,\n        options: NoteViewerOptions<Note, N>,\n    ) -> [Option<Note>; MAX_NOTES_PER_PAGE] {\n        view_notes(self.storage_slot, self.note_interface, options)\n    }\n    // docs:end:view_notes\n}\n",
        "path": "/aztec/state_vars/set.nr"
      },
      "141": {
        "source": "use dep::std::option::Option;\nuse dep::protocol_types::constants::{EMPTY_NULLIFIED_COMMITMENT, GENERATOR_INDEX__INITIALIZATION_NULLIFIER};\nuse crate::context::{PrivateContext, PublicContext, Context};\nuse crate::note::{\n    lifecycle::{create_note, destroy_note},\n    note_getter::{get_note, view_notes},\n    note_interface::NoteInterface,\n    note_viewer_options::NoteViewerOptions,\n};\nuse crate::oracle::{\n    get_secret_key::get_secret_key,\n    notes::check_nullifier_exists,\n};\nuse crate::hash::pedersen_hash;\n\npub fn compute_singleton_initialization_nullifier(storage_slot: Field, owner: Option<Field>) -> Field {\n    if owner.is_some() {\n        let secret = get_secret_key(owner.unwrap_unchecked());\n        pedersen_hash([storage_slot, secret.low, secret.high],\n            GENERATOR_INDEX__INITIALIZATION_NULLIFIER)\n    } else {\n        pedersen_hash([storage_slot], GENERATOR_INDEX__INITIALIZATION_NULLIFIER)\n    }\n}\n\n// docs:start:struct\nstruct Singleton<Note, N> {\n    context: Option<&mut PrivateContext>,\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    compute_initialization_nullifier: fn (Field, Option<Field>) -> Field,\n}\n// docs:end:struct\n\nimpl<Note, N> Singleton<Note, N> {\n    // docs:start:new\n    pub fn new(\n        context: Context,\n        storage_slot: Field,\n        note_interface: NoteInterface<Note, N>,\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        Singleton {\n            context: context.private,\n            storage_slot,\n            note_interface,\n            compute_initialization_nullifier: compute_singleton_initialization_nullifier,\n        }\n    }\n    // docs:end:new\n\n    // docs:start:is_initialized\n    unconstrained pub fn is_initialized(self, owner: Option<Field>) -> bool {\n        let compute_initialization_nullifier = self.compute_initialization_nullifier;\n        let nullifier = compute_initialization_nullifier(self.storage_slot, owner);\n        check_nullifier_exists(nullifier)\n    }\n    // docs:end:is_initialized\n\n    // docs:start:initialize\n    pub fn initialize(\n        self,\n        note: &mut Note,\n        owner: Option<Field>,\n        broadcast: bool,\n    ) {\n        let context = self.context.unwrap();\n\n        // Nullify the storage slot.\n        let compute_initialization_nullifier = self.compute_initialization_nullifier;\n        let nullifier = compute_initialization_nullifier(self.storage_slot, owner);\n        context.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT);\n\n        create_note(context, self.storage_slot, note, self.note_interface, broadcast);\n    }\n    // docs:end:initialize\n\n    // docs:start:replace\n    pub fn replace(\n        self,\n        new_note: &mut Note,\n        broadcast: bool,\n    ) {\n        let context = self.context.unwrap();\n        let prev_note = get_note(context, self.storage_slot, self.note_interface);\n\n        // Nullify previous note.\n        destroy_note(context, prev_note, self.note_interface);\n\n        // Add replacement note.\n        create_note(context, self.storage_slot, new_note, self.note_interface, broadcast);\n    }\n    // docs:end:replace\n\n    // docs:start:get_note\n    pub fn get_note(self, broadcast: bool) -> Note {\n        let context = self.context.unwrap();\n        let mut note = get_note(context, self.storage_slot, self.note_interface);\n\n        // Nullify current note to make sure it's reading the latest note.\n        destroy_note(context, note, self.note_interface);\n\n        // Add the same note again.\n        // Because a nonce is added to every note in the kernel, its nullifier will be different.\n        create_note(context, self.storage_slot, &mut note, self.note_interface, broadcast);\n\n        note\n    }\n    // docs:end:get_note\n\n    // docs:start:view_note\n    unconstrained pub fn view_note(self) -> Note {\n        let options = NoteViewerOptions::new().set_limit(1);\n        view_notes(self.storage_slot, self.note_interface, options)[0].unwrap()\n    }\n    // docs:end:view_note\n}\n",
        "path": "/aztec/state_vars/singleton.nr"
      },
      "145": {
        "source": "struct BoundedVec<T, MaxLen> {\n    storage: [T; MaxLen],\n    len: Field,\n}\n\nimpl<T, MaxLen> BoundedVec<T, MaxLen> {\n    pub fn new(initial_value: T) -> Self {\n        BoundedVec { storage: [initial_value; MaxLen], len: 0 }\n    }\n\n    pub fn get(mut self: Self, index: Field) -> T {\n        assert(index as u64 < self.len as u64);\n        self.storage[index]\n    }\n\n    pub fn get_unchecked(mut self: Self, index: Field) -> T {\n        self.storage[index]\n    }\n\n    pub fn push(&mut self, elem: T) {\n        assert(self.len as u64 < MaxLen as u64);\n\n        self.storage[self.len] = elem;\n        self.len += 1;\n    }\n\n    pub fn push_array<Len>(&mut self, array: [T; Len]) {\n        let newLen = self.len + array.len();\n        assert(newLen as u64 <= MaxLen as u64);\n        for i in 0..array.len() {\n            self.storage[self.len + i] = array[i];\n        }\n        self.len = newLen;\n    }\n\n    pub fn pop(&mut self) -> T {\n        assert(self.len as u64 > 0);\n\n        let elem = self.storage[self.len - 1];\n        self.len -= 1;\n        elem\n    }\n\n    pub fn any<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = false;\n        let mut exceeded_len = false;\n        for i in 0..MaxLen {\n            exceeded_len |= i == self.len;\n            if (!exceeded_len) {\n                ret |= predicate(self.storage[i]);\n            }\n        }\n        ret\n    }\n}\n\n#[test]\nfn test_vec_push_pop() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    assert(vec.len == 0);\n    vec.push(2);\n    assert(vec.len == 1);\n    vec.push(4);\n    assert(vec.len == 2);\n    vec.push(6);\n    assert(vec.len == 3);\n    let x = vec.pop();\n    assert(x == 6);\n    assert(vec.len == 2);\n    assert(vec.get(0) == 2);\n    assert(vec.get(1) == 4);\n}\n\n#[test]\nfn test_vec_push_array() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    vec.push_array([2, 4]);\n    assert(vec.len == 2);\n    assert(vec.get(0) == 2);\n    assert(vec.get(1) == 4);\n}\n\n#[test(should_fail)]\nfn test_vec_get_out_of_bound() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    vec.push_array([2, 4]);\n    let _x = vec.get(2);\n}\n\n#[test(should_fail)]\nfn test_vec_get_not_declared() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    vec.push_array([2]);\n    let _x = vec.get(1);\n}\n\n#[test(should_fail)]\nfn test_vec_get_uninitialized() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    let _x = vec.get(0);\n}\n\n#[test(should_fail)]\nfn test_vec_push_overflow() {\n    let mut vec: BoundedVec<Field, 1> = BoundedVec::new(0);\n    vec.push(1);\n    vec.push(2);\n}\n\n#[test]\nfn test_vec_any() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    vec.push_array([2, 4, 6]);\n    assert(vec.any(|v| v == 2) == true);\n    assert(vec.any(|v| v == 4) == true);\n    assert(vec.any(|v| v == 6) == true);\n    assert(vec.any(|v| v == 3) == false);\n}\n\n#[test]\nfn test_vec_any_not_default() {\n    let default_value = 1;\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(default_value);\n    vec.push_array([2, 4]);\n    assert(vec.any(|v| v == default_value) == false);\n}\n",
        "path": "/aztec/types/vec.nr"
      },
      "147": {
        "source": "use crate::types::type_serialization::TypeSerializationInterface;\n\nglobal BOOL_SERIALIZED_LEN: Field = 1;\n\nfn deserializeBool(fields: [Field; BOOL_SERIALIZED_LEN]) -> bool {\n    fields[0] as bool\n}\n\nfn serializeBool(value: bool) -> [Field; BOOL_SERIALIZED_LEN] {\n    [value as Field]\n}\n\nglobal BoolSerializationMethods = TypeSerializationInterface {\n    deserialize: deserializeBool,\n    serialize: serializeBool,\n};\n",
        "path": "/aztec/types/type_serialization/bool_serialization.nr"
      },
      "148": {
        "source": "use crate::types::type_serialization::TypeSerializationInterface;\n\n// docs:start:field_serialization\nglobal FIELD_SERIALIZED_LEN: Field = 1;\n\nfn deserializeField(fields: [Field; FIELD_SERIALIZED_LEN]) -> Field {\n    fields[0]\n}\n\nfn serializeField(value: Field) -> [Field; FIELD_SERIALIZED_LEN] {\n    [value]\n}\n\nglobal FieldSerializationMethods = TypeSerializationInterface {\n    deserialize: deserializeField,\n    serialize: serializeField,\n};\n// docs:end:field_serialization",
        "path": "/aztec/types/type_serialization/field_serialization.nr"
      },
      "150": {
        "source": "use crate::types::type_serialization::TypeSerializationInterface;\nuse crate::types::address::AztecAddress;\n\nglobal AZTEC_ADDRESS_SERIALIZED_LEN: Field = 1;\n\nfn deserialize(fields: [Field; AZTEC_ADDRESS_SERIALIZED_LEN]) -> AztecAddress {\n    AztecAddress::new(fields[0])\n}\n\nfn serialize(value: AztecAddress) -> [Field; AZTEC_ADDRESS_SERIALIZED_LEN] {\n    [value.address]\n}\n\nglobal AztecAddressSerializationMethods = TypeSerializationInterface {\n    deserialize,\n    serialize,\n};\n",
        "path": "/aztec/types/type_serialization/aztec_address_serialization.nr"
      },
      "151": {
        "source": "pub fn arr_copy_slice<T, N, M>(src: [T; N], mut dst: [T; M], offset: Field) -> [T; M] {\n    for i in 0..dst.len() {\n        dst[i] = src[i + offset];\n    }\n    dst\n}\n\npub fn field_from_bytes<N>(bytes: [u8; N], big_endian: bool) -> Field {\n    assert(bytes.len() as u32 < 32, \"field_from_bytes: N must be less than 32\");\n    let mut as_field = 0;\n    let mut offset = 1;\n    for i in 0..N {\n        let mut index = i;\n        if big_endian {\n            index = N - i - 1;\n        }\n        as_field += (bytes[index] as Field) * offset;\n        offset *= 256;\n    }\n\n    as_field\n}\n\n// TODO(#3470): Copied over from https://github.com/AztecProtocol/aztec-packages/blob/a07c4bd47313be6aa604a63f37857eb0136b41ba/yarn-project/noir-protocol-circuits/src/crates/rollup-lib/src/base/base_rollup_inputs.nr#L599\n// move to a shared place?\n\n// TODO to radix returns u8, so we cannot use bigger radixes. It'd be ideal to use a radix of the maximum range-constrained integer noir supports\npub fn full_field_less_than(lhs: Field, rhs: Field) -> bool {\n    dep::std::eddsa::lt_bytes32(lhs, rhs)\n}\n\npub fn full_field_greater_than(lhs: Field, rhs: Field) -> bool {\n    dep::std::eddsa::lt_bytes32(rhs, lhs)\n}",
        "path": "/aztec/utils.nr"
      },
      "153": {
        "source": "/////////////////////////////////////////////////////////////////////\n//                             Imports                             //\n/////////////////////////////////////////////////////////////////////\n\nuse dep::aztec::{\n    context::PrivateContext,\n    log::emit_encrypted_log,\n    note::{\n        note_header::NoteHeader,\n        note_interface::NoteInterface,\n        utils::compute_note_hash_for_read_or_nullify,\n    },\n    oracle::{\n        get_public_key::get_public_key,\n        get_secret_key::get_secret_key,\n        notes::check_nullifier_exists,\n        notes::check_nullifier_exists_oracle,\n        rand::rand,\n    },\n    types::address::AztecAddress\n};\n\nuse dep::protocol_types::{\n    constants::EMPTY_NULLIFIED_COMMITMENT,\n};\n\nuse dep::std::option::Option;\n\n\n/////////////////////////////////////////////////////////////////////\n//                              Class                              //\n/////////////////////////////////////////////////////////////////////\n\n/// @notice A note that represents a given bet, of a given user\n/// @member owner The owner of the note\n/// @member round_id The id of the round this bet is placed on\n/// @member bet The bet outcome given by the user (true or false)\n/// @member header The note header\nstruct BetNote {\n    owner: AztecAddress,\n    round_id: Field,\n    bet: bool, // Heads is 0 (False). Tails is 1 (True).\n    randomness: Field,\n    header: NoteHeader\n}\n\nglobal BET_NOTE_LEN: Field = 4;\n\nimpl BetNote {\n    /////////////////////////////////////////////////////////////////////\n    //                         Public methods                          //\n    /////////////////////////////////////////////////////////////////////\n\n    /// @notice Bet note constructor\n    /// @param _context The currenct context, used to push the round_id nullifier in order to ensure uniqueness\n    /// @param _owner The owner of the note\n    /// @param _bet The bet outcome given by the user (true or false, representing head or tail)\n    /// @param _round_id The id of the bet (randomly generated, by reusing the escrow randomness)\n    /// @param _randomness An extra randomness field, often generated during the function execution and not known beforehand.\n    ///                    Used for linking to other notes, identifaction and nullification.\n    pub fn new(_context: &mut PrivateContext, _owner: AztecAddress, _round_id: Field, _bet: bool, _randomness: Field) -> Self {\n        // Nullify round id and randomness combination\n        let compute_initialization_nullifier = BetNote::generate_round_randomness_nullifier;\n        let nullifier = compute_initialization_nullifier(_round_id, _randomness);\n        _context.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT);\n\n        BetNote {\n            owner: _owner,\n            round_id: _round_id,\n            bet: _bet,\n            randomness: _randomness,\n            header: NoteHeader::empty(),\n        }\n    }\n\n    /// @notice Bet note round_id nullifying generator\n    /// @param _round_id The id of the bet to nullify\n    /// @param _randomness User defined randomness for a given bet\n    pub fn generate_round_randomness_nullifier(_round_id: Field, _randomness: Field) -> Field {\n        dep::std::hash::pedersen_hash([_round_id, _randomness])\n    }\n\n    /// @notice Bet note round_id initialization checker. Checks whether the round_id and randomness combination was added to the nullifying tree\n    /// @param _round_id The round id of the bet to check for nullification status\n    /// @param _randomness The randomness of the bet to check for nullification status\n    unconstrained pub fn is_round_randomness_nullified(_round_id: Field, _randomness: Field) -> bool {\n        let compute_initialization_nullifier = BetNote::generate_round_randomness_nullifier;\n        let nullifier = compute_initialization_nullifier(_round_id, _randomness);\n        check_nullifier_exists(nullifier)\n    }\n\n    /////////////////////////////////////////////////////////////////////\n    //                        Internal methods                         //\n    /////////////////////////////////////////////////////////////////////\n\n    /// @notice Serializes the note\n    fn serialize(self) -> [Field; BET_NOTE_LEN] {\n        [self.owner.address, self.round_id, self.bet as Field, self.randomness]\n    }\n\n    /// @notice Deserializes the note\n    fn deserialize(preimage: [Field; BET_NOTE_LEN]) -> Self {\n        BetNote {\n            owner: AztecAddress::new(preimage[0]),\n            round_id: preimage[1],\n            bet: preimage[2] as bool,\n            randomness: preimage[3],\n            header: NoteHeader::empty(),\n        }\n    }\n\n    /// @notice Computes the note hash of the note\n    fn compute_note_hash(self) -> Field {\n        dep::std::hash::pedersen_hash([\n            self.owner.address,\n            self.round_id,\n            self.bet as Field,\n            self.randomness\n        ])\n    }\n\n    /// @notice Computes the nullifier of the note\n    /// @dev    This is a pretty standard nullifier computation, using the round_id as the key\n    fn compute_nullifier(self) -> Field {\n        let note_hash_for_nullify = compute_note_hash_for_read_or_nullify(BetNoteMethods, self);\n        let nullifier_key = self.round_id;\n\n        dep::std::hash::pedersen_hash([\n            note_hash_for_nullify,\n            nullifier_key,\n        ])\n    }\n\n    /// @notice Sets the note header\n    fn set_header(&mut self, header: NoteHeader) {\n        self.header = header;\n    }\n\n    /// @notice Emit the note creation event using the owner public key\n    fn broadcast(self, context: &mut PrivateContext, slot: Field) {\n        let encryption_pub_key = get_public_key(self.owner.address);\n        emit_encrypted_log(\n            context,\n            (*context).this_address(),\n            slot,\n            encryption_pub_key,\n            self.serialize(),\n        );\n    }\n}\n\n/////////////////////////////////////////////////////////////////////\n//                         Global methods                          //\n/////////////////////////////////////////////////////////////////////\n\nfn deserialize(preimage: [Field; BET_NOTE_LEN]) -> BetNote {\n    BetNote::deserialize(preimage)\n}\n\nfn serialize(note: BetNote) -> [Field; BET_NOTE_LEN] {\n    note.serialize()\n}\n\nfn compute_note_hash(note: BetNote) -> Field {\n    note.compute_note_hash()\n}\n\nfn compute_nullifier(note: BetNote) -> Field {\n    note.compute_nullifier()\n}\n\nfn get_header(note: BetNote) -> NoteHeader {\n    note.header\n}\n\nfn set_header(note: &mut BetNote, header: NoteHeader) {\n    note.set_header(header)\n}\n\nfn broadcast(context: &mut PrivateContext, slot: Field, note: BetNote) {\n    note.broadcast(context, slot);\n}\n\nglobal BetNoteMethods = NoteInterface {\n    deserialize,\n    serialize,\n    compute_note_hash,\n    compute_nullifier,\n    get_header,\n    set_header,\n    broadcast,\n};",
        "path": "/home/shaito/wonderland/aztec-coin-toss-pvp/src/types/bet_note.nr"
      },
      "154": {
        "source": "/////////////////////////////////////////////////////////////////////\n//                             Imports                             //\n/////////////////////////////////////////////////////////////////////\n\nuse dep::aztec::{\n    context::PrivateContext,\n    note::{\n        note_header::NoteHeader,\n        note_interface::NoteInterface,\n    },\n    types::address::AztecAddress\n};\n\n/////////////////////////////////////////////////////////////////////\n//                              Class                              //\n/////////////////////////////////////////////////////////////////////\n\n/// @notice a note containing the (immutable) game configuration\n/// @member divinity the address of the divinity used by the oracle\n/// @member private_oracle the address of the private oracle contract\n/// @member token the address of the token used for betting\n/// @member bet_amount the amount of tokens to bet\n/// @member header the note header\nstruct ConfigNote {\n    divinity: AztecAddress,\n    private_oracle: AztecAddress,\n    token: AztecAddress,\n    bet_amount: Field,\n    header: NoteHeader\n}\n\nglobal CONFIG_NOTE_LEN: Field = 4;\n\nimpl ConfigNote {\n    \n    /////////////////////////////////////////////////////////////////////\n    //                         Public methods                          //\n    /////////////////////////////////////////////////////////////////////\n\n    /// @notice create a new config note\n    /// @param _divinity the address of the divinity used by the oracle\n    /// @param _private_oracle the address of the private oracle contract\n    /// @param _token the address of the token used for betting\n    /// @param _amount the amount of tokens to bet\n    pub fn new(_divinity: AztecAddress, _private_oracle: AztecAddress, _token: AztecAddress, _amount: Field) -> Self {\n        ConfigNote {\n            divinity: _divinity,\n            private_oracle: _private_oracle,\n            token: _token,\n            bet_amount: _amount,\n            header: NoteHeader::empty(),\n        }\n    }\n\n    /////////////////////////////////////////////////////////////////////\n    //                        Internal methods                         //\n    /////////////////////////////////////////////////////////////////////\n\n    /// @notice serialize the note\n    fn serialize(self) -> [Field; CONFIG_NOTE_LEN] {\n        [self.divinity.address, self.private_oracle.address, self.token.address, self.bet_amount]\n    }\n\n    /// @notice deserialize the note\n    fn deserialize(preimage: [Field; CONFIG_NOTE_LEN]) -> Self {\n        ConfigNote {\n            divinity: AztecAddress::new(preimage[0]),\n            private_oracle: AztecAddress::new(preimage[1]),\n            token: AztecAddress::new(preimage[2]),\n            bet_amount: preimage[3],\n            header: NoteHeader::empty(),\n        }\n    }\n\n    /// @notice compute the note hash\n    fn compute_note_hash(self) -> Field {\n        dep::std::hash::pedersen_hash([\n            self.divinity.address,\n            self.private_oracle.address,\n            self.token.address,\n            self.bet_amount\n        ])\n    }\n\n    /// @notice this note isn't nullifiable, returns 0\n    fn compute_nullifier(self) -> Field {\n         let _ = self; // Avoid compiler warning (same # acir opcodes and backend size)\n         0\n    }\n\n    /// @notice get the note header\n    fn set_header(&mut self, header: NoteHeader) {\n        self.header = header;\n    }\n\n    /// @notice this notes isn't private, no owner to emit to\n    fn broadcast(self, context: &mut PrivateContext, slot: Field) {\n        // no owner == no broadcast\n        let _ = self; // Avoid compiler warning (same # acir opcodes and backend size)\n        let __ = context;\n        let ___ = slot;\n    }\n}\n\n/////////////////////////////////////////////////////////////////////\n//                         Global methods                          //\n/////////////////////////////////////////////////////////////////////\n\nfn deserialize(preimage: [Field; CONFIG_NOTE_LEN]) -> ConfigNote {\n    ConfigNote::deserialize(preimage)\n}\n\nfn serialize(note: ConfigNote) -> [Field; CONFIG_NOTE_LEN] {\n    note.serialize()\n}\n\nfn compute_note_hash(note: ConfigNote) -> Field {\n    note.compute_note_hash()\n}\n\nfn compute_nullifier(note: ConfigNote) -> Field {\n    note.compute_nullifier()\n}\n\nfn get_header(note: ConfigNote) -> NoteHeader {\n    note.header\n}\n\nfn set_header(note: &mut ConfigNote, header: NoteHeader) {\n    note.set_header(header)\n}\n\nfn broadcast(context: &mut PrivateContext, slot: Field, note: ConfigNote) {\n    note.broadcast(context, slot);\n}\n\nglobal ConfigNoteMethods = NoteInterface {\n    deserialize,\n    serialize,\n    compute_note_hash,\n    compute_nullifier,\n    get_header,\n    set_header,\n    broadcast,\n};",
        "path": "/home/shaito/wonderland/aztec-coin-toss-pvp/src/types/config_note.nr"
      },
      "155": {
        "source": "/* Autogenerated file, do not edit! */\n  \nuse dep::std;\nuse dep::aztec::context::{ PrivateContext, PublicContext };\nuse dep::protocol_types::constants::RETURN_VALUES_LENGTH;\n\nstruct AccountsBroadcastEscrowNoteForStruct {\n  address: Field,\n}\n\nstruct FromBurnPublicStruct {\n  address: Field,\n}\n\nstruct FromEscrowStruct {\n  address: Field,\n}\n\nstruct OwnerEscrowStruct {\n  address: Field,\n}\n\nstruct ToMintPublicStruct {\n  address: Field,\n}\n\nstruct ToRedeemShieldStruct {\n  address: Field,\n}\n\nstruct NewAdminSetAdminStruct {\n  address: Field,\n}\n\nstruct MinterSetMinterStruct {\n  address: Field,\n}\n\nstruct OwnerSettleEscrowStruct {\n  address: Field,\n}\n\nstruct RecipientSettleEscrowStruct {\n  address: Field,\n}\n\nstruct FromShieldStruct {\n  address: Field,\n}\n\nstruct FromTransferStruct {\n  address: Field,\n}\n\nstruct ToTransferStruct {\n  address: Field,\n}\n\nstruct FromTransferPublicStruct {\n  address: Field,\n}\n\nstruct ToTransferPublicStruct {\n  address: Field,\n}\n\nstruct FromUnshieldStruct {\n  address: Field,\n}\n\nstruct ToUnshieldStruct {\n  address: Field,\n}\n\n\n// Interface for calling Token functions from a private context\nstruct TokenPrivateContextInterface {\n  address: Field,\n}\n\nimpl TokenPrivateContextInterface {\n  pub fn at(address: Field) -> Self {\n      Self {\n          address,\n      }\n  }\n  \n  pub fn broadcast_escrow_note_for(\n    self,\n    context: &mut PrivateContext,\n    accounts: [AccountsBroadcastEscrowNoteForStruct;4],\n    randomness: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 5];\n    serialized_args[0] = accounts[0].address;\n    serialized_args[1] = accounts[1].address;\n    serialized_args[2] = accounts[2].address;\n    serialized_args[3] = accounts[3].address;\n    serialized_args[4] = randomness;\n\n    context.call_private_function(self.address, 0x2426c148, serialized_args)\n  }\n  \n\n  pub fn burn_public(\n    self,\n    context: &mut PrivateContext,\n    from: FromBurnPublicStruct,\n    amount: Field,\n    nonce: Field\n  ) {\n    let mut serialized_args = [0; 3];\n    serialized_args[0] = from.address;\n    serialized_args[1] = amount;\n    serialized_args[2] = nonce;\n\n    context.call_public_function(self.address, 0xb0e964d5, serialized_args)\n  }\n  \n\n  pub fn escrow(\n    self,\n    context: &mut PrivateContext,\n    from: FromEscrowStruct,\n    owner: OwnerEscrowStruct,\n    amount: Field,\n    nonce: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 4];\n    serialized_args[0] = from.address;\n    serialized_args[1] = owner.address;\n    serialized_args[2] = amount;\n    serialized_args[3] = nonce;\n\n    context.call_private_function(self.address, 0x54f7b220, serialized_args)\n  }\n  \n\n  pub fn get_escrow(\n    self,\n    context: &mut PrivateContext,\n    randomness: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 1];\n    serialized_args[0] = randomness;\n\n    context.call_private_function(self.address, 0x37785550, serialized_args)\n  }\n  \n\n  pub fn mint_private(\n    self,\n    context: &mut PrivateContext,\n    amount: Field,\n    secret_hash: Field\n  ) {\n    let mut serialized_args = [0; 2];\n    serialized_args[0] = amount;\n    serialized_args[1] = secret_hash;\n\n    context.call_public_function(self.address, 0x10763932, serialized_args)\n  }\n  \n\n  pub fn mint_public(\n    self,\n    context: &mut PrivateContext,\n    to: ToMintPublicStruct,\n    amount: Field\n  ) {\n    let mut serialized_args = [0; 2];\n    serialized_args[0] = to.address;\n    serialized_args[1] = amount;\n\n    context.call_public_function(self.address, 0x6bfd1d5b, serialized_args)\n  }\n  \n\n  pub fn redeem_shield(\n    self,\n    context: &mut PrivateContext,\n    to: ToRedeemShieldStruct,\n    amount: Field,\n    secret: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 3];\n    serialized_args[0] = to.address;\n    serialized_args[1] = amount;\n    serialized_args[2] = secret;\n\n    context.call_private_function(self.address, 0xb77168f2, serialized_args)\n  }\n  \n\n  pub fn set_admin(\n    self,\n    context: &mut PrivateContext,\n    new_admin: NewAdminSetAdminStruct\n  ) {\n    let mut serialized_args = [0; 1];\n    serialized_args[0] = new_admin.address;\n\n    context.call_public_function(self.address, 0x41b90896, serialized_args)\n  }\n  \n\n  pub fn set_minter(\n    self,\n    context: &mut PrivateContext,\n    minter: MinterSetMinterStruct,\n    approve: bool\n  ) {\n    let mut serialized_args = [0; 2];\n    serialized_args[0] = minter.address;\n    serialized_args[1] = approve as Field;\n\n    context.call_public_function(self.address, 0x7f020b80, serialized_args)\n  }\n  \n\n  pub fn settle_escrow(\n    self,\n    context: &mut PrivateContext,\n    owner: OwnerSettleEscrowStruct,\n    recipient: RecipientSettleEscrowStruct,\n    randomness: Field,\n    nonce: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 4];\n    serialized_args[0] = owner.address;\n    serialized_args[1] = recipient.address;\n    serialized_args[2] = randomness;\n    serialized_args[3] = nonce;\n\n    context.call_private_function(self.address, 0x510f50d4, serialized_args)\n  }\n  \n\n  pub fn shield(\n    self,\n    context: &mut PrivateContext,\n    from: FromShieldStruct,\n    amount: Field,\n    secret_hash: Field,\n    nonce: Field\n  ) {\n    let mut serialized_args = [0; 4];\n    serialized_args[0] = from.address;\n    serialized_args[1] = amount;\n    serialized_args[2] = secret_hash;\n    serialized_args[3] = nonce;\n\n    context.call_public_function(self.address, 0x1d24add0, serialized_args)\n  }\n  \n\n  pub fn transfer(\n    self,\n    context: &mut PrivateContext,\n    from: FromTransferStruct,\n    to: ToTransferStruct,\n    amount: Field,\n    nonce: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 4];\n    serialized_args[0] = from.address;\n    serialized_args[1] = to.address;\n    serialized_args[2] = amount;\n    serialized_args[3] = nonce;\n\n    context.call_private_function(self.address, 0xb1aa668a, serialized_args)\n  }\n  \n\n  pub fn transfer_public(\n    self,\n    context: &mut PrivateContext,\n    from: FromTransferPublicStruct,\n    to: ToTransferPublicStruct,\n    amount: Field,\n    nonce: Field\n  ) {\n    let mut serialized_args = [0; 4];\n    serialized_args[0] = from.address;\n    serialized_args[1] = to.address;\n    serialized_args[2] = amount;\n    serialized_args[3] = nonce;\n\n    context.call_public_function(self.address, 0x7db8f449, serialized_args)\n  }\n  \n\n  pub fn unshield(\n    self,\n    context: &mut PrivateContext,\n    from: FromUnshieldStruct,\n    to: ToUnshieldStruct,\n    amount: Field,\n    nonce: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 4];\n    serialized_args[0] = from.address;\n    serialized_args[1] = to.address;\n    serialized_args[2] = amount;\n    serialized_args[3] = nonce;\n\n    context.call_private_function(self.address, 0x78303b89, serialized_args)\n  }\n  \n}\n  \n  \n\n\n// Interface for calling Token functions from a public context\nstruct TokenPublicContextInterface {\n  address: Field,\n}\n\nimpl TokenPublicContextInterface {\n  pub fn at(address: Field) -> Self {\n      Self {\n          address,\n      }\n  }\n  \n  pub fn burn_public(\n    self,\n    context: PublicContext,\n    from: FromBurnPublicStruct,\n    amount: Field,\n    nonce: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 3];\n    serialized_args[0] = from.address;\n    serialized_args[1] = amount;\n    serialized_args[2] = nonce;\n\n    context.call_public_function(self.address, 0xb0e964d5, serialized_args)\n  }\n  \n\n  pub fn mint_private(\n    self,\n    context: PublicContext,\n    amount: Field,\n    secret_hash: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 2];\n    serialized_args[0] = amount;\n    serialized_args[1] = secret_hash;\n\n    context.call_public_function(self.address, 0x10763932, serialized_args)\n  }\n  \n\n  pub fn mint_public(\n    self,\n    context: PublicContext,\n    to: ToMintPublicStruct,\n    amount: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 2];\n    serialized_args[0] = to.address;\n    serialized_args[1] = amount;\n\n    context.call_public_function(self.address, 0x6bfd1d5b, serialized_args)\n  }\n  \n\n  pub fn set_admin(\n    self,\n    context: PublicContext,\n    new_admin: NewAdminSetAdminStruct\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 1];\n    serialized_args[0] = new_admin.address;\n\n    context.call_public_function(self.address, 0x41b90896, serialized_args)\n  }\n  \n\n  pub fn set_minter(\n    self,\n    context: PublicContext,\n    minter: MinterSetMinterStruct,\n    approve: bool\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 2];\n    serialized_args[0] = minter.address;\n    serialized_args[1] = approve as Field;\n\n    context.call_public_function(self.address, 0x7f020b80, serialized_args)\n  }\n  \n\n  pub fn shield(\n    self,\n    context: PublicContext,\n    from: FromShieldStruct,\n    amount: Field,\n    secret_hash: Field,\n    nonce: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 4];\n    serialized_args[0] = from.address;\n    serialized_args[1] = amount;\n    serialized_args[2] = secret_hash;\n    serialized_args[3] = nonce;\n\n    context.call_public_function(self.address, 0x1d24add0, serialized_args)\n  }\n  \n\n  pub fn transfer_public(\n    self,\n    context: PublicContext,\n    from: FromTransferPublicStruct,\n    to: ToTransferPublicStruct,\n    amount: Field,\n    nonce: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 4];\n    serialized_args[0] = from.address;\n    serialized_args[1] = to.address;\n    serialized_args[2] = amount;\n    serialized_args[3] = nonce;\n\n    context.call_public_function(self.address, 0x7db8f449, serialized_args)\n  }\n  \n}\n  \n  \n",
        "path": "/home/shaito/wonderland/aztec-coin-toss-pvp/src/types/token.nr"
      },
      "156": {
        "source": "/* Autogenerated file, do not edit! */\n  \nuse dep::std;\nuse dep::aztec::context::{ PrivateContext, PublicContext };\nuse dep::protocol_types::constants::RETURN_VALUES_LENGTH;\n\nstruct RequesterSubmitAnswerStruct {\n  address: Field,\n}\n\nstruct FromSubmitQuestionStruct {\n  address: Field,\n}\n\nstruct DivinityAddressSubmitQuestionStruct {\n  address: Field,\n}\n\n\n// Interface for calling PrivateOracle functions from a private context\nstruct PrivateOraclePrivateContextInterface {\n  address: Field,\n}\n\nimpl PrivateOraclePrivateContextInterface {\n  pub fn at(address: Field) -> Self {\n      Self {\n          address,\n      }\n  }\n  \n  pub fn cancel_question(\n    self,\n    context: &mut PrivateContext,\n    question: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 1];\n    serialized_args[0] = question;\n\n    context.call_private_function(self.address, 0x7d126cd4, serialized_args)\n  }\n  \n\n  pub fn consult_answer(\n    self,\n    context: &mut PrivateContext,\n    question: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 1];\n    serialized_args[0] = question;\n\n    context.call_private_function(self.address, 0x907da598, serialized_args)\n  }\n  \n\n  pub fn get_fee(\n    self,\n    context: &mut PrivateContext\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 0];\n\n    context.call_private_function(self.address, 0x64af47cf, serialized_args)\n  }\n  \n\n  pub fn initialize_payment_token(\n    self,\n    context: &mut PrivateContext,\n    payment_token: Field,\n    fee: Field\n  ) {\n    let mut serialized_args = [0; 2];\n    serialized_args[0] = payment_token;\n    serialized_args[1] = fee;\n\n    context.call_public_function(self.address, 0x233e29de, serialized_args)\n  }\n  \n\n  pub fn submit_answer(\n    self,\n    context: &mut PrivateContext,\n    question: Field,\n    requester: RequesterSubmitAnswerStruct,\n    answer: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 3];\n    serialized_args[0] = question;\n    serialized_args[1] = requester.address;\n    serialized_args[2] = answer;\n\n    context.call_private_function(self.address, 0xdc92d6e8, serialized_args)\n  }\n  \n\n  pub fn submit_question(\n    self,\n    context: &mut PrivateContext,\n    from: FromSubmitQuestionStruct,\n    question: Field,\n    divinity_address: DivinityAddressSubmitQuestionStruct,\n    nonce: Field,\n    callback: [Field;6]\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 10];\n    serialized_args[0] = from.address;\n    serialized_args[1] = question;\n    serialized_args[2] = divinity_address.address;\n    serialized_args[3] = nonce;\n    serialized_args[4] = callback[0];\n    serialized_args[5] = callback[1];\n    serialized_args[6] = callback[2];\n    serialized_args[7] = callback[3];\n    serialized_args[8] = callback[4];\n    serialized_args[9] = callback[5];\n\n    context.call_private_function(self.address, 0xb9d88bb1, serialized_args)\n  }\n  \n}\n  \n  \n\n\n// Interface for calling PrivateOracle functions from a public context\nstruct PrivateOraclePublicContextInterface {\n  address: Field,\n}\n\nimpl PrivateOraclePublicContextInterface {\n  pub fn at(address: Field) -> Self {\n      Self {\n          address,\n      }\n  }\n  \n  pub fn initialize_payment_token(\n    self,\n    context: PublicContext,\n    payment_token: Field,\n    fee: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 2];\n    serialized_args[0] = payment_token;\n    serialized_args[1] = fee;\n\n    context.call_public_function(self.address, 0x233e29de, serialized_args)\n  }\n  \n}\n  \n  \n",
        "path": "/home/shaito/wonderland/aztec-coin-toss-pvp/src/types/oracle.nr"
      },
      "157": {
        "source": "use dep::aztec::types::type_serialization::TypeSerializationInterface;\n\nmod Phase {\n    global BETTING: u120 = 1;\n    global AWAITING_ANSWER: u120 = 2;\n    global REVEAL: u120 = 3;\n    global CLAIM: u120 = 4;\n}\n\nstruct RoundData {\n    phase: u120, \n    current_phase_end: u120, \n    reveals_count: u120,\n    bettors: u120,\n    claim_amount: u120,\n}\n\nimpl RoundData {\n    pub fn new(\n        _phase: u120,\n        _current_phase_end: u120,\n        _reveals_count: u120,\n        _bettors: u120,\n        _claim_amount: u120,\n    ) -> Self {\n        Self {\n            phase: _phase,\n            current_phase_end: _current_phase_end,\n            reveals_count: _reveals_count,\n            bettors: _bettors,\n            claim_amount: _claim_amount,\n        }\n    }\n\n    pub fn add_bettor(round_data: RoundData) -> Self {\n        Self {\n            phase: round_data.phase,\n            current_phase_end: round_data.current_phase_end,\n            reveals_count: round_data.reveals_count,\n            bettors: round_data.bettors + 1,\n            claim_amount: round_data.claim_amount,\n        }\n    }\n\n    pub fn increase_reveal_count(round_data: RoundData) -> Self {\n        Self {\n            phase: round_data.phase,\n            current_phase_end: round_data.current_phase_end,\n            reveals_count: round_data.reveals_count + 1,\n            bettors: round_data.bettors,\n            claim_amount: round_data.claim_amount,\n        }\n    }\n}\n\nglobal ROUND_DATA_SERIALIZED_LEN: Field = 5;\n\nfn deserializeRoundData(fields: [Field; ROUND_DATA_SERIALIZED_LEN]) -> RoundData {\n    RoundData{phase: fields[0] as u120, current_phase_end: fields[1] as u120, reveals_count: fields[2] as u120, bettors: fields[3] as u120, claim_amount: fields[4] as u120}\n}\n\nfn serializeRoundData(value: RoundData) -> [Field; ROUND_DATA_SERIALIZED_LEN] {\n    [value.phase as Field, value.current_phase_end as Field, value.reveals_count as Field, value.bettors as Field, value.claim_amount as Field]\n}\n\nglobal RoundDataSerializationMethods = TypeSerializationInterface {\n    deserialize: deserializeRoundData,\n    serialize: serializeRoundData,\n};",
        "path": "/home/shaito/wonderland/aztec-coin-toss-pvp/src/types/round_data.nr"
      },
      "158": {
        "source": "/////////////////////////////////////////////////////////////////////\n//                             Imports                             //\n/////////////////////////////////////////////////////////////////////\n\nuse dep::aztec::{\n    context::PrivateContext,\n    log::emit_encrypted_log,\n    note::{\n        note_header::NoteHeader,\n        note_interface::NoteInterface,\n        utils::compute_note_hash_for_read_or_nullify,\n    },\n    oracle::{\n        get_public_key::get_public_key,\n        get_secret_key::get_secret_key,\n        notes::check_nullifier_exists,\n        notes::check_nullifier_exists_oracle,\n        rand::rand,\n    },\n    types::address::AztecAddress\n};\n\nuse dep::protocol_types::{\n    constants::EMPTY_NULLIFIED_COMMITMENT,\n};\n\nuse dep::std::option::Option;\n\n\n/////////////////////////////////////////////////////////////////////\n//                              Class                              //\n/////////////////////////////////////////////////////////////////////\n\n/// @notice A note that represents a given bet, of a given user\n/// @member owner The owner of the note\n/// @member round_id The id of the round this bet is placed on\n/// @member header The note header\nstruct RevealNote {\n    owner: AztecAddress,\n    round_id: Field,\n    randomness: Field,\n    header: NoteHeader\n}\n\nglobal REVEAL_NOTE_LEN: Field = 3;\n\nimpl RevealNote {\n    /////////////////////////////////////////////////////////////////////\n    //                         Public methods                          //\n    /////////////////////////////////////////////////////////////////////\n\n    /// @notice Reveal note constructor\n    /// @param _owner The owner of the note\n    /// @param _round_id The round id of the bet\n    /// @param _randomness An extra randomness field. Used for linking to other notes, identifaction and nullification.\n    pub fn new(_owner: AztecAddress, _round_id: Field, _randomness: Field) -> Self {\n        RevealNote {\n            owner: _owner,\n            round_id: _round_id,\n            randomness: _randomness,\n            header: NoteHeader::empty(),\n        }\n    }\n\n    /////////////////////////////////////////////////////////////////////\n    //                        Internal methods                         //\n    /////////////////////////////////////////////////////////////////////\n\n    /// @notice Serializes the note\n    fn serialize(self) -> [Field; REVEAL_NOTE_LEN] {\n        [self.owner.address, self.round_id, self.randomness]\n    }\n\n    /// @notice Deserializes the note\n    fn deserialize(preimage: [Field; REVEAL_NOTE_LEN]) -> Self {\n        RevealNote {\n            owner: AztecAddress::new(preimage[0]),\n            round_id: preimage[1],\n            randomness: preimage[2],\n            header: NoteHeader::empty(),\n        }\n    }\n\n    /// @notice Computes the note hash of the note\n    fn compute_note_hash(self) -> Field {\n        dep::std::hash::pedersen_hash([\n            self.owner.address,\n            self.round_id,\n            self.randomness\n        ])\n    }\n\n    /// @notice Computes the nullifier of the note\n    fn compute_nullifier(self) -> Field {\n        let note_hash_for_nullify = compute_note_hash_for_read_or_nullify(RevealNoteMethods, self);\n        let nullifier_key = self.randomness;\n\n        dep::std::hash::pedersen_hash([\n            note_hash_for_nullify,\n            nullifier_key,\n        ])\n    }\n\n    /// @notice Sets the note header\n    fn set_header(&mut self, header: NoteHeader) {\n        self.header = header;\n    }\n\n    /// @notice Emit the note creation event using the owner public key\n    fn broadcast(self, context: &mut PrivateContext, slot: Field) {\n        let encryption_pub_key = get_public_key(self.owner.address);\n        emit_encrypted_log(\n            context,\n            (*context).this_address(),\n            slot,\n            encryption_pub_key,\n            self.serialize(),\n        );\n    }\n}\n\n/////////////////////////////////////////////////////////////////////\n//                         Global methods                          //\n/////////////////////////////////////////////////////////////////////\n\nfn deserialize(preimage: [Field; REVEAL_NOTE_LEN]) -> RevealNote {\n    RevealNote::deserialize(preimage)\n}\n\nfn serialize(note: RevealNote) -> [Field; REVEAL_NOTE_LEN] {\n    note.serialize()\n}\n\nfn compute_note_hash(note: RevealNote) -> Field {\n    note.compute_note_hash()\n}\n\nfn compute_nullifier(note: RevealNote) -> Field {\n    note.compute_nullifier()\n}\n\nfn get_header(note: RevealNote) -> NoteHeader {\n    note.header\n}\n\nfn set_header(note: &mut RevealNote, header: NoteHeader) {\n    note.set_header(header)\n}\n\nfn broadcast(context: &mut PrivateContext, slot: Field, note: RevealNote) {\n    note.broadcast(context, slot);\n}\n\nglobal RevealNoteMethods = NoteInterface {\n    deserialize,\n    serialize,\n    compute_note_hash,\n    compute_nullifier,\n    get_header,\n    set_header,\n    broadcast,\n};",
        "path": "/home/shaito/wonderland/aztec-coin-toss-pvp/src/types/reveal_note.nr"
      }
    }
  }
}