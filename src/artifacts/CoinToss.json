{
  "name": "CoinToss",
  "functions": [
    {
      "name": "_increase_bettors",
      "functionType": "open",
      "isInternal": true,
      "parameters": [
        {
          "name": "round_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_header",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::BlockHeader",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "archive_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "_increase_reveals",
      "functionType": "open",
      "isInternal": true,
      "parameters": [
        {
          "name": "round_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "user_bet",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_header",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::BlockHeader",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "archive_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "_set_result",
      "functionType": "open",
      "isInternal": true,
      "parameters": [
        {
          "name": "caller",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "round_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "answer",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_header",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::BlockHeader",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "archive_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "_validate_claim",
      "functionType": "open",
      "isInternal": true,
      "parameters": [
        {
          "name": "round_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "amount",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_header",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::BlockHeader",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "archive_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "bet",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "bet",
          "type": {
            "kind": "boolean"
          },
          "visibility": "private"
        },
        {
          "name": "round_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "bet_randomness",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "unshield_nonce",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "claim",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "round_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "amount",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "compute_note_hash_and_nullifier",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [
        {
          "name": "contract_address",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "nonce",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "storage_slot",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "preimage",
          "type": {
            "kind": "array",
            "length": 4,
            "type": {
              "kind": "field"
            }
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "array",
          "length": 4,
          "type": {
            "kind": "field"
          }
        }
      ],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "constructor",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "divinity",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "private_oracle",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "token",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "bet_amount",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "phase_length",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "end_bet_phase",
      "functionType": "open",
      "isInternal": true,
      "parameters": [
        {
          "name": "round_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_header",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::BlockHeader",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "archive_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "end_reveal_phase",
      "functionType": "open",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_header",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::BlockHeader",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "archive_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_bet_amount_unconstrained",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "field"
        }
      ],
      "bytecode": "H4sIAAAAAAAA/8VUSQ7CMAx0QhYCEl/gzqmID/QN/KASFUck4P+CQEYdrKqXpsKXuE4y44ztGhEx8rWVDGaUfyh+oHhb1mamBeKrhenfGL5gJcrZlnVX3mLr8p62IxoG0rYSz5Hrw7hCXEl+64jYSmmRyMde1m5P+37kThjh4/uIORl00HdZI6/e0syzj0bM09I3uDYqhyVzgQ7AdSqXf/LGurxNxlgTL/oiku7gx7lEPvePVeeiLDNTQYYeqIXJ/Q+bmt0lezDrh//T43m7d9f+3HcXQ2k5laKl1NjnkUdJHcWmyhgpBhwurZan2vs1rlFrthcEivocEAcAAA==",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_config_unconstrained",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "types::config_note::ConfigNote",
          "fields": [
            {
              "name": "divinity",
              "type": {
                "kind": "struct",
                "path": "aztec::types::address::AztecAddress",
                "fields": [
                  {
                    "name": "address",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "private_oracle",
              "type": {
                "kind": "struct",
                "path": "aztec::types::address::AztecAddress",
                "fields": [
                  {
                    "name": "address",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "token",
              "type": {
                "kind": "struct",
                "path": "aztec::types::address::AztecAddress",
                "fields": [
                  {
                    "name": "address",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "bet_amount",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "header",
              "type": {
                "kind": "struct",
                "path": "aztec::note::note_header::NoteHeader",
                "fields": [
                  {
                    "name": "contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nonce",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_slot",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_transient",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_divinity_address_unconstrained",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::types::address::AztecAddress",
          "fields": [
            {
              "name": "address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "H4sIAAAAAAAA/8VUuw7CMAx0Qh4EJH6BnakM7P0G/qASFSMS8P+CQE49rKpLU+ElrpPcOWe7RkSMfG0lgxnlH4ofKN6WtZlpgfhqYfo3hi9YiXK2Zd2Vt9i6vKftiIaBtK3Ec+T6MK4QV5LfOiK2Ulok8rGXtdvTvh+5E0b4+D5iTgYd9F3WyKu3NPPsoxHztPQNro3KYclcoANwncrln7yxLm+TMdbEi76IpDv4cS6Rz/1j1bkoy8xUkKEHamFy/8OmZnfJHsz64f/0eN7u3bU/993FUFpOpWgpNfZ55FFSR7GpMkaKAYdLq+Wp9n6Na9Sa7QUdXUc/EAcAAA==",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_oracle_address_unconstrained",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::types::address::AztecAddress",
          "fields": [
            {
              "name": "address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "H4sIAAAAAAAA/8VUSQ7CMAx0QhYCEl/gzqlIPKBv4AeVqDgiAf8XBDLqYFW9NBW+xHWSGWds14iIka+tZDCj/EPxA8XbsjYzLRBfLUz/xvAFK1HOtqy78hZbl/e0HdEwkLaVeI5cH8YV4kryW0fEVkqLRD72snZ72vcjd8IIH99HzMmgg77LGnn1lmaefTRinpa+wbVROSyZC3QArlO5/JM31uVtMsaaeNEXkXQHP84l8rl/rDoXZZmZCjL0QC1M7n/Y1Owu2YNZP/yfHs/bvbv25767GErLqRQtpcY+jzxK6ig2VcZIMeBwabU81d6vcY1as70ARoe13RAHAAA=",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_phase_length_unconstrained",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "field"
        }
      ],
      "bytecode": "H4sIAAAAAAAA/8VUSQ7CMAx0QhYCEl/gzqnwgr6BH1Si4ogE/F8QyKiDVfXSVPgS10lmnLFdIyJGvraSwYzyD8UPFG/L2sy0QHy1MP0bwxesRDnbsu7KW2xd3tN2RMNA2lbiOXJ9GFeIK8lvHRFbKS0S+djL2u1p34/cCSN8fB8xJ4MO+i5r5NVbmnn20Yh5WvoG10blsGQu0AG4TuXyT95Yl7fJGGviRV9E0h38OJfI5/6x6lyUZWYqyNADtTC5/2FTs7tkD2b98H96PG/37tqf++5iKC2nUrSUGvs88iipo9hUGSPFgMOl1fJUe7/GNWrN9gJfUAj+EAcAAA==",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_result",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [
        {
          "name": "round_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "boolean"
        }
      ],
      "bytecode": "H4sIAAAAAAAA/81XzU7DMAxO+t/9/3AnTzC1u3DhUO6c4AkqbXDZqLQW8fosmy2+ZRVCmstmqY1rN/4+22mUekoprY7ig47CtoLG7DLJtVysDPl6++uZ9JSeUSLQCyH8SL4+GXLnMdxfMeSmHP+I8gtluSwtlq9OxV0jBegh1DqQ5ZJH6qeHQjEP/YtlYz7YGAnUxIeaWOmDPwZfIlwvrc7XPD8jv79y9a7Mtav+p7IxlwPizLVMgb+bT184HxujR7ECwOoD5rCD3g0olqaLMXqAO+oAl3FCwmUejOXDO4bGIdTD7UcXtUEpQGcs5KKvzCVV5/t7Cv4EbJ4z1/bgCfwT0j2wTUn3W2JPwDYmfdoyF2s0cXLJLpNDjRCngGfG6gGH6Q1wSf6JC/eE444dLtfEncniHvbROeDyGp1B3Rl/DjzuhHloh4cGXMZKQZ+DzXPei4mjL8uxi3NZbvkH6lR+278iGIXPwLn9vniPrptqV76vX9blSgOtwKGIvx6o47bHR78AbPwph2Dj+Xj85zh4jDz7dSuE8sdEVUuibf57Gh9pfD3WzdSbqjGZ+djfy82m+lqvFgZ9tdl+1o2pm3LXmLddtTX54htCyIFWpA4AAA==",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_reveal_notes_unconstrained",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [
        {
          "name": "start_offset",
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 32
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "array",
          "length": 10,
          "type": {
            "kind": "struct",
            "path": "std::option::Option",
            "fields": [
              {
                "name": "_is_some",
                "type": {
                  "kind": "boolean"
                }
              },
              {
                "name": "_value",
                "type": {
                  "kind": "struct",
                  "path": "types::reveal_note::RevealNote",
                  "fields": [
                    {
                      "name": "owner",
                      "type": {
                        "kind": "struct",
                        "path": "aztec::types::address::AztecAddress",
                        "fields": [
                          {
                            "name": "address",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "round_id",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "randomness",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "header",
                      "type": {
                        "kind": "struct",
                        "path": "aztec::note::note_header::NoteHeader",
                        "fields": [
                          {
                            "name": "contract_address",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "nonce",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "storage_slot",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "is_transient",
                            "type": {
                              "kind": "boolean"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_round_data",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [
        {
          "name": "round_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "types::round_data::RoundData",
          "fields": [
            {
              "name": "phase",
              "type": {
                "kind": "integer",
                "sign": "unsigned",
                "width": 120
              }
            },
            {
              "name": "current_phase_end",
              "type": {
                "kind": "integer",
                "sign": "unsigned",
                "width": 120
              }
            },
            {
              "name": "reveals_count",
              "type": {
                "kind": "integer",
                "sign": "unsigned",
                "width": 120
              }
            },
            {
              "name": "bettors",
              "type": {
                "kind": "integer",
                "sign": "unsigned",
                "width": 120
              }
            },
            {
              "name": "claim_amount",
              "type": {
                "kind": "integer",
                "sign": "unsigned",
                "width": 120
              }
            }
          ]
        }
      ],
      "bytecode": "H4sIAAAAAAAA/82Y3W7aQBCF19iYv5BASEhISHB+riNDG6kXvfAztE9gKbQ3pEjYVfv4jZ0d9evGrSoxDhkJdjxr5pwzu2a9GxpjPPNsPnyaxBLbxtvZ3NPLFTfBswEdhQW2lXvCp8/K+h3cb9BvdLXGoX79YnJvQGMP2tyadMyf4+zWIEDMR06JBU6N9q3f1NW2IL6YOycT+BzbQJfLPDS/9SrlLOdDSzfnhyJHGzXxUZPCeuhvoa+tXC/PvHyG5Jr8/pdrY8dc6xr/jm7OxZ7lzOfa/EVPT1lPkaNrcwXA6gGzX8PY7dlcnv0IRhe4+zXgCk7T4goPwfJxz61t+6iHOx511IaWwBcscvF2zIXrkkGs79SKaxXHIEX/wPpc84bW9ytyDxA7sP6w4res0cDREm9nZY2Ik+BasLrgMHwDXNqvxEXGRPIeOFx2iXuoi1v+j46AK3P0EHUX/BF4HCnz8BweP4F7BNxj5boXOcYV+o+hX/DH4HGiy6PUP3b0C+4JcE91cRdFjkmF/lPoF/wJeJzp8ij1Txz9gnsG3HNd3HdFjmmF/nPoF/wpeFzo8ij1Tx39gnsB3Etd3PdFjlmF/kvoF/wZeES6PEr9M0e/4ApWB/4IsSvrjxG7tv4EsRvrTxG7dbRxvY8Qk3X8CjHZ910jJvvCG8TkfViwWjYmORPbxtvZfQ37hnvqFPvX+1WIVnmPPi/Wf3mHzPL1Jv26/LRMHzzQco9eeNRCn69lsjXlUUTbycNp0UJM8nCb++IoK1HST6GmQqhvRRQxnv/wfpmXH237+bmOUbZa51EcfXv6Tler9Y/lw13Evix6/J7lUZanmzz6slk/RvO7X48KJpXEEwAA",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_round_id",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "field"
        }
      ],
      "bytecode": "H4sIAAAAAAAA/8VUSQ7CMAx00iwEJL7AnVP5Qd/ADypRcUQC/i8IZNTBqnppKnyJ6yQzztiuEREjX2tkNKP8Y/EDxbuytgstEF8tTP/G8AUrUc62rPvyFluX97Sb0DCQtrV4uD6MK8SV5LeOiDVKi0Q+9rJ2B9r3E3fCBB/fR8zJqIO+yxp59ZZ2mX00Yp6OvsG1VTmsmQt0AK5TufyTN9blbTPGhnjRF5F0Bz/OJfK5f6w6F2WdmQoy9kAtTO5/2NzsrtmDWT/8nx7P272/DuehvxhKy6kULaXGPo88SuooNlfGSDHgcGm1PNXer3GNWrO9APM4bgIQBwAA",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_token_address_unconstrained",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::types::address::AztecAddress",
          "fields": [
            {
              "name": "address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "H4sIAAAAAAAA/8VUuw7CMAx0Qh4EJH6BnakszP0G/qASFSMS8P+CQE49rKpLU+ElrpPcOWe7RkSMfG0lgxnlH4ofKN6WtZlpgfhqYfo3hi9YiXK2Zd2Vt9i6vKftiIaBtK3Ec+T6MK4QV5LfOiK2Ulok8rGXtdvTvh+5E0b4+D5iTgYd9F3WyKu3NPPsoxHztPQNro3KYclcoANwncrln7yxLm+TMdbEi76IpDv4cS6Rz/1j1bkoy8xUkKEHamFy/8OmZnfJHsz64f/0eN7u3bU/993FUFpOpWgpNfZ55FFSR7GpMkaKAYdLq+Wp9n6Na9Sa7QWxNSHDEAcAAA==",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_user_bets_unconstrained",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [
        {
          "name": "start_offset",
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 32
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "array",
          "length": 10,
          "type": {
            "kind": "struct",
            "path": "std::option::Option",
            "fields": [
              {
                "name": "_is_some",
                "type": {
                  "kind": "boolean"
                }
              },
              {
                "name": "_value",
                "type": {
                  "kind": "struct",
                  "path": "types::bet_note::BetNote",
                  "fields": [
                    {
                      "name": "owner",
                      "type": {
                        "kind": "struct",
                        "path": "aztec::types::address::AztecAddress",
                        "fields": [
                          {
                            "name": "address",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "round_id",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "bet",
                      "type": {
                        "kind": "boolean"
                      }
                    },
                    {
                      "name": "randomness",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "header",
                      "type": {
                        "kind": "struct",
                        "path": "aztec::note::note_header::NoteHeader",
                        "fields": [
                          {
                            "name": "contract_address",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "nonce",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "storage_slot",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "is_transient",
                            "type": {
                              "kind": "boolean"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "initialize",
      "functionType": "open",
      "isInternal": false,
      "parameters": [
        {
          "name": "phase_length",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "bet_amount",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "oracle_address",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "divinity_address",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "token_address",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_header",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::BlockHeader",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "archive_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "is_round_randomness_nullified",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [
        {
          "name": "round_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "randomness",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "boolean"
        }
      ],
      "bytecode": "H4sIAAAAAAAA/82XS2rDMBCGRw87ftFV79CtkxNo02W76RFCSk2zalro8RMlGvhRJhDICHvAyNJYo29+yZLtiMjQxdzpsnRt7A+pHB+ztdGLNZbktIqcBjijzh/pvhU0b9MzmFMN/qDEVOtrNmI+VsiHyyq1E5TY5+l09UJ7ZPa6zGucG4xLMBayuAWxmJlZWmAgaGM/roEq3Ttos0I8XCNcvtwZ2wvPoUZ1lsv4mJ01wnEC1HmsDhj8Aljcglik+Wd/BW0267sqw73BdUPAjxbgvoayUtawTnkqxjyflw3we9AzWg9+1LxRzs3AmByX68h3L6ubmbXEXMWYrW7MzZCY8X0jIZ9emIPI0xXQljJt2TqBxczMcuu86zKtcM9iX9wf3sDPeVkhTi88h7kPBXLHcQLUB8jDZHxzsjSCVujnNpv1XaW+z6m+/dptv9//9vvpc9r9vP5Ph99D/r3OLGy4N2rv+zEGv5+err+H8Iz0Qp54RuZrVfXniEXBHxj8mWQ7AtJRWaxlDgAA",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "oracle_callback",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "answer",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "data",
          "type": {
            "kind": "array",
            "length": 5,
            "type": {
              "kind": "field"
            }
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "reveal",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "round_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "user_randomness",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "roll",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "round_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "oracle_nonce",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "start_next_round",
      "functionType": "open",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_header",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::BlockHeader",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "archive_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    }
  ],
  "events": [],
  "debug": {
    "debugSymbols": [
      "",
      "",
      "",
      "",
      "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5KyGnNWQsxpyVkPOashZDTmrIWc15KyGnNWQsxpyVkPOashZDTmrIWc15KyGnNWQsxpyVkPOashZDTmrIWc15KyGnNWQsxpyVkPOashZDTmrIWc15KyGnNWQsxpyVkPOashZDTmrIWc15KKGXNSQixpyUUMuashFDbmoIRc15KKGXNSQixpyUUMuashFDbmoIRc15KKGXNSQixpyUUMuashFDbmoIRc15KKGXNSQixpyUUMuashFDbmoIRc15KKGXNSQixpyUUMuashFDbmoIRc15KKGXNSQixpyUUMuashFDbmoIRc15KKGXNSQixpyUUMuashFDbmoIRc15KKGXNSQixpyUUMuashFDbmoIRc15KKGXNSQixpyUUMuashFDbmoIRc15KKGXNSQixpyUUMuashFDbmoIRc15KKGXNSQixpyUUMuashFDbmoIRc15KKGXNSQixpyUUMuashFDbmoIRc15KKGXNSQixpyUUOuashVDbmqIVc15KqGXNWQqxpyVUOuashVDbmqIVc15KqGXNWQqxpyVUOuashVDbmqIVc15KqGXNWQqxpyVUOuashVDbmqIVc15KqGXNWQqxpyVUOuashVDbmqIVc15KqGXNWQqxpyVUOuashVDbmqIVc15KqGXNWQqxpyVUOuashVDbmqIVc15KqGXNWQqxpyVUOuashVDbmqIVc15KqGXNWQqxpyVUOuashVDbmqIVc15KqGXNWQqxpyVUOuashVDbmqIVc15KqGXNWQqxpyVUOuashVDbmqIVc15KqGXNWQqxpyVUOuashVDbmqIVc15KqGXNWQqxpyVUOuashVDbmqIVc15KaG3NSQmxpyU0NuashNDbmpITc15KaG3NSQmxpyU0NuashNDbmpITc15KaG3NSQmxpyU0NuashNDbmpITc15KaG3NSQmxpyU0NuashNDbmpITc15KaG3NSQmxpyU0NuashNDbmpITc15KaG3NSQmxpyU0NuashNDbmpITc15KaG3NSQmxpyU0NuashNDbmpITc15KaG3NSQmxpyU0NuashNDbmpITc15KaG3NSQmxpyU0NuashNDbmpITc15KaG3NSQmxpyU0NuashNDbmpITc15KaG3NSQmxpyU0NuashNDbmpITc15KaG3NSQmxpyU0NuashNDbmpITc15KaG3NSQmxpyU0PuashdDbmr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Uxd26sJOXdipCzt1Yacu7NSFnbqwUxd26sJOXdipCzt1Yacu7NSFnbqwUxd26sJOXdipCzt1Yacu7NSFnbqwUxd26sJOXdipCzt1Yacu7NSFnbqwUxd26sJOXdipCzt1Yacu7NSFnbqwUxd26sJOXdipCzt1Yacu7NSFnbqwUxd26sJOXdipCzt1Yacu7NSFnbqwUxd26sJOXdipCzt1Yacu7NSFnbqwUxd26sJOXdipCzt1Yacu7NSFnbqwUxd26sJOXdipCzt1Yacu7NSFnbqwUxd26sJOXdipCzt1Yacu7NSFnbqwUxd26sJOXdipCzt1Yacu7NSVnbqyU1d26spOXdmpKzt1Zaeu7NSVnbqyU1d26spOXdmpKzt1Zaeu7NSVnbqyU1d26spOXdmpKzt1Zaeu7NSVnbqyU1d26spOXdmpKzt1Zaeu7NSVnbqyU1d26spOXdmpKzt1Zaeu7NSVnbqyU1d26spOXdmpKzt1Zaeu7NSVnbqyU1d26spOXdmpKzt1Zaeu7NSVnbqyU1d26spOXdmpKzt1Zaeu7NSVnbqyU1d26spOXdmpKzt1Zaeu7NSVnbqyU1d26spOXdmpKzt1Zaeu7NSVnbqyU1d26spOXdmpKzt1Zaeu7NSVnbqyU1d26spOXdmpKzt1Zaeu7NSVnbqyU1d26spO3dipGzt1Y6du7NSNnbqxUzd26sZO3dipGzt1Y6du7NSNnbqxUzd26sZO3dipGzt1Y6du7NSNnbqxUzd26sZO3dipGzt1Y6du7NSNnbqxUzd26sZO3dipGzt1Y6du7NSNnbqxUzd26sZO3dipGzt1Y6du7NSNnbqxUzd26sZO3dipGzt1Y6du7NSNnbqxUzd26sZO3dipGzt1Y6du7NSNnbqxUzd26sZO3dipGzt1Y6du7NSNnbqxUzd26sZO3dipGzt1Y6du7NSNnbqxUzd26sZO3dipGzt1Y6du7NSNnbqxUzd26sZO3dipGzt1Y6du7NSNnbqxUzd26sZO3dipGzt1Y6du7NSdnbqzU3d26s5O3dmpOzt1Z6fu7NSdnbqzU3d26s5O3dmpOzt1Z6fu7NSdnbqzU3d26s5O3dmpOzt1Z6fu7NSdnbqzU3d26s5O3dmpOzt1Z6fu7NSdnbqzU3d26s5O3dmpOzt1Z6fu7NSdnbqzU3d26s5O3dmpOzt1Z6fu7NSd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wk5d2KkLO3Vhpy7s1IWdurBTF3bqwk5d2KkLO3Vhpy7s1IWdurBTF3bqwk5d2KkLO3Vhpy7s1IWdurBTF3bqwk5d2KkLO3Vhpy7s1IWdurBTF3bqwk5d2KkLO3Vhpy7s1IWdurBTF3bqwk5d2KkLO3Vhpy7s1IWdurBTF3bqwk5d2KkLO3Vhpy7s1IWdurBTF3bqwk5d2KkLO3Vhpy7s1IWdurBTF3bqwk5d2KkLO3Vhpy7s1IWdurBTV3bqyk5d2akrO3Vlp67s1JWdurJTV3bqyk5d2akrO3Vlp67s1JWdurJTV3bqyk5d2akrO3Vlp67s1JWdurJTV3bqyk5d2akrO3Vlp67s1JWdurJTV3bqyk5d2akrO3Vlp67s1JWdurJTV3bqyk5d2akrO3Vlp67s1JWdurJTV3bqyk5d2akrO3Vlp67s1JWdurJTV3bqyk5d2akrO3Vlp67s1JWdurJTV3bqyk5d2akrO3Vlp67s1JWdurJTV3bqyk5d2akrO3Vlp67s1JWdurJTV3bqyk5d2akrO3Vlp67s1JWdurJTV3bqyk5d2akrO3Vlp67s1JWdurJTV3bqyk5d2akrO3Vjp27s1I2durFTN3bqxk7d2KkbO3Vjp27s1I2durFTN3bqxk7d2KkbO3Vjp27s1I2durFTN3bqxk7d2KkbO3Vjp27s1I2durFTN3bqxk7d2KkbO3Vjp27s1I2durFTN3bqxk7d2KkbO3Vjp27s1I2durFTN3bqxk7d2KkbO3Vjp27s1I2durFTN3bqxk7d2KkbO3Vjp27s1I2durFTN3bqxk7d2KkbO3Vjp27s1I2durFTN3bqxk7d2KkbO3Vjp27s1I2durFTN3bqxk7d2KkbO3Vjp27s1I2durFTN3bqxk7d2KkbO3Vjp27s1I2durFTN3bqxk7d2KkbO3Vjp27s1I2durFTd3bqzk7d2ak7O3Vnp+7s1J2durNTd3bqzk7d2ak7O3Vnp+7s1J2durNTd3bqzk7d2ak7O3Vnp+7s1J2durNTd3bqzk7d2ak7O3Vnp+7s1J2durNTd3bqzk7d2ak7O3Vnp+7s1J2durNTd3bqzk7d2ak7O3Vnp+7s1J2durNTd3bqzk7d2ak7O3Vnp+7s1J2durNTd3bqzk7d2ak7O3Vnp+7s1J2durNTd3bqzk7d2ak7O3Vnp+7s1J2durNT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",
      "",
      "eJztnNFu2zoMht/F18UgUpQo9VWGc1GcbcCAoTtYe1fk3Zeisaw5moicqGRj+GodQMVffrufxETVy/Tj578Pz99/Pj5N9y+Tn+4/v0xP/z08vv7v6fnh1/N07+6mr49fjv8e7qZv3398ne7hcHdWBeRjPFUef06pVGdslQcEmMsDRqE8M8/FDsNSGw7/3E10k9RBkdpTKNTkwhXUsUXNENNpCKOnPnuOeKpFh9X79NyoTjS/zwzLuwRqvXKXm2+UO13LjeBmFMRAAjfn+QlMPi61rlUb0hxIrB4pAGrUEuS5mBCqVw6taswun6q9SyxUM9EcRsJSS6/p5Y+bXoSSXkQhPSxPiK+fPHCXPk3gdAPJ5AqM4z8SeaUBOxrAMxps0ng/58mUBEX4zOUKPqcq/dZdHTmZQHPmflf4cXMKNCfwi+DJQaEhR7GGf71Cc7K98AoOe1doT4yXXSGUkAiIhRtAgXMp5+p5PgG1Z7z3BMrgS3n2bg3UnsoMgdqzgx0Qtu1sCNQWtCHQ9Y4eDHS9dwcDjXDpUKAR6h0KpG9qAcjA1NEtQMxrIANT94EMTN0F8gam7gMZmLoPZGDqPpCBqftABqbuAxmYug9kYOo+kLqpg6taRIdpDaRuaglI3dQCEKmbWgJSN7UEpG5qCUjd1BKQuqklIHVTS0DqppaA9E1NWH0eRuuPY0jf1AKQvqn7QEHf1AKQvqkFIH1TC0D6phaA9E0tAOmbWgDSN7UAZGDqtEwdlPMayMDUfSADU3eBooGp+0AGpu4DGZi6D2Rg6j6Qgan7QAam7gMZmLoPpG/qUH3HHKJfA+mbWgDSN3UfiPVNLQDpm1oA0je1AKRvagFI39QCkL6pBSB9UwtA6qaOlMpmlBjOvuJkdVPH42RWgOr9iScgdVPH6HEB4vUtS+qmZpdKQgy0Tiipm5ohlq/JGWH9kV5SNzWjjwvQ2XooqZuaPZRyprMtX0nd1Ey+fF/Gwa03xSV1U3Og5ZaFIJRHmh+4WO2+BN+s9Ti/1aPgql/fi7c7JvXp4iZSUZ+zLkyl7HbneidzMxWAnEsnhQ6EzbHkymxOUL34/whRfZ59xxCPU0BZUyBWG+rbf+Tiki+Zu3xdjOqrg03GmPXXNJuMUX8ltskY9dePm4xRf9W7yRj11+qbjPGjdxg3EuNHb0luJMYt9TCGMe5dzJAY9y5mRIzg9jZmTI57HzMmx72RGZPj3smMyXFTrYzH8tLHGFHK0VP5Vs+Ru+oIB7epXsYwx001M4Y5bqqbMcxxU+2MYY6b6mfscvzLIVB7jpfmuKl+xjDHTfUzhjluqp8xzHHvZ8bkuPczY3Lc+5kxOe79zJgc935mTI57PzMkR/1jE98zR87L57iJrzpWVf/4xsuCCWneO8zBC8EIHw18ai9+Q55HRagOTqYyqrnUE0c1FzZU/lgg1KO8ezvi9lPzt305w/WPU6CRT4Pavbo4qnnjoZxOjVA9hxDfzq/9y6j+tY6jmt2bOKp9u6RR7dsljWrers6ow+E3h7oV7w==",
      "",
      "",
      "eJzNlcsKg0AMRf8laymTZHz+SulCWguCaKnuZP69tgzW4hQ3Inc3A/fCWSQnIzXdtRzqru2pGMmcYirOI/WPsn3/+6F8DlSIcJJGVLW3zzsXF9G9bioq2EWrNEsiPsyq+s1qHkhrbH1Y83iRZXeJJp4EjCcF48nAeHIwHjZoQIwGJGhAigZk0YDQLM1ommY0TzOaqBnN1IJmakEztaCZWtBMLWimlsNNbQ37sBXzA7TOThgzxQLeZh7+cKvvCX/4BdgRXsPqMTO6tetZ07AeNkrhFd4ohddsoxRehY1SeAT/l5x7AT9BQi4=",
      "",
      "eJzNlcsKgzAQRf9l1lIyM4lWf6V0Ia0FQbRUd5J/74OILaa4Ebk7hXPhLJKTkZruUg511/ZUjGQOjorTSP29bN///VA+BipErNGEqvb6+VbrE7rVTUUF+2RBs6QSYFbVmdU8QquzAdbcfbHsz8nLJwXzycB8jmA+OZgPGzQhRhMSNCFFE7JoQmiVZrRMM1qnGS3UjFZqQSu1oJVa0EotaKUWtFLL7qW2hgNsxfwILVlx+WSRHmfWmSC/e9W3lN/9BdhQXuPpMdk0snZ51jSeh5VR/AqvjOLXbGUUvworo/gR/D/y/glfYEGL",
      "eJzNlcsKg0AMRf8laymTZMbXr5QupLUgiJbqTvz3Kii2OGU2IneXgXvhLJIzA9XtveirtukoH8hcHOXXgbpX0czvri/ePeUikkpEZfOYZ2UeI3pWdUn5NO3SLPEaZlXdspp50ursEtbMfWV5vEUTTwzGk4DxpGA8GRgPGzQgRgMSNCBFA7JoQGiWZjRNM5qnGU3UjGZqQTO1oJla0EwtaKYWNFPL6aa2hpewFfMDtM+Ky1aKON2yzizwp1v9SPjTf4AD4dWvHpOsJWv3u6Z+PQRK/hMOlPxnFij5TyFQ8q/g/9I4fgCkGUF0",
      "eJzNlcsKgzAQRf9l1lIyMzE+fqV0Ia0FQbRUd5J/7wNtLaa4Ebm7BO4NZzFzMlDdnou+apuO8oHMIab8OFB3K5rXveuLe0+5iHEcUdlc3uc09RFdq7qknH20SLM4GcOsqt+sZoG0xnYMaxbPsuxP0ZPHgfEkYDwpGE8GxsMGDYjRgAQNSNGALBoQmqUZTdOM5mlGEzWjmVrQTC1ophY0UwuaqQXN1LK7qa2ZXrZifoCWWWH3oZjB23SE393qW8Lv/gNsCK9h9ZhkKlm7nDUN62GlFF7hlVJ4zVZK4VVYKYVH8H/J+wf1QUHp",
      "eJzNmElqAzEQRe+idRM0VGnoq4QsTOKAwdgh9s703TOg9oAVtwii9Hc2/Cq9htb72Ce13b+ujpv97qDGk9JPQY3PJ3X4WO1+vh+Oq8+jGq2NTg9qvXv7/cxxGtT7ZrtWo5mGu3RkztmY/CXpYiGbQshZoy2fw4mnl+GbJkLRJCgao7FwDBaOxcJxWDiEhcNYOB4LB8vJBkvKBsvKFsvKFsvKFsvKFsvKtoGVUzCXI+ICD1vyOc1k6PFzunlxpOu9KbM3UHg39ga+78beoBy6sTdokm7sDWqnF7tr0FHd2BsUWjf2mvbz/PAIY72d4Z1zN4fcpx1TDrt0tdeZDFTTf6JANQ0oClRTa6JANV0lClRTQKJANa0iClRTFZJAVON/UaAaqYsCoZma0ExNaKYmNFMTmqkJzdSEZmpCMzWjmZrRTM1opmY0UzOaqRnN1IxmahY3Nen5lytZfQNU2BzivDiGS5ZChhe3ekt48QZoCO/F2+Kf8Nfv/BlevFlawpeVpue/+y3R/S33Ze0sDJXVsDBUvpILQ+Wr8HgolF/Bv4em6Qu36vPb",
      "",
      "eJzNmt1qAjEQRt8l10tJJpn8+CqlF9JaEERL9U723Ytld10xNamE2e9OZCZ79uacIJ7V7vC+Pm0P+6NanZV+MUatXs/q+LXeX744ntbfJ7UiCmQ6tdl//H52se/U53a3USvTd3fTkXmYjclfJ23MzKYQhlmjiafhxP1bd8EhLByLheOwcBgLx2PhBCyciIWToHBIY+FgWZmwrExYViYsKxOWlQnLyoRlZWpg5RTM9RGxwMOe9DDNIdnH72nHg+McwaaBvYHCl2K3DXy/GHuDOCzG3qAki7E3yM5i7A0atRh7g6Atxl5TP+aHjzDkaYS31t485H7ashuGbZqda80AVNM/UaCaAooC1WRNEsjVtEoUqCZAokA1VREFqkmFKFCN/0WBaqQuCoRmaodmaodmaodmakYzNaOZmtFMzWimZjRTM5qpGc3UjGZqRjM1o5nao5nai5va6fFkR/oGKHMyp5HeeD07mcOAL+71tvjiFWiLL96Mp/GNyeCLF6YtvniP/oXv7XSydzl88Xq1xRdvXVt88TI+j5/u8YN4R9viY1fXez/hB87gY1e3iI9d3SI+dnXn+DFzaQjY1S3ig1f3emkIuStbAK9uCR+8uiV88OrO8HM3zghe3RI+dnUDTX/ZCdZn8LGrW8THrm4RH7u6c3znMvjY1S3hp3y29LhF86Xxt62Uj0VhKa/ox0tG581Y2soLqbSV98DfW33/A0SMQU4=",
      "eJzNlcsKgzAQRf9l1lIyMzE+fqV0Ia0FQbRUd5J/7wNtLaa4Ebm7BO4NZzFzMlDdnou+apuO8oHMIab8OFB3K5rXveuLe0+5iGMbUdlc3mdNfETXqi4pZx8t0ixOxjCr6jerWSCt8fSyZvEsy/4UPXkcGE8CxpOC8WRgPGzQgBgNSNCAFA3IogGhWZrRNM1onmY0UTOaqQXN1IJmakEztaCZWtBMLbub2hoew1bMD9AyK+w+FDN4m47wu1t9S/jdf4AN4TWsHpNMJWuXs6ZhPayUwiu8Ugqv2UopvAorpfAI/i95/wD9cEJF",
      "eJzNlcsKg0AMRf8laymTZMbXr5QupLUgiJbqTvz32jJii1PciNxdBu6Fs0jODFS316Kv2qajfCBzcpSfB+oeRfN+d33x7CkXcaIRlc3tMzseI7pXdUn5NK3SLLH4MKvqktUskFZnfVgz95Xl8RJNPDEYTwLGk4LxZGA8bNCAGA1I0IAUDciiAaFZmtE0zWieZjRRM5qpBc3UgmZqQTO1oJla0Ewth5vaGvZhK+YHaJ0Vl80UcbpknfHwh1t9T/jDf4Ad4TWsHpPMJWvXu6ZhPWyUwie8UQqf2UYpfAobpfAK/i+N4wulRkHQ",
      "",
      "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",
      "",
      "eJztnd2O67YVhd9lrg8K8U8i8ypFL4I2BQIESdHkLjjvXh/Ekn3Ge2tT39Amx/VVTgCt4TK9SEofqe0/33757Z8//vHzb7/+/vbDn2/h7Ye///n2+39+/PXb//3+x4///ePth+nL20+//uv0369f3v798y8/vf3gvn65ucrFMM/nK0//znm7unjp8uSdWy9PfjYuL8uyXjz5dLk2ff3Hl7f4KV2nB7oOMW2u45Q+4HqWXLu0uLI1sMS4697H5M8X+zRdXRsWyXwJm52Sr66e8jc/y+P9lDUBfkrf+7m9Ovv1T+c5vfeeB/e+rD6Ku+n38mjvfipxvfoUaMO7D9N2dZjd5epvn+Tm6pRXI/PV4JCvja6sF0fv5svVSbral2ntkDDlxbj61GPni5fst2vjt/520zN1+Oy2Dp+9ca3fpqPgr6ZFNx2dupx7deFHu9CP3oWbex9K/K5bvtkX728+j33xRufz2H/4vcNB+/FydUrWmCrbYC1Psb48/EZqlC+nz0T68Hu/u3b3nC8ftVgBn9ePeHqA+kgf+tFvicoybWMzWOPe+e1224Ww/H/NPn70W7NBvsouc5Uf/abvnl9On5lt9PvUYz0etoHvQrGuntOKqhbnP9SJw98tD/+450VG+erCI104+kPPJ+hC+dFkdmGdhNwcr+cKyUyew/oxy/WMlWaJfKZpvTond0XXxemt4Z6Alx8Lxvmo7TYSvEyQ7/pRY94+6lKuP+rJT5CfJu7qJ6QdP/It8V39lPVP5zm7/SgUl9c/XcJ0Y16+ZRzGfNpGbEk+vzcv3319EvPyXc8nMS/fb3wS8/JK/0nMd1hj25nvsGq2M99hHWxmPnZYNNuZH3yF3Tc/+gqb8mZ+Se/Nj77C7poffYXdNT/6CrtrfvQVdtf86CvsrvnRV9hd86OvsHvm0+gr7K750VfYXfODr7DztvdW5qvthrP5wVfYffODr7D75gdfYffND77C7psffIXdNz/4CrtvfvAVdtf8PPgKu29+8BV23/zYK6ybJr9tXE9TdO/tj73GmvbHXmVN+2Ovs6b9sVda0/7Ya61pf+zV1rQ/9npr2V/GXnFN+2Ovuab94VfdPF3sl/fgexl+1d23P/yqu29/+FV33/7wq+6+/eFX3X37w6+6+/aHX3V37efhV919+8Ovuvv2R1913eWQ9uSuDnee7Y++6hr2R191Dfujr7qG/dFXXcP+6KuuYX/0VdewP/qqu2+/jL7qGvZHX3UN+4Ovuv6yA33697K8tz/4qmvZH3zVtewPvupa9gdfdS37g6+6lv3BV13L/uCrrmH/9AT2yf0Pvu6a/kdfeOdpe5HNz/H9zrSbRl9553m77/GLf8/43TT60rvE6eI/3/offe3N08V/DvHG/+CLb/DxqgrCdJv/wVffEC57XCHcvDzppsGX3xDK9m5siPN043/w9TfEZZv/Q1rCe/9KucJx/KetEqYL83yzfim1Asfxv0yX/l9c2b88bu/qpukCpk8hFK6dg199zClcfbGH3/B2SrXAVyce6sTB70SOdWLa6uGmuBiduBS/FjleSpr2OzFOW2WCeFq9PtTjg9873a/H87LdFeQlG9UdfLrUGZk/VPXCucHv9u7Y43krMJVL/Eg9DaeU1/yknRi3CTSVYHSi0S/Krezsw9Yvc1l2+8WFS8Wr07+vh8a9S8I4pVTkff23q/PinHIre8h/nNxm6DTV3zyvKLUgjzYy+d1GlJvCg42krbeii4vxTcR0KVcXryuirZ6Ue6y7eipu++OxhJuHF6V8XV9PyqLe1ZOy7HX1pKwiXT21mMFbe2oxK7f21GambepJK6vV1VOPedzy1GUen6eLp1uIrxXC6uqpyzxueOoyjxueuszjhqcu87jhqcs8bnjqMo/ve9IqPXX11GUeNzx1mMfTdPW0Od2UinJauaWunjrM46anDvO46anDPG566jCPm546zOOmpw7zuOVJqyfU1VOHedz01GMej/6KusUb1qMV9enqqcc8bnnqMY9bnnrM45anHvO45anHPG556jGPG560qjVdPfWYxy1PXebxfFlbYrk5nKQVjunqqcs8bnjqMo8bnrrM44anLvO44anLPG546jKP73vSaqF09dRlHjc89ZjH09UueJpvDjlqpUi6euoxj1ueeszjlqce87jlqcc8bnnqMY9bnnrM44YnrbpGV0895nHLU4d5fI55O0Mzp9u9V624xV09XX6M6vTHp3TjqcM8Ps/BX/747aF+rQzFPT0tU976aXHxtp86zOOL205Jnu5L3A071ApG3NWTD/PF0+39k1YF4q6egtsuX+Lt2TWttMNdPcXLcdgl3b74pNVruKunFC/fXUrG5XNcnVyfunZBvLbdewhaJYhXx3RY0Q52zPYD4MvVmxFy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",
      ""
    ],
    "fileMap": {
      "1": {
        "source": "mod types;\n\n/// @notice This contract implements a private coin toss game between users.\n/// @dev The contract is deployed with a bet_amount and a private oracle.\n///      The user can create a bet note with a bet (true or false) which is later settled by the private oracle.\n///      The users that betted for the winner receive (in equal parts) the bets made by the users that lost.\ncontract CoinToss {\n\n    /////////////////////////////////////////////////////////////////////\n    //                             Imports                             //\n    /////////////////////////////////////////////////////////////////////\n\n\n    use crate::types::oracle::{\n        DivinityAddressSubmitQuestionStruct, \n        FromSubmitQuestionStruct, \n        PrivateOraclePrivateContextInterface, \n    };\n\n    use crate::types::{\n        bet_note::{BetNote, BetNoteMethods, BET_NOTE_LEN},\n        reveal_note::{RevealNote, RevealNoteMethods, REVEAL_NOTE_LEN},\n        config_note::{ConfigNote, ConfigNoteMethods, CONFIG_NOTE_LEN},\n        round_data::{RoundData, RoundDataSerializationMethods, ROUND_DATA_SERIALIZED_LEN, Phase},\n        token::{\n            AccountsBroadcastEscrowNoteForStruct,\n            FromEscrowStruct,\n            FromTransferStruct, \n            OwnerEscrowStruct,\n            OwnerSettleEscrowStruct,\n            RecipientSettleEscrowStruct,\n            TokenPrivateContextInterface, \n            ToTransferStruct,\n            FromUnshieldStruct,\n            ToUnshieldStruct,\n            FromShieldStruct,\n            TokenPublicContextInterface,\n            FromShieldPrivateStruct,\n            ToShieldPrivateStruct\n        }\n    };\n\n    use dep::aztec::{\n        context::Context,\n        types::type_serialization::{\n            field_serialization::{FieldSerializationMethods, FIELD_SERIALIZED_LEN},\n            bool_serialization::{BoolSerializationMethods, BOOL_SERIALIZED_LEN},\n            aztec_address_serialization::{AztecAddressSerializationMethods, AZTEC_ADDRESS_SERIALIZED_LEN},\n        },\n        note::{\n            note_getter_options::NoteGetterOptions,\n            note_header::NoteHeader,\n            note_viewer_options::NoteViewerOptions,\n            utils as note_utils\n        },\n        oracle::{\n            get_public_key::get_public_key,\n            rand::rand\n        },\n        selector::compute_selector,\n        state_vars::{\n            immutable_singleton::ImmutableSingleton,\n            set::Set,\n            map::Map, \n            public_state::PublicState\n        },\n        types::address::AztecAddress,\n    };\n\n    use dep::std::option::Option;\n\n    /////////////////////////////////////////////////////////////////////\n    //                             Storage                             //\n    /////////////////////////////////////////////////////////////////////\n\n    global ROUND_ID_SLOT = 1;\n    global PHASE_LENGTH_SLOT = 2;\n    global BET_AMOUNT_SLOT = 3;\n    global ORACLE_ADDRESS_SLOT = 4;\n    global DIVINITY_ADDRESS_SLOT = 5;\n    global TOKEN_ADDRESS_SLOT = 6;\n    global RESULTS_SLOT = 7;\n    global ROUND_DATA_SLOT = 8;\n    global CONFIG_NOTE_SLOT = 9;\n    global BETS_SLOT = 10;\n    global REVEALS_SLOT = 11;\n\n    /// @member config The config note, containing the divinity address, the private oracle address, the token address and the bet amount\n    /// @member bets The set of bet notes (ie active bets)\n    struct Storage {\n        ////////////////////////////// public //////////////////////////\n        round_id: PublicState<Field, FIELD_SERIALIZED_LEN>,\n        phase_length: PublicState<Field, FIELD_SERIALIZED_LEN>,\n        bet_amount: PublicState<Field, FIELD_SERIALIZED_LEN>,\n        oracle_address: PublicState<AztecAddress, AZTEC_ADDRESS_SERIALIZED_LEN>,\n        divinity_address: PublicState<AztecAddress, AZTEC_ADDRESS_SERIALIZED_LEN>,\n        token_address: PublicState<AztecAddress, AZTEC_ADDRESS_SERIALIZED_LEN>,\n        results: Map<PublicState<bool, BOOL_SERIALIZED_LEN>>,\n        rounds: Map<PublicState<RoundData, ROUND_DATA_SERIALIZED_LEN>>,\n\n        ///////////////////////////// private //////////////////////////\n        config: ImmutableSingleton<ConfigNote, CONFIG_NOTE_LEN>,\n        bets: Set<BetNote, BET_NOTE_LEN>,\n        reveals: Set<RevealNote, REVEAL_NOTE_LEN>,\n    }\n\n    impl Storage {\n        fn init(context: Context) -> Self {\n            Storage {\n                ////////////////////////////// public //////////////////////////\n                round_id: PublicState::new(context, ROUND_ID_SLOT, FieldSerializationMethods),\n                phase_length: PublicState::new(context, PHASE_LENGTH_SLOT, FieldSerializationMethods),\n                bet_amount: PublicState::new(context, BET_AMOUNT_SLOT, FieldSerializationMethods),\n                oracle_address: PublicState::new(context, ORACLE_ADDRESS_SLOT, AztecAddressSerializationMethods),\n                divinity_address: PublicState::new(context, DIVINITY_ADDRESS_SLOT, AztecAddressSerializationMethods),\n                token_address: PublicState::new(context, TOKEN_ADDRESS_SLOT, AztecAddressSerializationMethods),\n                results: Map::new(\n                    context,\n                    RESULTS_SLOT,\n                    |context, slot| {\n                        PublicState::new(\n                            context,\n                            slot,\n                            BoolSerializationMethods,\n                        )\n                    },\n                ),\n                 rounds: Map::new(\n                    context,\n                    ROUND_DATA_SLOT,\n                    |context, slot| {\n                        PublicState::new(\n                            context,\n                            slot,\n                            RoundDataSerializationMethods,\n                        )\n                    },\n                ),\n\n                ////////////////////////////// private //////////////////////////\n                config: ImmutableSingleton::new(\n                    context,\n                    CONFIG_NOTE_SLOT,\n                    ConfigNoteMethods,\n                ),\n                bets: Set::new(context, BETS_SLOT, BetNoteMethods),\n                reveals: Set::new(context, REVEALS_SLOT, RevealNoteMethods),\n            }\n        }\n    }\n\n    /////////////////////////////////////////////////////////////////////\n    //                           Constructor                           //\n    /////////////////////////////////////////////////////////////////////\n\n    /// @notice         Constructor for the contract, setting the config note\n    /// @custom:privacy private\n    /// @param          divinity The divinity address, invoked by the oracle\n    /// @param          private_oracle The private oracle contract address\n    /// @param          token The token used to bet\n    /// @param          bet_amount The bet amount\n    /// @param          phase_length The phase length\n    #[aztec(private)]\n    fn constructor(divinity: AztecAddress, private_oracle: AztecAddress, token: AztecAddress, bet_amount: Field, phase_length: Field) {\n        let mut config_note = ConfigNote::new(divinity, private_oracle, token, bet_amount);\n        storage.config.initialize(&mut config_note, Option::none(), false);\n\n        let selector = compute_selector(\"initialize(Field,Field,(Field),(Field),(Field))\");\n        context.call_public_function(context.this_address(), selector, [phase_length, bet_amount, private_oracle.address, divinity.address, token.address]);\n    }\n\n    /////////////////////////////////////////////////////////////////////\n    //                   Public external functions                    //\n    /////////////////////////////////////////////////////////////////////\n\n    #[aztec(public)]\n    fn start_next_round() {\n        let timestamp = context.timestamp();\n        let phase_length = storage.phase_length.read();\n\n        let current_round_id = storage.round_id.read();\n        if(current_round_id != 0) {\n            let current_round_data = storage.rounds.at(storage.round_id.read()).read();\n            assert(current_round_data.phase >= Phase::REVEAL, \"Current round not finished\");\n        }\n        let next_round_id = current_round_id + 1;\n        storage.round_id.write(next_round_id);\n        storage.rounds.at(next_round_id).write(RoundData::new(Phase::BETTING, (timestamp + phase_length) as u120, 0, 0, 0));\n    }\n\n    #[aztec(public)]\n    fn end_reveal_phase() {\n        let current_round_id = storage.round_id.read(); \n        let current_round_data = storage.rounds.at(current_round_id).read();\n        let number_of_bettors = current_round_data.bettors;\n        let number_of_winners = current_round_data.reveals_count;\n        let timestamp = context.timestamp() as u120;\n\n        assert(current_round_data.phase == Phase::REVEAL, \"Reveal phase over\");\n        assert(timestamp >= current_round_data.current_phase_end, \"Reveal phase not finished\");\n        \n        let bet_amount = storage.bet_amount.read() as u120;\n        let claim_amount = number_of_bettors * bet_amount / number_of_winners;\n\n        let timestamp = context.timestamp() as u120;\n        let phase_length = storage.phase_length.read() as u120;\n\n        let updated_round_data = RoundData::new(Phase::CLAIM, (timestamp + phase_length) as u120, number_of_winners, number_of_bettors, claim_amount);\n        storage.rounds.at(current_round_id).write(updated_round_data);\n    }\n\n    /////////////////////////////////////////////////////////////////////\n    //                   Public internal functions                    //\n    /////////////////////////////////////////////////////////////////////\n\n    #[aztec(public)]\n    fn initialize(phase_length: Field, bet_amount: Field, oracle_address: AztecAddress, divinity_address: AztecAddress, token_address: AztecAddress) {\n        assert(context.msg_sender() == context.this_address());\n\n        storage.phase_length.write(phase_length);\n        storage.bet_amount.write(bet_amount);\n        storage.oracle_address.write(oracle_address);\n        storage.divinity_address.write(divinity_address);\n        storage.token_address.write(token_address);\n    }\n\n    #[aztec(public)]\n    internal fn end_bet_phase(round_id: Field) {\n        let timestamp = context.timestamp() as u120;\n        let phase_length = storage.phase_length.read() as u120;\n\n        // Check that the phase is BETTING \n        let current_round_id = storage.round_id.read();\n        assert(round_id == current_round_id, \"Round id mismatch\");\n\n        let current_round_data = storage.rounds.at(storage.round_id.read()).read();\n        assert(current_round_data.phase == Phase::BETTING, \"Not in bet phase\");\n\n        // Check that the timestamp is after the end of the bet phase\n        assert(timestamp >= current_round_data.current_phase_end, \"Bet phase not finished\");\n\n        // Set state to AWAITING_ANSWER and update the end phase timestamp\n        let new_round_data = RoundData::new(Phase::AWAITING_ANSWER, (timestamp + phase_length) as u120, 0, current_round_data.bettors, 0);\n        storage.rounds.at(current_round_id).write(new_round_data);\n    }\n\n    /////////////////////////////////////////////////////////////////////\n    //                   Private external functions                    //\n    /////////////////////////////////////////////////////////////////////\n    #[aztec(private)]\n    fn bet(bet: bool, round_id: Field, bet_randomness: Field, unshield_nonce: Field) {\n        let config_note = storage.config.get_note();\n        let token = config_note.token;\n        let bet_amount = config_note.bet_amount;\n        let bettor = AztecAddress::new(context.msg_sender());\n        let address_this = AztecAddress::new(context.this_address());\n        let token = TokenPrivateContextInterface::at(token.address);\n\n        // Unshield private balance from the user to the coin toss. This requires an authwit.\n        let _ = token.unshield(\n            &mut context,\n            FromUnshieldStruct { address: bettor.address }, \n            ToUnshieldStruct {address: address_this.address }, \n            bet_amount, \n            unshield_nonce\n        );\n\n        // Create a bet note for the user. This method nullifies the randomness and round_id combinarion.\n        let mut user_bet: BetNote = BetNote::new(&mut context, bettor, round_id, bet, bet_randomness);\n        storage.bets.insert(&mut user_bet, true);\n\n        let selector = compute_selector(\"_increase_bettors(Field)\");\n        context.call_public_function(context.this_address(), selector, [round_id]);\n    }\n\n    /////////////////////////////////////////////////////////////////////\n    //                   Public internal functions                    //\n    /////////////////////////////////////////////////////////////////////\n    #[aztec(public)]\n    internal fn _increase_bettors(\n        round_id: Field,\n    ) {\n        let current_round_id = storage.round_id.read();\n        assert(current_round_id == round_id, \"Round id mismatch\");\n\n        let current_round_data = storage.rounds.at(current_round_id).read();\n        assert(current_round_data.phase >= Phase::BETTING, \"Betting phase over\");\n\n        let updated_round_data = current_round_data.add_bettor();\n        storage.rounds.at(round_id).write(updated_round_data);\n    }\n\n    #[aztec(public)]\n    internal fn _set_result(caller: Field, round_id: Field, answer: Field) {\n        let oracle = storage.oracle_address.read();\n        let timestamp = context.timestamp() as u120;\n        let phase_length = storage.phase_length.read() as u120;\n\n        assert(caller == oracle.address, \"Caller is not the oracle\");\n\n        let current_round_id = storage.round_id.read();\n        assert(current_round_id == round_id, \"Round id mismatch\");\n\n        let current_round_data = storage.rounds.at(current_round_id).read();\n        assert(current_round_data.phase == Phase::AWAITING_ANSWER, \"Not in awaiting answer phase\");\n\n        let new_round_data = RoundData::new(Phase::REVEAL, (timestamp + phase_length) as u120, 0, current_round_data.bettors, 0);\n        storage.rounds.at(round_id).write(new_round_data);\n\n        storage.results.at(round_id).write(answer as bool);\n    }\n\n    #[aztec(public)]\n    internal fn _increase_reveals(round_id: Field, user_bet: Field) {\n        let timestamp = context.timestamp() as u120;\n\n        let round_data = storage.rounds.at(round_id).read();\n        assert(round_data.phase == Phase::REVEAL, \"Reveal phase over\");\n        assert(timestamp < round_data.current_phase_end, \"Reveal phase finished\");\n\n        let results = storage.results.at(round_id).read();\n        assert(results == user_bet as bool, \"User bet does not match result\");\n\n        let updated_round_data = round_data.increase_reveal_count();\n        storage.rounds.at(round_id).write(updated_round_data);\n    }\n\n    #[aztec(public)]\n    internal fn _validate_claim(round_id: Field, amount: Field) {\n        let address_this = AztecAddress::new(context.this_address());\n        let round_data = storage.rounds.at(round_id).read();\n        let claim_amount = round_data.claim_amount;\n        assert(claim_amount == amount as u120, \"Claim amount mismatch\");\n    }\n\n    /////////////////////////////////////////////////////////////////////\n    //                   Private internal functions                    //\n    /////////////////////////////////////////////////////////////////////\n\n    /// @notice         Calls the oracle to get the result of the bet round\n    /// @custom:privacy private\n    /// @param          round_id The id of the current round\n    #[aztec(private)]\n    fn roll(round_id: Field, oracle_nonce: Field) {\n        let sender = AztecAddress::new(context.msg_sender());\n        let config_note = storage.config.get_note();\n        let divinity = config_note.divinity;\n        let oracle = config_note.private_oracle;\n        let oracle_contract = PrivateOraclePrivateContextInterface::at(oracle.address);\n        let address_this = AztecAddress::new(context.this_address());\n\n        // Create the question in the oracle\n        let callback = [address_this.address, round_id, 0, 0, 0, 0];\n        let __ = oracle_contract.submit_question(\n            &mut context,\n            FromSubmitQuestionStruct { address: sender.address },\n            round_id,\n            DivinityAddressSubmitQuestionStruct { address: divinity.address },\n            oracle_nonce,\n            callback\n        );\n\n        // End the bet phase and update public state\n        // This checks that the round id is correct and that the phase is BETTING\n        let selector = compute_selector(\"end_bet_phase(Field)\");\n        context.call_public_function(context.this_address(), selector, [round_id]);\n    }\n\n    /// @notice         Called by the oracle to set the result of the bet round\n    /// @param          answer The answer of the oracle\n    /// @param          data The data of the oracle \n    ///                 data[0]: round_id\n    ///                 data[1:5]: unused\n    #[aztec(private)]\n    fn oracle_callback(answer: Field, data: [Field; 5]) {\n        let round_id = data[0];\n        let selector = compute_selector(\"_set_result(Field,Field,Field)\");\n        context.call_public_function(context.this_address(), selector, [context.msg_sender(), round_id, answer]);\n    }\n\n    #[aztec(private)]\n    fn reveal(round_id: Field, user_randomness: Field) {\n        let options = NoteGetterOptions::new().select(1, round_id).select(3, user_randomness).set_limit(1);\n        let bet_notes = storage.bets.get_notes(options);\n        let bettor = AztecAddress::new(context.msg_sender());\n\n        if (bet_notes[0].is_some()) {\n            let bet_note = bet_notes[0].unwrap_unchecked();\n            let user_bet = bet_note.bet;\n            \n            let mut reveal_note: RevealNote = RevealNote::new(bettor, round_id, user_randomness);\n            storage.reveals.insert(&mut reveal_note, true);\n\n            storage.bets.remove(bet_note);\n\n            let selector = compute_selector(\"_increase_reveals(Field,Field)\");\n            context.call_public_function(context.this_address(), selector, [round_id, user_bet as Field]);\n        } else {\n            assert(false, \"Bet note not found\");\n        }\n    }\n\n    #[aztec(private)]\n    fn claim(round_id: Field, amount: Field) {\n        let config_note = storage.config.get_note();\n        let token = TokenPrivateContextInterface::at(config_note.token.address);\n        let bettor = AztecAddress::new(context.msg_sender());\n        let address_this = AztecAddress::new(context.this_address());\n        let options = NoteGetterOptions::new().select(0, bettor.address).select(1, round_id).set_limit(1);\n        let reveal_notes = storage.reveals.get_notes(options);\n\n        if (reveal_notes[0].is_some()) {\n            let reveal_note = reveal_notes[0].unwrap_unchecked();\n            storage.reveals.remove(reveal_note);\n\n            // Shields privately to the user\n            let _ = token.shield_private(\n                &mut context,\n                FromShieldPrivateStruct { address: address_this.address }, \n                ToShieldPrivateStruct {address: bettor.address }, \n                amount, \n                0\n            );\n\n            let selector = compute_selector(\"_validate_claim(Field,Field)\");\n            context.call_public_function(context.this_address(), selector, [round_id,amount]);\n        } else {\n            assert(false, \"Reveal note not found\");\n        }\n    }\n\n    /////////////////////////////////////////////////////////////////////\n    //             Public unconstrained external functions             //\n    /////////////////////////////////////////////////////////////////////\n\n    /// @notice         Gets the config note\n    /// @custom:privacy unconstrained\n    /// @return         The config note (divinity, private oracle, token, bet_amount)\n    unconstrained fn get_config_unconstrained() -> ConfigNote {\n        storage.config.view_note()\n    }\n\n    /// @notice         Gets the bet notes for an user\n    /// @custom:privacy unconstrained\n    /// @param          start_offset The offset to start from\n    /// @return         The bet notes (padded with empty notes, up to 10)\n    unconstrained fn get_user_bets_unconstrained(start_offset: u32) -> [Option<BetNote>; 10] {\n        let user_bets_getter_option = NoteViewerOptions::new().set_offset(start_offset);\n        storage.bets.view_notes(user_bets_getter_option)\n    }\n\n    /// @notice         Gets the reveal notes for an user\n    /// @custom:privacy unconstrained\n    /// @param          start_offset The offset to start from\n    /// @return         The reveal notes (padded with empty notes, up to 10)\n    unconstrained fn get_reveal_notes_unconstrained(start_offset: u32) -> [Option<RevealNote>; 10] {\n        let reveal_notes_getter_option = NoteViewerOptions::new().set_offset(start_offset);\n        storage.reveals.view_notes(reveal_notes_getter_option)\n    }\n\n    /// @notice         Compute the note hash and nullifier for a note\n    /// @custom:privacy unconstrained\n    /// @param          contract_address The contract address (this)\n    /// @param          nonce The nonce\n    /// @param          storage_slot The storage slot of the note\n    /// @param          preimage The preimage of the note\n    /// @return         The note hash and nullifier\n    unconstrained fn compute_note_hash_and_nullifier(contract_address: Field, nonce: Field, storage_slot: Field, preimage: [Field; CONFIG_NOTE_LEN]) -> [Field; 4] {\n        let note_header = NoteHeader::new(contract_address, nonce, storage_slot);\n\n        if(storage_slot == BETS_SLOT) {\n            note_utils::compute_note_hash_and_nullifier(BetNoteMethods, note_header, preimage)\n        } else if(storage_slot == REVEALS_SLOT) {\n            note_utils::compute_note_hash_and_nullifier(RevealNoteMethods, note_header, preimage)\n        } else {\n            note_utils::compute_note_hash_and_nullifier(ConfigNoteMethods, note_header, preimage)\n        }\n    }\n\n    unconstrained fn get_phase_length_unconstrained() -> Field {\n        storage.phase_length.read()\n    }\n\n    unconstrained fn get_bet_amount_unconstrained() -> Field {\n        storage.bet_amount.read()\n    }\n\n    unconstrained fn get_oracle_address_unconstrained() -> AztecAddress {\n        storage.oracle_address.read()\n    }\n\n    unconstrained fn get_divinity_address_unconstrained() -> AztecAddress {\n        storage.divinity_address.read()\n    }\n\n    unconstrained fn get_token_address_unconstrained() -> AztecAddress {\n        storage.token_address.read()\n    }\n\n    unconstrained fn get_round_id() -> Field {\n        storage.round_id.read()\n    }\n\n    unconstrained fn get_round_data(round_id: Field) -> RoundData {\n        storage.rounds.at(round_id).read()\n    }\n\n    unconstrained fn get_result(round_id: Field) -> bool {\n        storage.results.at(round_id).read()\n    }\n\n    /// @notice         Gets a bet note by its round id and randomness combination and checks whether these params were nullified\n    /// @custom:privacy unconstrained\n    /// @param          round_id The id of the round this bet was made in\n    /// @param          randomness The randomness the user used for this bet in this round\n    /// @param          bet_id The id of the bet\n    /// @return         A boolean indicating whether a bet with this combination of fields has been initialized or not\n    unconstrained fn is_round_randomness_nullified(round_id: Field, randomness: Field) -> bool {\n        BetNote::is_round_randomness_nullified(round_id, randomness)\n    }\n}",
        "path": "/home/shaito/wonderland/aztec-coin-toss-pvp/src/main.nr"
      },
      "4": {
        "source": "mod poseidon;\nmod mimc;\n\n#[foreign(sha256)]\npub fn sha256<N>(_input: [u8; N]) -> [u8; 32] {}\n\n#[foreign(blake2s)]\npub fn blake2s<N>(_input: [u8; N]) -> [u8; 32] {}\n\nstruct PedersenPoint {\n   x : Field,\n   y : Field,\n}\n\npub fn pedersen_commitment<N>(input: [Field; N]) -> PedersenPoint {\n    pedersen_commitment_with_separator(input, 0)\n}\n\n#[foreign(pedersen)]\npub fn __pedersen_commitment_with_separator<N>(_input: [Field; N], _separator: u32) -> [Field; 2] {}\n\npub fn pedersen_commitment_with_separator<N>(input: [Field; N], separator: u32) -> PedersenPoint {\n    let values = __pedersen_commitment_with_separator(input, separator);\n    PedersenPoint { x: values[0], y: values[1] }\n}\n\npub fn pedersen_hash<N>(input: [Field; N]) -> Field {\n    pedersen_hash_with_separator(input, 0)\n}\n\n#[foreign(pedersen_hash)]\npub fn pedersen_hash_with_separator<N>(_input: [Field; N], _separator: u32) -> Field {}\n\npub fn hash_to_field<N>(_input: [Field; N]) -> Field {\n    let mut inputs_as_bytes = [];\n\n    for i in 0..N {\n        let input_bytes = _input[i].to_le_bytes(32);\n        for i in 0..32 {\n            inputs_as_bytes = inputs_as_bytes.push_back(input_bytes[i]);\n        }\n    }\n\n    let hashed_input = blake2s(inputs_as_bytes);\n    crate::field::bytes32_to_field(hashed_input)\n}\n\n#[foreign(keccak256)]\npub fn keccak256<N>(_input: [u8; N], _message_size: u32) -> [u8; 32] {}\n\n",
        "path": "std/hash.nr"
      },
      "33": {
        "source": "struct Option<T> {\n    _is_some: bool,\n    _value: T,\n}\n\nimpl<T> Option<T> {\n    /// Constructs a None value\n    pub fn none() -> Self {\n        Self { _is_some: false, _value: crate::unsafe::zeroed() }\n    }\n\n    /// Constructs a Some wrapper around the given value\n    pub fn some(_value: T) -> Self {\n        Self { _is_some: true, _value }\n    }\n\n    /// True if this Option is None\n    pub fn is_none(self) -> bool {\n        !self._is_some\n    }\n\n    /// True if this Option is Some\n    pub fn is_some(self) -> bool {\n        self._is_some\n    }\n\n    /// Asserts `self.is_some()` and returns the wrapped value.\n    pub fn unwrap(self) -> T {\n        assert(self._is_some);\n        self._value\n    }\n\n    /// Returns the inner value without asserting `self.is_some()`\n    /// Note that if `self` is `None`, there is no guarantee what value will be returned,\n    /// only that it will be of type `T`.\n    pub fn unwrap_unchecked(self) -> T {\n        self._value\n    }\n\n    /// Returns the wrapped value if `self.is_some()`. Otherwise, returns the given default value.\n    pub fn unwrap_or(self, default: T) -> T {\n        if self._is_some {\n            self._value\n        } else {\n            default\n        }\n    }\n\n    /// Returns the wrapped value if `self.is_some()`. Otherwise, calls the given function to return\n    /// a default value.\n    pub fn unwrap_or_else<Env>(self, default: fn[Env]() -> T) -> T {\n        if self._is_some {\n            self._value\n        } else {\n            default()\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `Some(f(x))`. Otherwise, this returns `None`.\n    pub fn map<U, Env>(self, f: fn[Env](T) -> U) -> Option<U> {\n        if self._is_some {\n            Option::some(f(self._value))\n        } else {\n            Option::none()\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `f(x)`. Otherwise, this returns the given default value.\n    pub fn map_or<U, Env>(self, default: U, f: fn[Env](T) -> U) -> U {\n        if self._is_some {\n            f(self._value)\n        } else {\n            default\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `f(x)`. Otherwise, this returns `default()`.\n    pub fn map_or_else<U, Env1, Env2>(self, default: fn[Env1]() -> U, f: fn[Env2](T) -> U) -> U {\n        if self._is_some {\n            f(self._value)\n        } else {\n            default()\n        }\n    }\n\n    /// Returns None if self is None. Otherwise, this returns `other`.\n    pub fn and(self, other: Self) -> Self {\n        if self.is_none() {\n            Option::none()\n        } else {\n            other\n        }\n    }\n\n    /// If self is None, this returns None. Otherwise, this calls the given function\n    /// with the Some value contained within self, and returns the result of that call.\n    ///\n    /// In some languages this function is called `flat_map` or `bind`.\n    pub fn and_then<U, Env>(self, f: fn[Env](T) -> Option<U>) -> Option<U> {\n        if self._is_some {\n            f(self._value)\n        } else {\n            Option::none()\n        }\n    }\n\n    /// If self is Some, return self. Otherwise, return `other`.\n    pub fn or(self, other: Self) -> Self {\n        if self._is_some {\n            self\n        } else {\n            other\n        }\n    }\n\n    /// If self is Some, return self. Otherwise, return `default()`.\n    pub fn or_else<U, Env>(self, default: fn[Env]() -> Self) -> Self {\n        if self._is_some {\n            self\n        } else {\n            default()\n        }\n    }\n\n    // If only one of the two Options is Some, return that option.\n    // Otherwise, if both options are Some or both are None, None is returned.\n    pub fn xor(self, other: Self) -> Self {\n        if self._is_some {\n            if other._is_some {\n                Option::none()\n            } else {\n                self\n            }\n        } else if other._is_some {\n            other\n        } else {\n            Option::none()\n        }\n    }\n\n    /// Returns `Some(x)` if self is `Some(x)` and `predicate(x)` is true.\n    /// Otherwise, this returns `None`\n    pub fn filter<Env>(self, predicate: fn[Env](T) -> bool) -> Self {\n        if self._is_some {\n            if predicate(self._value) {\n                self\n            } else {\n                Option::none()\n            }\n        } else {\n            Option::none()\n        }\n    }\n\n    /// Flattens an Option<Option<T>> into a Option<T>.\n    /// This returns None if the outer Option is None. Otherwise, this returns the inner Option.\n    pub fn flatten(option: Option<Option<T>>) -> Option<T> {\n        if option._is_some {\n            option._value\n        } else {\n            Option::none()\n        }\n    }\n}\n",
        "path": "std/option.nr"
      },
      "75": {
        "source": "global ARGS_LENGTH: Field = 16;\nglobal RETURN_VALUES_LENGTH: Field = 4;\n\n/**\n * Convention for constant array lengths are mainly divided in 2 classes:\n *  - FUNCTION CALL\n *  - TRANSACTION\n *\n * Agreed convention is to use MAX_XXX_PER_CALL resp. MAX_XXX_PER_TX, where XXX denotes a type of element such as\n * commitment, or nullifier, e.g.,:\n *  - MAX_NEW_NULLIFIERS_PER_CALL\n *  - MAX_NEW_COMMITMENTS_PER_TX\n *\n * In the kernel circuits, we accumulate elements such as commitments and the nullifiers from all functions calls in a\n * transaction. Therefore, we always must have:\n * MAX_XXX_PER_TX ≥ MAX_XXX_PER_CALL\n *\n * For instance:\n * MAX_NEW_COMMITMENTS_PER_TX ≥ MAX_NEW_COMMITMENTS_PER_CALL\n * MAX_NEW_NULLIFIERS_PER_TX ≥ MAX_NEW_NULLIFIERS_PER_CALL\n *\n */\n\n// docs:start:constants\n// \"PER CALL\" CONSTANTS\nglobal MAX_NEW_COMMITMENTS_PER_CALL: Field = 16;\nglobal MAX_NEW_NULLIFIERS_PER_CALL: Field = 16;\nglobal MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL: Field = 4;\nglobal MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL: Field = 4;\nglobal MAX_NEW_L2_TO_L1_MSGS_PER_CALL: Field = 2;\nglobal MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL: Field = 16;\nglobal MAX_PUBLIC_DATA_READS_PER_CALL: Field = 16;\nglobal MAX_READ_REQUESTS_PER_CALL: Field = 32;\nglobal MAX_PENDING_READ_REQUESTS_PER_CALL: Field = 32;\n\n// \"PER TRANSACTION\" CONSTANTS\nglobal MAX_NEW_COMMITMENTS_PER_TX: Field = 64;\nglobal MAX_NEW_NULLIFIERS_PER_TX: Field = 64;\nglobal MAX_PRIVATE_CALL_STACK_LENGTH_PER_TX: Field = 8;\nglobal MAX_PUBLIC_CALL_STACK_LENGTH_PER_TX: Field = 8;\nglobal MAX_NEW_L2_TO_L1_MSGS_PER_TX: Field = 2;\nglobal MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_TX: Field = 16;\nglobal MAX_PUBLIC_DATA_READS_PER_TX: Field = 16;\nglobal MAX_NEW_CONTRACTS_PER_TX: Field = 1;\nglobal MAX_OPTIONALLY_REVEALED_DATA_LENGTH_PER_TX: Field = 4;\nglobal MAX_READ_REQUESTS_PER_TX: Field = 128;\nglobal MAX_PENDING_READ_REQUESTS_PER_TX: Field = 128;\nglobal NUM_ENCRYPTED_LOGS_HASHES_PER_TX: Field = 1;\nglobal NUM_UNENCRYPTED_LOGS_HASHES_PER_TX: Field = 1;\n// docs:end:constants\n\n// ROLLUP CONTRACT CONSTANTS - constants used only in l1-contracts\nglobal NUMBER_OF_L1_L2_MESSAGES_PER_ROLLUP: Field = 16;\n// TODO(961): Use this constant everywhere instead of hard-coded \"2\".\nglobal KERNELS_PER_BASE_ROLLUP: Field = 2;\nglobal MAX_NEW_NULLIFIERS_PER_BASE_ROLLUP: Field = 128;\nglobal MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_BASE_ROLLUP: Field = 32;\nglobal MAX_PUBLIC_DATA_READS_PER_BASE_ROLLUP: Field = 32;\n\n// TREES RELATED CONSTANTS\nglobal VK_TREE_HEIGHT: Field = 3;\nglobal FUNCTION_TREE_HEIGHT: Field = 5;\nglobal CONTRACT_TREE_HEIGHT: Field = 16;\nglobal NOTE_HASH_TREE_HEIGHT: Field = 32;\nglobal PUBLIC_DATA_TREE_HEIGHT: Field = 254;\nglobal NULLIFIER_TREE_HEIGHT: Field = 20;\nglobal L1_TO_L2_MSG_TREE_HEIGHT: Field = 16;\nglobal ROLLUP_VK_TREE_HEIGHT: Field = 8;\n\n// SUB-TREES RELATED CONSTANTS\nglobal CONTRACT_SUBTREE_HEIGHT: Field = 1;\nglobal CONTRACT_SUBTREE_SIBLING_PATH_LENGTH: Field = 15;\nglobal NOTE_HASH_SUBTREE_HEIGHT: Field = 7;\nglobal NOTE_HASH_SUBTREE_SIBLING_PATH_LENGTH: Field = 25;\nglobal NULLIFIER_SUBTREE_HEIGHT: Field = 7;\nglobal ARCHIVE_HEIGHT: Field = 16;\nglobal NULLIFIER_SUBTREE_SIBLING_PATH_LENGTH: Field = 13;\nglobal L1_TO_L2_MSG_SUBTREE_HEIGHT: Field = 4;\nglobal L1_TO_L2_MSG_SUBTREE_SIBLING_PATH_LENGTH: Field = 12;\n\n// MISC CONSTANTS\nglobal FUNCTION_SELECTOR_NUM_BYTES: Field = 4;\nglobal MAPPING_SLOT_PEDERSEN_SEPARATOR: Field = 4;\nglobal NUM_FIELDS_PER_SHA256: Field = 2;\nglobal ARGS_HASH_CHUNK_LENGTH: u32 = 32;\nglobal ARGS_HASH_CHUNK_COUNT: u32 = 16;\n\n\n// NOIR CONSTANTS - constants used only in yarn-packages/noir-contracts\n// Some are defined here because Noir doesn't yet support globals referencing other globals yet.\n// Move these constants to a noir file once the issue bellow is resolved:\n// https://github.com/noir-lang/noir/issues/1734\nglobal L1_TO_L2_MESSAGE_LENGTH: Field = 8;\nglobal L1_TO_L2_MESSAGE_ORACLE_CALL_LENGTH: Field = 26;\nglobal MAX_NOTE_FIELDS_LENGTH: Field = 20;\n// GET_NOTE_ORACLE_RETURN_LENGT = MAX_NOTE_FIELDS_LENGTH + 1 + 2\n// The plus 1 is 1 extra field for nonce.\n// + 2 for EXTRA_DATA: [number_of_return_notes, contract_address]\nglobal GET_NOTE_ORACLE_RETURN_LENGTH: Field = 23;\nglobal MAX_NOTES_PER_PAGE: Field = 10;\n// VIEW_NOTE_ORACLE_RETURN_LENGTH = MAX_NOTES_PER_PAGE * (MAX_NOTE_FIELDS_LENGTH + 1) + 2;\nglobal VIEW_NOTE_ORACLE_RETURN_LENGTH: Field = 212;\nglobal CALL_CONTEXT_LENGTH: Field = 7;\nglobal BLOCK_HEADER_LENGTH: Field = 7;\nglobal FUNCTION_DATA_LENGTH: Field = 4;\nglobal CONTRACT_DEPLOYMENT_DATA_LENGTH: Field = 6;\n// Change this ONLY if you have changed the PrivateCircuitPublicInputs structure.\n// In other words, if the structure/size of the public inputs of a function call changes then we\n// should change this constant as well as the offsets in private_call_stack_item.nr\nglobal PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH: Field = 155;\nglobal CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH: Field = 3;\nglobal CONTRACT_STORAGE_READ_LENGTH: Field = 2;\n// Change this ONLY if you have changed the PublicCircuitPublicInputs structure.\nglobal PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH: Field = 142;\nglobal GET_NOTES_ORACLE_RETURN_LENGTH: Field = 674;\nglobal EMPTY_NULLIFIED_COMMITMENT: Field = 1000000;\nglobal CALL_PRIVATE_FUNCTION_RETURN_SIZE: Field = 161;\nglobal PUBLIC_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH: Field = 87;\nglobal PRIVATE_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH: Field = 144;\nglobal COMMITMENTS_NUM_BYTES_PER_BASE_ROLLUP: Field = 4096;\nglobal NULLIFIERS_NUM_BYTES_PER_BASE_ROLLUP: Field = 4096;\nglobal PUBLIC_DATA_WRITES_NUM_BYTES_PER_BASE_ROLLUP: Field = 2048;\nglobal CONTRACTS_NUM_BYTES_PER_BASE_ROLLUP: Field = 64;\nglobal CONTRACT_DATA_NUM_BYTES_PER_BASE_ROLLUP: Field = 128;\nglobal CONTRACT_DATA_NUM_BYTES_PER_BASE_ROLLUP_UNPADDED: Field = 104;\nglobal L2_TO_L1_MSGS_NUM_BYTES_PER_BASE_ROLLUP: Field = 128;\nglobal LOGS_HASHES_NUM_BYTES_PER_BASE_ROLLUP: Field = 128;\n\n/**\n * Enumerate the hash_indices which are used for pedersen hashing.\n * We start from 1 to avoid the default generators. The generator indices are listed\n * based on the number of elements each index hashes. The following conditions must be met:\n *\n * +-----------+-------------------------------+----------------------+\n * | Hash size | Number of elements hashed (n) | Condition to use     |\n * |-----------+-------------------------------+----------------------|\n * | LOW       | n ≤ 8                         | 0 < hash_index ≤ 32  |\n * | MID       | 8 < n ≤ 16                    | 32 < hash_index ≤ 40 |\n * | HIGH      | 16 < n ≤ 48                   | 40 < hash_index ≤ 48 |\n * +-----------+-------------------------------+----------------------+\n *\n * Note: When modifying, modify `GeneratorIndexPacker` in packer.hpp accordingly.\n */\n// Indices with size ≤ 8\nglobal GENERATOR_INDEX__COMMITMENT = 1;\nglobal GENERATOR_INDEX__COMMITMENT_NONCE = 2;\nglobal GENERATOR_INDEX__UNIQUE_COMMITMENT = 3;\nglobal GENERATOR_INDEX__SILOED_COMMITMENT = 4;\nglobal GENERATOR_INDEX__NULLIFIER = 5;\nglobal GENERATOR_INDEX__INITIALIZATION_NULLIFIER = 6;\nglobal GENERATOR_INDEX__OUTER_NULLIFIER = 7;\nglobal GENERATOR_INDEX__PUBLIC_DATA_READ = 8;\nglobal GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST = 9;\nglobal GENERATOR_INDEX__FUNCTION_DATA = 10;\nglobal GENERATOR_INDEX__FUNCTION_LEAF = 11;\nglobal GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA = 12;\nglobal GENERATOR_INDEX__CONSTRUCTOR = 13;\nglobal GENERATOR_INDEX__CONSTRUCTOR_ARGS = 14;\nglobal GENERATOR_INDEX__CONTRACT_ADDRESS = 15;\nglobal GENERATOR_INDEX__CONTRACT_LEAF = 16;\nglobal GENERATOR_INDEX__CALL_CONTEXT = 17;\nglobal GENERATOR_INDEX__CALL_STACK_ITEM = 18;\nglobal GENERATOR_INDEX__CALL_STACK_ITEM_2 = 19;\nglobal GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET = 20;\nglobal GENERATOR_INDEX__L2_TO_L1_MSG = 21;\nglobal GENERATOR_INDEX__TX_CONTEXT = 22;\nglobal GENERATOR_INDEX__PUBLIC_LEAF_INDEX = 23;\nglobal GENERATOR_INDEX__PUBLIC_DATA_LEAF = 24;\nglobal GENERATOR_INDEX__SIGNED_TX_REQUEST = 25;\nglobal GENERATOR_INDEX__GLOBAL_VARIABLES = 26;\nglobal GENERATOR_INDEX__PARTIAL_ADDRESS = 27;\nglobal GENERATOR_INDEX__BLOCK_HASH = 28;\n// Indices with size ≤ 16\nglobal GENERATOR_INDEX__TX_REQUEST = 33;\nglobal GENERATOR_INDEX__SIGNATURE_PAYLOAD = 34;\n// Indices with size ≤ 44\nglobal GENERATOR_INDEX__VK = 41;\nglobal GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS = 42;\nglobal GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS = 43;\nglobal GENERATOR_INDEX__FUNCTION_ARGS = 44;\n",
        "path": "/protocol_types/constants.nr"
      },
      "92": {
        "source": "use dep::protocol_types::constants::{\n    RETURN_VALUES_LENGTH,\n    MAX_READ_REQUESTS_PER_CALL,\n    MAX_PENDING_READ_REQUESTS_PER_CALL,\n    MAX_NEW_COMMITMENTS_PER_CALL,\n    MAX_NEW_NULLIFIERS_PER_CALL,\n    MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n    MAX_NEW_L2_TO_L1_MSGS_PER_CALL,\n    NUM_FIELDS_PER_SHA256,\n    MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL,\n    MAX_PUBLIC_DATA_READS_PER_CALL,\n    GENERATOR_INDEX__FUNCTION_ARGS,\n    BLOCK_HEADER_LENGTH,\n    CONTRACT_DEPLOYMENT_DATA_LENGTH,\n    CALL_CONTEXT_LENGTH,\n    PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH,\n    PRIVATE_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH,\n    CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH,\n    CONTRACT_STORAGE_READ_LENGTH,\n    PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH,\n    PUBLIC_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH,\n    GENERATOR_INDEX__BLOCK_HASH,\n    GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS,\n    GENERATOR_INDEX__FUNCTION_DATA,\n    GENERATOR_INDEX__PUBLIC_DATA_READ,\n    GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST,\n    GENERATOR_INDEX__CALL_CONTEXT,\n    GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS,\n    GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA,\n};\n\nuse crate::oracle::debug_log;\nuse crate::types::vec::BoundedVec;\nuse crate::types::point::Point;\nuse crate::hash::pedersen_hash;\n\n// docs:start:private-global-variables\nstruct PrivateGlobalVariables {\n    chain_id: Field,\n    version: Field,\n}\n// docs:end:private-global-variables\n\nimpl PrivateGlobalVariables {\n    fn serialize(self) -> [Field; 2] {\n        [self.chain_id, self.version]\n    }\n}\n\n// docs:start:public-global-variables\nstruct PublicGlobalVariables {\n    chain_id: Field,\n    version: Field,\n    block_number: Field,\n    timestamp: Field,\n}\n// docs:end:public-global-variables\n\nimpl PublicGlobalVariables {\n    fn serialize(self) -> [Field; 4] {\n        [self.chain_id, self.version, self.block_number, self.timestamp]\n    }\n}\n\n// docs:start:contract-deployment-data\nstruct ContractDeploymentData {\n    deployer_public_key: Point,\n    constructor_vk_hash : Field,\n    function_tree_root : Field,\n    contract_address_salt : Field,\n    portal_contract_address : Field,\n}\n// docs:end:contract-deployment-data\n\nimpl ContractDeploymentData {\n    fn serialize(self) -> [Field; CONTRACT_DEPLOYMENT_DATA_LENGTH] {\n        [\n            self.deployer_public_key.x,\n            self.deployer_public_key.y,\n            self.constructor_vk_hash,\n            self.function_tree_root,\n            self.contract_address_salt,\n            self.portal_contract_address,\n        ]\n    }\n\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA)\n    }\n}\n\n// PrivateContextInputs are expected to be provided to each private function\n// docs:start:private-context-inputs\nstruct PrivateContextInputs {\n    call_context : CallContext,\n    block_header: BlockHeader,\n    contract_deployment_data: ContractDeploymentData,\n    private_global_variables: PrivateGlobalVariables,\n}\n// docs:end:private-context-inputs\n\n// PublicContextInputs are expected to be provided to each public function\n// docs:start:public-context-inputs\nstruct PublicContextInputs {\n    call_context: CallContext,\n    block_header: BlockHeader,\n\n    public_global_variables: PublicGlobalVariables,\n}\n// docs:end:public-context-inputs\n\n// docs:start:call-context\nstruct CallContext {\n    msg_sender : Field,\n    storage_contract_address : Field,\n    portal_contract_address : Field,\n    function_selector: Field,\n\n    is_delegate_call : bool,\n    is_static_call : bool,\n    is_contract_deployment: bool,\n}\n// docs:end:call-context\n\nimpl CallContext {\n    fn serialize(self) -> [Field; CALL_CONTEXT_LENGTH] {\n        [\n            self.msg_sender,\n            self.storage_contract_address,\n            self.portal_contract_address,\n            self.function_selector,\n            self.is_delegate_call as Field,\n            self.is_static_call as Field,\n            self.is_contract_deployment as Field,\n        ]\n    }\n\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__CALL_CONTEXT)\n    }\n}\n\n// docs:start:block-header\nstruct BlockHeader {\n    note_hash_tree_root : Field,\n    nullifier_tree_root : Field,\n    contract_tree_root : Field,\n    l1_to_l2_messages_tree_root : Field,\n    archive_root: Field,\n    public_data_tree_root: Field,\n    global_variables_hash: Field,\n}\n// docs:end:block-header\n\nimpl BlockHeader {\n    // NOTE: this order must match the order in `private_circuit_public_inputs.hpp`\n    pub fn serialize(self) -> [Field; BLOCK_HEADER_LENGTH] {\n        [\n            self.note_hash_tree_root,\n            self.nullifier_tree_root,\n            self.contract_tree_root,\n            self.l1_to_l2_messages_tree_root,\n            self.archive_root,\n            self.public_data_tree_root,\n            self.global_variables_hash,\n        ]\n    }\n\n    pub fn deserialize(deserialized: [Field; BLOCK_HEADER_LENGTH]) -> Self {\n        BlockHeader {\n            note_hash_tree_root: deserialized[0],\n            nullifier_tree_root: deserialized[1],\n            contract_tree_root: deserialized[2],\n            l1_to_l2_messages_tree_root: deserialized[3],\n            archive_root: deserialized[4],\n            public_data_tree_root: deserialized[5],\n            global_variables_hash: deserialized[6],\n        }\n    }\n\n    pub fn empty() -> Self {\n        Self { note_hash_tree_root: 0, nullifier_tree_root: 0, contract_tree_root: 0, l1_to_l2_messages_tree_root: 0, archive_root: 0, public_data_tree_root: 0, global_variables_hash: 0 }\n    }\n\n    pub fn block_hash(self) -> Field {\n        // TODO(#3442): Unify the ordering in `BlockHeader::serialize` function and the ordering\n        // in the block hash preimage --> This requires changes in the circuits.\n        let inputs = [\n            self.global_variables_hash,\n            self.note_hash_tree_root,\n            self.nullifier_tree_root,\n            self.contract_tree_root,\n            self.l1_to_l2_messages_tree_root,\n            self.public_data_tree_root\n        ];\n        pedersen_hash(inputs, GENERATOR_INDEX__BLOCK_HASH)\n    }\n}\n\nstruct FunctionData {\n    function_selector: Field,\n    is_internal: bool,\n    is_private: bool,\n    is_constructor: bool,\n}\n\nimpl FunctionData {\n    fn hash(self) -> Field {\n        pedersen_hash([\n            self.function_selector,\n            self.is_internal as Field,\n            self.is_private as Field,\n            self.is_constructor as Field,\n        ], GENERATOR_INDEX__FUNCTION_DATA)\n    }\n}\n\nstruct PrivateCircuitPublicInputs {\n    call_context: CallContext,\n    args_hash: Field,\n    return_values: [Field; RETURN_VALUES_LENGTH],\n    read_requests: [Field; crate::abi::MAX_READ_REQUESTS_PER_CALL],\n    pending_read_requests: [Field; crate::abi::MAX_PENDING_READ_REQUESTS_PER_CALL],\n    new_commitments: [Field; MAX_NEW_COMMITMENTS_PER_CALL],\n    new_nullifiers: [Field; MAX_NEW_NULLIFIERS_PER_CALL],\n    nullified_commitments: [Field; MAX_NEW_NULLIFIERS_PER_CALL],\n    private_call_stack: [Field; MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL],\n    public_call_stack: [Field; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n    new_l2_to_l1_msgs: [Field; MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n    // Explore introducing a new type like uint256 (similar to Point), so it's more explicit that\n    // we're talking about a single number backed by two field elements.\n    encrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    unencrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    encrypted_log_preimages_length: Field,\n    unencrypted_log_preimages_length: Field,\n    block_header: BlockHeader,\n    contract_deployment_data: ContractDeploymentData,\n    chain_id: Field,\n    version: Field,\n}\n\nimpl PrivateCircuitPublicInputs {\n    fn hash(self) -> Field {\n        let mut fields: BoundedVec<Field, PRIVATE_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH> = BoundedVec::new(0); \n        fields.push(self.call_context.hash());\n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        fields.push_array(self.read_requests);\n        fields.push_array(self.pending_read_requests);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.nullified_commitments);\n        fields.push_array(self.private_call_stack);\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.encrypted_logs_hash);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.encrypted_log_preimages_length);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_header.serialize());\n        fields.push(self.contract_deployment_data.hash());\n        fields.push(self.chain_id);\n        fields.push(self.version);\n\n        pedersen_hash(fields.storage, GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS)\n    }\n\n    fn serialize(self) -> [Field; PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH] {\n        let mut fields: BoundedVec<Field, PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH> = BoundedVec::new(0); \n        fields.push_array(self.call_context.serialize());\n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        fields.push_array(self.read_requests);\n        fields.push_array(self.pending_read_requests);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.private_call_stack);\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.encrypted_logs_hash);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.encrypted_log_preimages_length);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_header.serialize());\n        fields.push_array(self.contract_deployment_data.serialize());\n        fields.push(self.chain_id);\n        fields.push(self.version);\n        fields.storage\n    }\n}\n\nstruct ContractStorageRead {\n    storage_slot: Field,\n    value: Field,\n}\n\nimpl ContractStorageRead {\n    pub fn serialize(self) -> [Field; CONTRACT_STORAGE_READ_LENGTH] {\n        [self.storage_slot, self.value]\n    }\n\n    pub fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__PUBLIC_DATA_READ)\n    }\n\n    pub fn empty() -> Self {\n        Self { storage_slot: 0, value: 0 }\n    }\n}\n\nstruct ContractStorageUpdateRequest {\n    storage_slot: Field,\n    old_value: Field,\n    new_value: Field,\n}\n\nimpl ContractStorageUpdateRequest {\n    pub fn serialize(self) -> [Field; CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH] {\n        [self.storage_slot, self.old_value, self.new_value]\n    }\n\n    pub fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST)\n    }\n\n    pub fn empty() -> Self {\n        Self { storage_slot: 0, old_value: 0, new_value: 0 }\n    }\n}\n\nstruct PublicCircuitPublicInputs {\n    call_context: CallContext,\n    args_hash: Field,\n    return_values: [Field; RETURN_VALUES_LENGTH],\n    contract_storage_update_requests: [ContractStorageUpdateRequest; MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n    contract_storage_read: [ContractStorageRead; MAX_PUBLIC_DATA_READS_PER_CALL],\n    public_call_stack: [Field; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n    new_commitments: [Field; MAX_NEW_COMMITMENTS_PER_CALL],\n    new_nullifiers: [Field; crate::abi::MAX_NEW_NULLIFIERS_PER_CALL],\n    new_l2_to_l1_msgs: [Field; crate::abi::MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n    unencrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    unencrypted_log_preimages_length: Field,\n    block_header: BlockHeader,\n    prover_address: Field,\n}\n\nimpl PublicCircuitPublicInputs {\n    \n    pub fn hash(self) -> Field {\n        let mut inputs: BoundedVec<Field, PUBLIC_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH> = BoundedVec::new(0);\n        inputs.push(self.call_context.hash());\n        inputs.push(self.args_hash);\n        inputs.push_array(self.return_values);\n        for i in 0..MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL {\n            inputs.push(self.contract_storage_update_requests[i].hash());\n        }\n        for i in 0..MAX_PUBLIC_DATA_READS_PER_CALL {\n            inputs.push(self.contract_storage_read[i].hash());\n        }\n        inputs.push_array(self.public_call_stack);\n        inputs.push_array(self.new_commitments);\n        inputs.push_array(self.new_nullifiers);\n        inputs.push_array(self.new_l2_to_l1_msgs);\n\n        inputs.push_array(self.unencrypted_logs_hash);\n        inputs.push(self.unencrypted_log_preimages_length);\n        inputs.push_array(self.block_header.serialize());\n        inputs.push(self.prover_address);\n\n        pedersen_hash(inputs.storage, GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS)\n    }\n\n    pub fn serialize(self) -> [Field; PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH] {\n        let mut fields: BoundedVec<Field, PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH> = BoundedVec::new(0); \n        fields.push_array(self.call_context.serialize());   \n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        for i in 0..MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL {\n            fields.push_array(self.contract_storage_update_requests[i].serialize());\n        }\n        for i in 0..MAX_PUBLIC_DATA_READS_PER_CALL {\n            fields.push_array(self.contract_storage_read[i].serialize());\n        }\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_header.serialize());\n        fields.push(self.prover_address);\n        fields.storage\n    }\n}\n\nstruct Hasher {\n    fields: [Field],\n}\n\nimpl Hasher {\n    pub fn new()-> Self {\n        Self { fields: [] }\n    }\n\n    pub fn add(&mut self, field: Field) {\n        self.fields = self.fields.push_back(field);\n    }\n\n    pub fn add_multiple<N>(&mut self, fields: [Field; N]) {\n        for i in 0..N {\n            self.fields = self.fields.push_back(fields[i]);\n        }\n    }\n\n    pub fn hash(self) -> Field {\n        hash_args(self.fields)\n    }\n}\n\nglobal ARGS_HASH_CHUNK_LENGTH: u32 = 32;\nglobal ARGS_HASH_CHUNK_COUNT: u32 = 16;\n\npub fn hash_args<N>(args: [Field; N]) -> Field {\n    if args.len() == 0 {\n        0\n    } else {\n        let mut chunks_hashes = [0; ARGS_HASH_CHUNK_COUNT];\n        for i in 0..ARGS_HASH_CHUNK_COUNT {\n            let mut chunk_hash = 0;\n            let start_chunk_index = i * ARGS_HASH_CHUNK_LENGTH;\n            if start_chunk_index < (args.len() as u32) {\n                let mut chunk_args = [0; ARGS_HASH_CHUNK_LENGTH];\n                for j in 0..ARGS_HASH_CHUNK_LENGTH {\n                    let item_index = i * ARGS_HASH_CHUNK_LENGTH + j;\n                    if item_index < (args.len() as u32) {\n                        chunk_args[j] = args[item_index];\n                    }\n                }\n                chunk_hash = pedersen_hash(chunk_args, GENERATOR_INDEX__FUNCTION_ARGS);\n            }\n            chunks_hashes[i] = chunk_hash;\n        }\n        pedersen_hash(chunks_hashes, GENERATOR_INDEX__FUNCTION_ARGS)\n    }\n}\n",
        "path": "/aztec/abi.nr"
      },
      "93": {
        "source": "use dep::protocol_types::constants::GENERATOR_INDEX__CONTRACT_ADDRESS;\nuse crate::hash::pedersen_hash;\n\npub fn compute_address(pub_key_x: Field, pub_key_y: Field, partial_address: Field) -> Field {\n    pedersen_hash([pub_key_x, pub_key_y, partial_address],\n        GENERATOR_INDEX__CONTRACT_ADDRESS)\n}\n",
        "path": "/aztec/address.nr"
      },
      "94": {
        "source": "use dep::protocol_types::constants::{\n    EMPTY_NULLIFIED_COMMITMENT,\n    MAX_NEW_COMMITMENTS_PER_CALL,\n    MAX_NEW_L2_TO_L1_MSGS_PER_CALL,\n    MAX_NEW_NULLIFIERS_PER_CALL,\n    MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_DATA_READS_PER_CALL,\n    MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL,\n    MAX_READ_REQUESTS_PER_CALL,\n    MAX_PENDING_READ_REQUESTS_PER_CALL,\n    NUM_FIELDS_PER_SHA256,\n    RETURN_VALUES_LENGTH,\n};\n\nuse crate::abi;\n\nuse crate::abi::{\n    hash_args,\n    CallContext,\n    ContractDeploymentData,\n    BlockHeader,\n    FunctionData,\n    PrivateCircuitPublicInputs,\n    PublicCircuitPublicInputs,\n};\n\n// TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n// use dep::std::collections::vec::Vec;\n\n// l1 to l2 messaging\nuse crate::messaging::process_l1_to_l2_message;\nuse crate::private_call_stack_item::PrivateCallStackItem;\nuse crate::public_call_stack_item::PublicCallStackItem;\n\nuse crate::types::{\n    vec::BoundedVec,\n    point::Point,\n};\n\nuse crate::utils::arr_copy_slice;\n\nuse crate::oracle::{\n    arguments,\n    call_private_function::call_private_function_internal,\n    public_call::call_public_function_internal,\n    enqueue_public_function_call::enqueue_public_function_call_internal,\n    context::get_portal_address,\n    get_block_header::get_block_header,\n};\n\nuse dep::std::option::Option;\n\n// When finished, one can call .finish() to convert back to the abi\nstruct PrivateContext {\n    // docs:start:private-context\n    inputs: abi::PrivateContextInputs,\n\n    args_hash : Field,\n    return_values : BoundedVec<Field, RETURN_VALUES_LENGTH>,\n\n    read_requests: BoundedVec<Field, MAX_READ_REQUESTS_PER_CALL>,\n    pending_read_requests: BoundedVec<Field, MAX_PENDING_READ_REQUESTS_PER_CALL>,\n\n    new_commitments: BoundedVec<Field, MAX_NEW_COMMITMENTS_PER_CALL>,\n    new_nullifiers: BoundedVec<Field, MAX_NEW_NULLIFIERS_PER_CALL>,\n    nullified_commitments: BoundedVec<Field, MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    private_call_stack : BoundedVec<Field, MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL>,\n    public_call_stack : BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n    new_l2_to_l1_msgs : BoundedVec<Field, MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n    // docs:end:private-context\n\n    block_header: BlockHeader,\n\n    // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    // encrypted_logs_preimages: Vec<Field>,\n    // unencrypted_logs_preimages: Vec<Field>,\n}\n\nimpl PrivateContext {\n    pub fn new(inputs: abi::PrivateContextInputs, args_hash: Field) -> PrivateContext {\n        PrivateContext {\n            inputs: inputs,\n\n            args_hash: args_hash,\n            return_values: BoundedVec::new(0),\n\n            read_requests: BoundedVec::new(0),\n            pending_read_requests: BoundedVec::new(0),\n\n            new_commitments: BoundedVec::new(0),\n            new_nullifiers: BoundedVec::new(0),\n            nullified_commitments: BoundedVec::new(0),\n\n            block_header: inputs.block_header,\n\n            private_call_stack: BoundedVec::new(0),\n            public_call_stack: BoundedVec::new(0),\n            new_l2_to_l1_msgs: BoundedVec::new(0),\n\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n        }\n    }\n\n    pub fn msg_sender(self) -> Field {\n        self.inputs.call_context.msg_sender\n    }\n\n    pub fn this_address(self) -> Field {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    pub fn this_portal_address(self) -> Field {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    pub fn chain_id(self) -> Field {\n        self.inputs.private_global_variables.chain_id\n    }\n\n    pub fn version(self) -> Field {\n        self.inputs.private_global_variables.version\n    }\n\n    pub fn selector(self) -> Field {\n        self.inputs.call_context.function_selector\n    }\n\n    pub fn get_block_header(self, block_number: u32) -> BlockHeader {\n        get_block_header(block_number, self)\n    }\n\n    pub fn finish(self) -> abi::PrivateCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let encrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let unencrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let encrypted_log_preimages_length = 0;\n        let unencrypted_log_preimages_length = 0;\n\n        let priv_circuit_pub_inputs = abi::PrivateCircuitPublicInputs {\n            call_context: self.inputs.call_context,\n            args_hash: self.args_hash,\n            return_values: self.return_values.storage,\n            read_requests: self.read_requests.storage,\n            pending_read_requests: self.pending_read_requests.storage,\n            new_commitments: self.new_commitments.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            nullified_commitments: self.nullified_commitments.storage,\n            private_call_stack: self.private_call_stack.storage,\n            public_call_stack: self.public_call_stack.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            encrypted_logs_hash: encrypted_logs_hash,\n            unencrypted_logs_hash: unencrypted_logs_hash,\n            encrypted_log_preimages_length: encrypted_log_preimages_length,\n            unencrypted_log_preimages_length: unencrypted_log_preimages_length,\n            block_header: self.block_header,\n            contract_deployment_data: self.inputs.contract_deployment_data,\n            chain_id: self.inputs.private_global_variables.chain_id,\n            version: self.inputs.private_global_variables.version,\n        };\n        priv_circuit_pub_inputs\n    }\n\n    pub fn push_read_request(&mut self, read_request: Field) {\n        self.read_requests.push(read_request);\n    }\n\n    pub fn push_pending_read_request(&mut self, pending_read_request: Field) {\n        self.pending_read_requests.push(pending_read_request);\n    }\n\n    pub fn push_new_note_hash(&mut self, note_hash: Field) {\n        self.new_commitments.push(note_hash);\n    }\n\n    // We never push a zero nullified_commitment as zero is used to indicate the end\n    // of a field array in private kernel. This routine transparently replaces a\n    // zero value into the special placeholder: EMPTY_NULLIFIED_COMMITMENT.\n    pub fn push_new_nullifier(&mut self, nullifier: Field, nullified_commitment: Field) {\n        self.new_nullifiers.push(nullifier);\n        let mut non_zero_nullified = nullified_commitment;\n        if (non_zero_nullified == 0) {\n            non_zero_nullified = EMPTY_NULLIFIED_COMMITMENT;\n        }\n        self.nullified_commitments.push(non_zero_nullified);\n    }\n\n    // docs:start:context_message_portal\n    pub fn message_portal(&mut self, content: Field) \n    // docs:end:context_message_portal\n    {\n        self.new_l2_to_l1_msgs.push(content);\n    }\n\n    // PrivateContextInputs must be temporarily passed in to prevent too many unknowns\n    // Note this returns self to get around an issue where mutable structs do not maintain mutations unless reassigned\n    // docs:start:context_consume_l1_to_l2_message\n    // docs:start:consume_l1_to_l2_message\n    pub fn consume_l1_to_l2_message(\n        &mut self,\n        msg_key: Field,\n        content: Field,\n        secret: Field\n    ) \n    // docs:end:context_consume_l1_to_l2_message\n    {\n        let nullifier = process_l1_to_l2_message(self.block_header.l1_to_l2_messages_tree_root, self.this_address(), self.this_portal_address(), self.chain_id(), self.version(), msg_key, content, secret);\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT)\n    }\n    // docs:end:consume_l1_to_l2_message\n\n    pub fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self.inputs;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self.inputs;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn call_private_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n        args: [Field; ARGS_COUNT]\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_private_function_with_packed_args(contract_address, function_selector, args_hash)\n    }\n\n    pub fn call_private_function_no_args(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        self.call_private_function_with_packed_args(contract_address, function_selector, 0)\n    }\n\n    pub fn call_private_function_with_packed_args(\n        &mut self,\n        contract_address: Field,\n        function_selector: Field,\n        args_hash: Field\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let fields = call_private_function_internal(\n            contract_address, \n            function_selector, \n            args_hash\n        );\n        let item = PrivateCallStackItem {\n            contract_address: fields[0],\n            function_data: FunctionData {\n                function_selector: fields[1],\n                is_internal: fields[2] as bool,\n                is_private: fields[3] as bool,\n                is_constructor: fields[4] as bool,\n            },\n            public_inputs: PrivateCircuitPublicInputs {\n                call_context: CallContext {\n                    msg_sender : fields[5],\n                    storage_contract_address : fields[6],\n                    portal_contract_address : fields[7],\n                    function_selector: fields[8], // practically same as fields[1]\n                    is_delegate_call : fields[9] as bool,\n                    is_static_call : fields[10] as bool,\n                    is_contract_deployment: fields[11] as bool,\n                },\n                // TODO handle the offsets as a variable incremented during extraction?\n                args_hash: fields[12],\n                return_values: arr_copy_slice(fields, [0; RETURN_VALUES_LENGTH], 13),\n                read_requests: arr_copy_slice(fields, [0; MAX_READ_REQUESTS_PER_CALL], 17),\n                pending_read_requests: arr_copy_slice(fields, [0; MAX_READ_REQUESTS_PER_CALL], 49),\n                new_commitments: arr_copy_slice(fields, [0; MAX_NEW_COMMITMENTS_PER_CALL], 81),\n                new_nullifiers: arr_copy_slice(fields, [0; MAX_NEW_NULLIFIERS_PER_CALL], 97),\n                nullified_commitments: arr_copy_slice(fields, [0; MAX_NEW_NULLIFIERS_PER_CALL], 113),\n                private_call_stack: arr_copy_slice(fields, [0; MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL], 129),\n                public_call_stack: arr_copy_slice(fields, [0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL], 133),\n                new_l2_to_l1_msgs: arr_copy_slice(fields, [0; MAX_NEW_L2_TO_L1_MSGS_PER_CALL], 137),\n                encrypted_logs_hash: arr_copy_slice(fields, [0; NUM_FIELDS_PER_SHA256], 139),\n                unencrypted_logs_hash: arr_copy_slice(fields, [0; NUM_FIELDS_PER_SHA256], 141),\n                encrypted_log_preimages_length: fields[143],\n                unencrypted_log_preimages_length: fields[144],\n                block_header: BlockHeader {\n                    // Must match order in `private_circuit_public_inputs.hpp`\n                    note_hash_tree_root : fields[145],\n                    nullifier_tree_root : fields[146],\n                    contract_tree_root : fields[147],\n                    l1_to_l2_messages_tree_root : fields[148],\n                    archive_root : fields[149],\n                    public_data_tree_root: fields[150],\n                    global_variables_hash: fields[151],\n                },\n                contract_deployment_data: ContractDeploymentData {\n                    deployer_public_key: Point::new(fields[152], fields[153]),\n                    constructor_vk_hash : fields[154],\n                    function_tree_root : fields[155],\n                    contract_address_salt : fields[156],\n                    portal_contract_address : fields[157],\n                },\n                chain_id: fields[158],\n                version: fields[159],\n            },\n            is_execution_request: fields[160] as bool,\n        };\n        assert(contract_address == item.contract_address);\n        assert(function_selector == item.function_data.function_selector);\n\n        assert(args_hash == item.public_inputs.args_hash);\n\n        assert(item.is_execution_request == false);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        // We are issuing a regular call which is not delegate, static, or deployment. We also constrain\n        // the msg_sender in the nested call to be equal to our address, and the execution context address\n        // for the nested call to be equal to the address we actually called.\n        assert(item.public_inputs.call_context.is_delegate_call == false);\n        assert(item.public_inputs.call_context.is_static_call == false);\n        assert(item.public_inputs.call_context.is_contract_deployment == false);\n        assert(item.public_inputs.call_context.msg_sender == self.inputs.call_context.storage_contract_address);\n        assert(item.public_inputs.call_context.storage_contract_address == contract_address);\n\n        self.private_call_stack.push(item.hash());\n\n        item.public_inputs.return_values\n    }\n\n    pub fn call_public_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash)\n    }\n\n    pub fn call_public_function_no_args(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field,\n    ) {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0)\n    }\n\n    pub fn call_public_function_with_packed_args(\n        &mut self,\n        contract_address: Field,\n        function_selector: Field,\n        args_hash: Field\n    ) {\n        let fields = enqueue_public_function_call_internal(\n            contract_address, \n            function_selector, \n            args_hash\n        );\n        let item = PublicCallStackItem {\n            contract_address: fields[0],\n            function_data: FunctionData {\n                function_selector: fields[1],\n                is_internal: fields[2] as bool,\n                is_private: fields[3] as bool,\n                is_constructor: fields[4] as bool,\n            },\n            public_inputs: PublicCircuitPublicInputs {\n                call_context: CallContext {\n                    msg_sender : fields[5],\n                    storage_contract_address : fields[6],\n                    portal_contract_address : fields[7],\n                    function_selector: fields[8], // practically same as fields[1]\n                    is_delegate_call : fields[9] as bool,\n                    is_static_call : fields[10] as bool,\n                    is_contract_deployment: fields[11] as bool,\n                },\n                args_hash: fields[12],\n                return_values: [0; RETURN_VALUES_LENGTH],\n                contract_storage_update_requests: [ContractStorageUpdateRequest::empty(); MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n                contract_storage_read: [ContractStorageRead::empty(); MAX_PUBLIC_DATA_READS_PER_CALL],\n                public_call_stack: [0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n                new_commitments: [0; MAX_NEW_COMMITMENTS_PER_CALL],\n                new_nullifiers: [0; MAX_NEW_NULLIFIERS_PER_CALL],\n                new_l2_to_l1_msgs:[0; MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n                unencrypted_logs_hash:[0; NUM_FIELDS_PER_SHA256],\n                unencrypted_log_preimages_length: 0,\n                block_header: BlockHeader::empty(),\n                prover_address: 0,\n            },\n            is_execution_request: true,\n        };\n\n        assert(contract_address == item.contract_address);\n        assert(function_selector == item.function_data.function_selector);\n        \n        assert(args_hash == item.public_inputs.args_hash);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        // We are issuing a regular call which is not delegate, static, or deployment. We also constrain\n        // the msg_sender in the nested call to be equal to our address, and the execution context address\n        // for the nested call to be equal to the address we actually called.\n        assert(item.public_inputs.call_context.is_delegate_call == false);\n        assert(item.public_inputs.call_context.is_static_call == false);\n        assert(item.public_inputs.call_context.is_contract_deployment == false);\n        assert(item.public_inputs.call_context.msg_sender == self.inputs.call_context.storage_contract_address);\n        assert(item.public_inputs.call_context.storage_contract_address == contract_address);\n\n        self.public_call_stack.push(item.hash());\n    }\n}\n\nuse crate::abi::{\n    ContractStorageRead,\n    ContractStorageUpdateRequest\n};\n\nstruct PublicContext {\n    inputs: abi::PublicContextInputs,\n\n    args_hash : Field,\n    return_values : BoundedVec<Field, RETURN_VALUES_LENGTH>,\n\n    contract_storage_update_requests: BoundedVec<ContractStorageUpdateRequest, MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL>,\n    contract_storage_read: BoundedVec<ContractStorageRead, MAX_PUBLIC_DATA_READS_PER_CALL>,\n    public_call_stack: BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n\n    new_commitments: BoundedVec<Field, MAX_NEW_COMMITMENTS_PER_CALL>,\n    new_nullifiers: BoundedVec<Field, crate::abi::MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    new_l2_to_l1_msgs: BoundedVec<Field, crate::abi::MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n\n    unencrypted_logs_hash: BoundedVec<Field, NUM_FIELDS_PER_SHA256>,\n    unencrypted_logs_preimages_length: Field,\n\n    block_header: BlockHeader,\n    prover_address: Field,\n}\n\nimpl PublicContext {\n    pub fn new(inputs: abi::PublicContextInputs, args_hash: Field) -> PublicContext {\n        let empty_storage_read = ContractStorageRead::empty();\n        let empty_storage_update = ContractStorageUpdateRequest::empty();\n        PublicContext {\n            inputs: inputs,\n\n            args_hash: args_hash,\n            return_values: BoundedVec::new(0),\n\n            contract_storage_update_requests: BoundedVec::new(empty_storage_update),\n            contract_storage_read: BoundedVec::new(empty_storage_read),\n            public_call_stack: BoundedVec::new(0),\n\n            new_commitments: BoundedVec::new(0),\n            new_nullifiers: BoundedVec::new(0),\n\n            new_l2_to_l1_msgs: BoundedVec::new(0),\n\n            \n            unencrypted_logs_hash: BoundedVec::new(0),\n            unencrypted_logs_preimages_length: 0,\n\n            block_header: inputs.block_header,\n            prover_address: 0,\n\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n        }\n    }\n\n    pub fn msg_sender(self) -> Field {\n        self.inputs.call_context.msg_sender\n    }\n\n    pub fn this_address(self) -> Field {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    pub fn this_portal_address(self) -> Field {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    pub fn chain_id(self) -> Field {\n        self.inputs.public_global_variables.chain_id\n    }\n\n    pub fn version(self) -> Field {\n        self.inputs.public_global_variables.version\n    }\n\n    pub fn selector(self) -> Field {\n        self.inputs.call_context.function_selector\n    }\n\n    pub fn block_number(self) -> Field {\n        self.inputs.public_global_variables.block_number\n    }\n\n    pub fn timestamp(self) -> Field {\n        self.inputs.public_global_variables.timestamp\n    }\n\n    pub fn finish(self) -> abi::PublicCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let unencrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let unencrypted_log_preimages_length = 0;\n\n\n        // Compute the public call stack hashes\n        let pub_circuit_pub_inputs = abi::PublicCircuitPublicInputs {\n            call_context: self.inputs.call_context, // Done\n            args_hash: self.args_hash, // Done\n            contract_storage_update_requests: self.contract_storage_update_requests.storage,\n            contract_storage_read: self.contract_storage_read.storage,\n            return_values: self.return_values.storage,\n            new_commitments: self.new_commitments.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            public_call_stack: self.public_call_stack.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            unencrypted_logs_hash: unencrypted_logs_hash,\n            unencrypted_log_preimages_length: unencrypted_log_preimages_length,\n            block_header: self.inputs.block_header,\n            prover_address: self.prover_address,\n        };\n        pub_circuit_pub_inputs\n    }\n\n    pub fn push_new_note_hash(&mut self, note_hash: Field) {\n        self.new_commitments.push(note_hash);\n    }\n\n    pub fn push_new_nullifier(&mut self, nullifier: Field, _nullified_commitment: Field) {\n        self.new_nullifiers.push(nullifier);\n    }\n\n    pub fn message_portal(&mut self, content: Field) {\n        self.new_l2_to_l1_msgs.push(content);\n    }\n\n    // PrivateContextInputs must be temporarily passed in to prevent too many unknowns\n    // Note this returns self to get around an issue where mutable structs do not maintain mutations unless reassigned\n    pub fn consume_l1_to_l2_message(&mut self, msg_key: Field, content: Field, secret: Field) {\n        let this = (*self).this_address();\n        let nullifier = process_l1_to_l2_message(self.block_header.l1_to_l2_messages_tree_root, this, self.this_portal_address(), self.chain_id(), self.version(), msg_key, content, secret);\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT)\n    }\n\n    pub fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn call_public_function<ARGS_COUNT>(\n        _self: Self,\n        contract_address: Field, \n        function_selector: Field,\n        args: [Field; ARGS_COUNT],\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = abi::hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        call_public_function_internal(\n            contract_address, \n            function_selector, \n            args_hash,\n        )\n    }\n\n    pub fn call_public_function_no_args(\n        _self: Self,\n        contract_address: Field, \n        function_selector: Field,\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        call_public_function_internal(\n            contract_address, \n            function_selector, \n            0,\n        )\n    }\n\n}\n\nstruct Context {\n    private: Option<&mut PrivateContext>,\n    public: Option<&mut PublicContext>,\n}\n\nimpl Context {\n    pub fn private(context: &mut PrivateContext) -> Context {\n        Context {\n            private: Option::some(context),\n            public: Option::none()\n        }\n    }\n\n    pub fn public(context: &mut PublicContext) -> Context {\n        Context {\n            public: Option::some(context),\n            private: Option::none()\n        }\n    }\n\n    pub fn none() -> Context {\n        Context {\n            public: Option::none(),\n            private: Option::none()\n        }\n    }\n}\n",
        "path": "/aztec/context.nr"
      },
      "95": {
        "source": "use dep::std::hash::{pedersen_hash_with_separator, sha256};\nuse dep::protocol_types::constants::{\n  GENERATOR_INDEX__SIGNATURE_PAYLOAD,\n  GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET,\n};\n\npub fn sha256_to_field<N>(bytes_to_hash: [u8; N]) -> Field {\n    let sha256_hashed = sha256(bytes_to_hash);\n\n    // Convert it to a field element\n    let mut v = 1;\n    let mut high = 0 as Field;\n    let mut low = 0 as Field;\n\n    for i in 0..16 {\n        high = high + (sha256_hashed[15 - i] as Field) * v;\n        low = low + (sha256_hashed[16 + 15 - i] as Field) * v;\n        v = v * 256;\n    }\n\n    // Abuse that a % p + b % p = (a + b) % p and that low < p\n    let hash_in_a_field = low + high * v;\n\n    hash_in_a_field\n}\n\npub fn compute_secret_hash(secret: Field) -> Field {\n    // TODO(#1205) This is probably not the right index to use\n    pedersen_hash([secret], GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET)\n}\n\npub fn pedersen_hash<N>(inputs: [Field; N], hash_index: u32) -> Field {\n    pedersen_hash_with_separator(inputs, hash_index)\n}\n",
        "path": "/aztec/hash.nr"
      },
      "102": {
        "source": "use crate::context::{PrivateContext, PublicContext};\nuse crate::oracle;\nuse crate::types::point::Point;\n\npub fn emit_encrypted_log<N>(\n    context: &mut PrivateContext,\n    contract_address: Field,\n    storage_slot: Field,\n    encryption_pub_key: Point,\n    log: [Field; N]\n) {\n    let _ = oracle::logs::emit_encrypted_log(contract_address, storage_slot, encryption_pub_key, log);\n    context.accumulate_encrypted_logs(log);\n}\n\npub fn emit_unencrypted_log<T>(context: &mut PublicContext, log: T) {\n    let contract_address = context.this_address();\n    let event_selector = 5; // TODO: compute actual event selector.\n    let _ = oracle::logs::emit_unencrypted_log(contract_address, event_selector, log);\n    // context.accumulate_unencrypted_logs(log);\n}\n\n// TODO: We might want to remove this since emitting unencrypted logs from private functions is violating privacy.\n// --> might be a better approach to force devs to make a public function call that emits the log if needed then\n// it would be less easy to accidentally leak information.\n// If we decide to keep this function around would make sense to wait for traits and then merge it with emit_unencrypted_log.\npub fn emit_unencrypted_log_from_private<T>(context: &mut PrivateContext, log: T) {\n    let contract_address = context.this_address();\n    let event_selector = 5; // TODO: compute actual event selector.\n    let _ = oracle::logs::emit_unencrypted_log(contract_address, event_selector, log);\n    // context.accumulate_unencrypted_logs(log);\n}\n",
        "path": "/aztec/log.nr"
      },
      "107": {
        "source": "use crate::abi::PublicContextInputs;\nuse crate::context::{\n    PrivateContext,\n    PublicContext,\n};\nuse crate::note::{\n    note_header::NoteHeader,\n    note_interface::NoteInterface,\n    utils::compute_inner_note_hash,\n};\nuse crate::oracle::notes::{notify_created_note, notify_nullified_note};\nuse dep::protocol_types::constants::EMPTY_NULLIFIED_COMMITMENT;\n\npub fn create_note<Note, N>(\n    context: &mut PrivateContext,\n    storage_slot: Field,\n    note: &mut Note,\n    note_interface: NoteInterface<Note, N>,\n    broadcast: bool\n) {\n    let contract_address = (*context).this_address();\n\n    let header = NoteHeader { contract_address, storage_slot, nonce: 0, is_transient: true };\n    let set_header = note_interface.set_header;\n    set_header(note, header);\n    let inner_note_hash = compute_inner_note_hash(note_interface, *note);\n\n    let serialize = note_interface.serialize;\n    let serialized_note = serialize(*note);\n    assert(notify_created_note(storage_slot, serialized_note, inner_note_hash) == 0);\n\n    context.push_new_note_hash(inner_note_hash);\n\n    if broadcast {\n        let broadcast = note_interface.broadcast;\n        broadcast(context, storage_slot, *note);\n    }\n}\n\npub fn create_note_hash_from_public<Note, N>(\n    context: &mut PublicContext,\n    storage_slot: Field,\n    note: &mut Note,\n    note_interface: NoteInterface<Note, N>\n) {\n    let contract_address = (*context).this_address();\n\n    let header = NoteHeader { contract_address, storage_slot, nonce: 0, is_transient: true };\n    let set_header = note_interface.set_header;\n    set_header(note, header);\n    let inner_note_hash = compute_inner_note_hash(note_interface, *note);\n\n    context.push_new_note_hash(inner_note_hash);\n}\n\npub fn destroy_note<Note, N>(context: &mut PrivateContext, note: Note, note_interface: NoteInterface<Note, N>) {\n    let mut nullifier = 0;\n    let mut nullified_commitment: Field = EMPTY_NULLIFIED_COMMITMENT;\n    let compute_nullifier = note_interface.compute_nullifier;\n    nullifier = compute_nullifier(note);\n\n    // We also need the note commitment corresponding to the \"nullifier\"\n    let get_header = note_interface.get_header;\n    let header = get_header(note);\n    // `nullified_commitment` is used to inform the kernel which pending commitment\n    // the nullifier corresponds to so they can be matched and both squashed/deleted.\n    // nonzero nonce implies \"persistable\" nullifier (nullifies a persistent/in-tree\n    // commitment) in which case `nullified_commitment` is not used since the kernel\n    // just siloes and forwards the nullifier to its output.\n    if (header.is_transient) {\n        // TODO(1718): Can we reuse the note commitment computed in `compute_nullifier`?\n        nullified_commitment = compute_inner_note_hash(note_interface, note);\n    }\n    assert(notify_nullified_note(nullifier, nullified_commitment) == 0);\n\n    context.push_new_nullifier(nullifier, nullified_commitment)\n}\n",
        "path": "/aztec/note/lifecycle.nr"
      },
      "108": {
        "source": "use dep::std::option::Option;\nuse dep::protocol_types::constants::{\n    MAX_READ_REQUESTS_PER_CALL,\n    GET_NOTE_ORACLE_RETURN_LENGTH,\n    GET_NOTES_ORACLE_RETURN_LENGTH,\n    MAX_NOTES_PER_PAGE,\n    VIEW_NOTE_ORACLE_RETURN_LENGTH,\n};\nuse crate::context::PrivateContext;\nuse crate::note::{\n    note_getter_options::{NoteGetterOptions, Select, Sort, SortOrder},\n    note_interface::NoteInterface,\n    note_viewer_options::NoteViewerOptions,\n    utils::compute_note_hash_for_read_or_nullify,\n};\nuse crate::oracle;\nuse crate::types::vec::BoundedVec;\n\nfn check_note_header<Note, N>(context: PrivateContext, storage_slot: Field, note_interface: NoteInterface<Note, N>, note: Note) {\n    let get_header = note_interface.get_header;\n    let header = get_header(note);\n    let contract_address = context.this_address();\n    assert(header.contract_address == contract_address);\n    assert(header.storage_slot == storage_slot);\n}\n\nfn check_note_fields<N>(fields: [Field; N], selects: BoundedVec<Option<Select>, N>) {\n    for i in 0..selects.len {\n        let select = selects.get_unchecked(i).unwrap_unchecked();\n        assert(fields[select.field_index] == select.value, \"Mismatch return note field.\");\n    }\n}\n\nfn check_notes_order<N>(fields_0: [Field; N], fields_1: [Field; N], sorts: BoundedVec<Option<Sort>, N>) {\n    for i in 0..sorts.len {\n        let sort = sorts.get_unchecked(i).unwrap_unchecked();\n        let eq = fields_0[sort.field_index] == fields_1[sort.field_index];\n        let lt = fields_0[sort.field_index] as u120 < fields_1[sort.field_index] as u120;\n        if sort.order == SortOrder.ASC {\n            assert(eq | lt, \"Return notes not sorted in ascending order.\");\n        } else if !eq {\n            assert(!lt, \"Return notes not sorted in descending order.\");\n        }\n    }\n}\n\npub fn get_note<Note, N>(context: &mut PrivateContext, storage_slot: Field, note_interface: NoteInterface<Note, N>) -> Note {\n    let note = get_note_internal(storage_slot, note_interface);\n\n    check_note_header(*context, storage_slot, note_interface, note);\n\n    let note_hash_for_read_request = compute_note_hash_for_read_or_nullify(note_interface, note);\n\n    context.push_read_request(note_hash_for_read_request);\n    note\n}\n\npub fn get_notes<Note, N, FILTER_ARGS>(\n    context: &mut PrivateContext,\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    options: NoteGetterOptions<Note, N, FILTER_ARGS>\n) -> [Option<Note>; MAX_READ_REQUESTS_PER_CALL] {\n    let opt_notes = get_notes_internal(storage_slot, note_interface, options);\n    let mut num_notes = 0;\n    let mut prev_fields = [0; N];\n    for i in 0..opt_notes.len() {\n        let opt_note = opt_notes[i];\n        if opt_note.is_some() {\n            let note = opt_note.unwrap_unchecked();\n            let serialize = note_interface.serialize;\n            let fields = serialize(note);\n            check_note_header(*context, storage_slot, note_interface, note);\n            check_note_fields(fields, options.selects);\n            if i != 0 {\n                check_notes_order(prev_fields, fields, options.sorts);\n            }\n            prev_fields = fields;\n\n            let note_hash_for_read_request = compute_note_hash_for_read_or_nullify(note_interface, note);\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1410): test to ensure\n            // failure if malicious oracle injects 0 nonce here for a \"pre-existing\" note.\n            context.push_read_request(note_hash_for_read_request);\n\n            num_notes += 1;\n        };\n    }\n    if options.limit != 0 {\n        assert(num_notes <= options.limit, \"Invalid number of return notes.\");\n    }\n    opt_notes\n}\n\nunconstrained fn get_note_internal<Note, N>(storage_slot: Field, note_interface: NoteInterface<Note, N>) -> Note {\n    let placeholder_note = [Option::none()];\n    let placeholder_fields = [0; GET_NOTE_ORACLE_RETURN_LENGTH];\n    oracle::notes::get_notes(storage_slot,\n        note_interface,\n        0,\n        [],\n        [],\n        [],\n        [],\n        1, // limit\n        0, // offset\n        placeholder_note,\n        placeholder_fields)[0].unwrap() // Notice: we don't allow dummies to be returned from get_note (singular).\n}\n\nunconstrained fn get_notes_internal<Note, N, FILTER_ARGS>(\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    options: NoteGetterOptions<Note, N, FILTER_ARGS>\n) -> [Option<Note>; MAX_READ_REQUESTS_PER_CALL] {\n    let (num_selects, select_by, select_values, sort_by, sort_order) = flatten_options(options.selects, options.sorts);\n    let placeholder_opt_notes = [Option::none(); MAX_READ_REQUESTS_PER_CALL];\n    let placeholder_fields = [0; GET_NOTES_ORACLE_RETURN_LENGTH];\n    let opt_notes = oracle::notes::get_notes(storage_slot,\n        note_interface,\n        num_selects,\n        select_by,\n        select_values,\n        sort_by,\n        sort_order,\n        options.limit,\n        options.offset,\n        placeholder_opt_notes,\n        placeholder_fields);\n\n    let filter = options.filter;\n    let filter_args = options.filter_args;\n    filter(opt_notes, filter_args)\n}\n\nunconstrained pub fn view_notes<Note, N>(storage_slot: Field, note_interface: NoteInterface<Note, N>, options: NoteViewerOptions<Note, N>) -> [Option<Note>; MAX_NOTES_PER_PAGE] {\n    let (num_selects, select_by, select_values, sort_by, sort_order) = flatten_options(options.selects, options.sorts);\n    let placeholder_opt_notes = [Option::none(); MAX_NOTES_PER_PAGE];\n    let placeholder_fields = [0; VIEW_NOTE_ORACLE_RETURN_LENGTH];\n    oracle::notes::get_notes(storage_slot,\n        note_interface,\n        num_selects,\n        select_by,\n        select_values,\n        sort_by,\n        sort_order,\n        options.limit,\n        options.offset,\n        placeholder_opt_notes,\n        placeholder_fields)\n}\n\nunconstrained fn flatten_options<Note, N>(selects: BoundedVec<Option<Select>, N>, sorts: BoundedVec<Option<Sort>, N>) -> (u8, [u8; N], [Field; N], [u8; N], [u2; N]) {\n    let mut num_selects = 0;\n    let mut select_by = [0; N];\n    let mut select_values = [0; N];\n    for i in 0..selects.len {\n        let select = selects.get(i);\n        if select.is_some() {\n            select_by[num_selects] = select.unwrap_unchecked().field_index;\n            select_values[num_selects] = select.unwrap_unchecked().value;\n            num_selects += 1;\n        };\n    }\n\n    let mut sort_by = [0; N];\n    let mut sort_order = [0; N];\n    for i in 0..sorts.len {\n        let sort = sorts.get(i);\n        if sort.is_some() {\n            sort_by[i] = sort.unwrap_unchecked().field_index;\n            sort_order[i] = sort.unwrap_unchecked().order;\n        };\n    }\n\n    (num_selects, select_by, select_values, sort_by, sort_order)\n}\n",
        "path": "/aztec/note/note_getter.nr"
      },
      "110": {
        "source": "use crate::hash::pedersen_hash;\nuse dep::protocol_types::constants::{GENERATOR_INDEX__UNIQUE_COMMITMENT, GENERATOR_INDEX__SILOED_COMMITMENT};\n\npub fn compute_inner_hash(storage_slot: Field, note_hash: Field) -> Field {\n    // TODO(#1205) Do we need a generator index here?\n    pedersen_hash([storage_slot, note_hash], 0)\n}\n\npub fn compute_siloed_hash(contract_address: Field, inner_note_hash: Field) -> Field {\n    let inputs = [contract_address, inner_note_hash];\n    pedersen_hash(inputs, GENERATOR_INDEX__SILOED_COMMITMENT)\n}\n\npub fn compute_unique_hash(nonce: Field, siloed_note_hash: Field) -> Field {\n    let inputs = [nonce, siloed_note_hash];\n    pedersen_hash(inputs, GENERATOR_INDEX__UNIQUE_COMMITMENT)\n}\n",
        "path": "/aztec/note/note_hash.nr"
      },
      "114": {
        "source": "use dep::protocol_types::constants::GENERATOR_INDEX__OUTER_NULLIFIER;\nuse crate::{\n    note::{\n        note_hash::{compute_inner_hash, compute_siloed_hash, compute_unique_hash},\n        note_header::NoteHeader,\n        note_interface::NoteInterface,\n    },\n    utils::arr_copy_slice,\n    hash::pedersen_hash,\n};\n\npub fn compute_inner_note_hash<Note, N>(note_interface: NoteInterface<Note, N>, note: Note) -> Field {\n    let get_header = note_interface.get_header;\n    let header = get_header(note);\n\n    let compute_note_hash = note_interface.compute_note_hash;\n    let note_hash = compute_note_hash(note);\n\n    compute_inner_hash(header.storage_slot, note_hash)\n}\n\npub fn compute_siloed_note_hash<Note, N>(note_interface: NoteInterface<Note, N>, note_with_header: Note) -> Field {\n    let get_header = note_interface.get_header;\n    let header = get_header(note_with_header);\n\n    let inner_note_hash = compute_inner_note_hash(note_interface, note_with_header);\n\n    compute_siloed_hash(header.contract_address, inner_note_hash)\n}\n\npub fn compute_unique_siloed_note_hash<Note, N>(note_interface: NoteInterface<Note, N>, note_with_header: Note) -> Field {\n    let get_header = note_interface.get_header;\n    let header = get_header(note_with_header);\n\n    let siloed_note_hash = compute_siloed_note_hash(note_interface, note_with_header);\n\n    compute_unique_hash(header.nonce, siloed_note_hash)\n}\n\npub fn compute_siloed_nullifier<Note, N>(note_interface: NoteInterface<Note, N>, note_with_header: Note) -> Field {\n    let get_header = note_interface.get_header;\n    let header = get_header(note_with_header);\n\n    let compute_nullifier = note_interface.compute_nullifier;\n    let inner_nullifier = compute_nullifier(note_with_header);\n\n    let input = [header.contract_address, inner_nullifier];\n    pedersen_hash(input, GENERATOR_INDEX__OUTER_NULLIFIER)\n}\n\npub fn compute_note_hash_for_read_or_nullify<Note, N>(note_interface: NoteInterface<Note, N>, note_with_header: Note) -> Field {\n    let get_header = note_interface.get_header;\n    let header = get_header(note_with_header);\n\n    // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1386)\n    if (header.is_transient) {\n        // If a note is transient, we just read the inner_note_hash (kernel will silo by contract address).\n        compute_inner_note_hash(note_interface, note_with_header)\n    } else if (header.nonce == 0) {\n        // If not transient and nonce is zero, that means we are reading a public note.\n        compute_siloed_note_hash(note_interface, note_with_header)\n    } else {\n        // When nonce is nonzero, that means we are reading a settled note (from tree) created in a\n        // previous TX. So we need the unique_siloed_note_hash which has already been hashed with\n        // contract address and then nonce. This hash will match the existing leaf in the private\n        // data tree, so the kernel can just perform a membership check directly on this hash/leaf.\n        compute_unique_siloed_note_hash(note_interface, note_with_header)\n    }\n}\n\npub fn compute_note_hash_and_nullifier<Note, N, S>(note_interface: NoteInterface<Note, N>, note_header: NoteHeader, serialized_note: [Field; S]) -> [Field; 4] {\n    let deserialize = note_interface.deserialize;\n    let set_header = note_interface.set_header;\n    let mut note = deserialize(arr_copy_slice(serialized_note, [0; N], 0));\n    set_header(&mut note, note_header);\n\n    let compute_note_hash = note_interface.compute_note_hash;\n    let note_hash = compute_note_hash(note);\n    let inner_note_hash = compute_inner_hash(note_header.storage_slot, note_hash);\n\n    let siloed_note_hash = compute_siloed_hash(note_header.contract_address, inner_note_hash);\n\n    let unique_siloed_note_hash = compute_unique_hash(note_header.nonce, siloed_note_hash);\n\n    let compute_nullifier = note_interface.compute_nullifier;\n    let inner_nullifier = compute_nullifier(note);\n\n    [inner_note_hash, siloed_note_hash, unique_siloed_note_hash, inner_nullifier]\n}\n",
        "path": "/aztec/note/utils.nr"
      },
      "116": {
        "source": "#[oracle(packArguments)]\nfn pack_arguments_oracle<N>(_args: [Field; N]) -> Field {}\n\n// TODO: explain what this does.\nunconstrained pub fn pack_arguments<N>(args: [Field; N]) -> Field {\n    pack_arguments_oracle(args)\n}\n",
        "path": "/aztec/oracle/arguments.nr"
      },
      "117": {
        "source": "use dep::protocol_types::constants::CALL_PRIVATE_FUNCTION_RETURN_SIZE;\n\n#[oracle(callPrivateFunction)]\nfn call_private_function_oracle(_contract_address: Field, _function_selector: Field, _args_hash: Field) -> [Field; CALL_PRIVATE_FUNCTION_RETURN_SIZE] {}\n\nunconstrained pub fn call_private_function_internal(contract_address: Field, function_selector: Field, args_hash: Field) -> [Field; CALL_PRIVATE_FUNCTION_RETURN_SIZE] {\n    call_private_function_oracle(contract_address, function_selector, args_hash)\n}\n",
        "path": "/aztec/oracle/call_private_function.nr"
      },
      "123": {
        "source": "use crate::types::point::Point;\nuse crate::address::compute_address;\n\n#[oracle(getPublicKeyAndPartialAddress)]\nfn get_public_key_and_partial_address_oracle(_address: Field) -> [Field; 3] {}\n\nunconstrained fn get_public_key_and_partial_address_internal(address: Field) -> [Field; 3] {\n    get_public_key_and_partial_address_oracle(address)\n}\n\npub fn get_public_key(address: Field) -> Point {\n    let result = get_public_key_and_partial_address_internal(address);\n    let pub_key_x = result[0];\n    let pub_key_y = result[1];\n    let partial_address = result[2];\n\n    let calculated_address = compute_address(pub_key_x, pub_key_y, partial_address);\n    assert(calculated_address == address);\n\n    Point::new(pub_key_x, pub_key_y)\n}\n",
        "path": "/aztec/oracle/get_public_key.nr"
      },
      "127": {
        "source": "\n// contract_address + \n// args_hash +\n// crate::abi::FUNCTION_DATA_SIZE +\n// crate::abi::CALL_CONTEXT_SIZE +\n// = 2 + 4 + 7\nglobal ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE: Field = 13;\n\n#[oracle(enqueuePublicFunctionCall)]\nfn enqueue_public_function_call_oracle(_contract_address: Field, _function_selector: Field, _args_hash: Field) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE] {}\n\nunconstrained pub fn enqueue_public_function_call_internal(contract_address: Field, function_selector: Field, args_hash: Field) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE] {\n    enqueue_public_function_call_oracle(contract_address, function_selector, args_hash)\n}\n",
        "path": "/aztec/oracle/enqueue_public_function_call.nr"
      },
      "130": {
        "source": "use dep::std::option::Option;\nuse crate::note::{\n    note_header::NoteHeader,\n    note_interface::NoteInterface,\n};\nuse crate::utils::arr_copy_slice;\n\n#[oracle(notifyCreatedNote)]\nfn notify_created_note_oracle<N>(_storage_slot: Field, _serialized_note: [Field; N], _inner_note_hash: Field) -> Field {}\n\nunconstrained pub fn notify_created_note<N>(storage_slot: Field, serialized_note: [Field; N], inner_note_hash: Field) -> Field {\n    notify_created_note_oracle(storage_slot, serialized_note, inner_note_hash)\n}\n\n#[oracle(notifyNullifiedNote)]\nfn notify_nullified_note_oracle<N>(_nullifier: Field, _inner_note_hash: Field) -> Field {}\n\nunconstrained pub fn notify_nullified_note<N>(nullifier: Field, inner_note_hash: Field) -> Field {\n    notify_nullified_note_oracle(nullifier, inner_note_hash)\n}\n\n#[oracle(getNotes)]\nfn get_notes_oracle<N, S>(\n    _storage_slot: Field,\n    _num_selects: u8,\n    _select_by: [u8; N],\n    _select_values: [Field; N],\n    _sort_by: [u8; N],\n    _sort_order: [u2; N],\n    _limit: u32,\n    _offset: u32,\n    _return_size: u32,\n    _placeholder_fields: [Field; S]\n) -> [Field; S] {}\n\nunconstrained fn get_notes_oracle_wrapper<N, S>(\n    storage_slot: Field,\n    num_selects: u8,\n    select_by: [u8; N],\n    select_values: [Field; N],\n    sort_by: [u8; N],\n    sort_order: [u2; N],\n    limit: u32,\n    offset: u32,\n    mut placeholder_fields: [Field; S]\n) -> [Field; S] {\n    let return_size = placeholder_fields.len() as u32;\n    get_notes_oracle(storage_slot,\n        num_selects,\n        select_by,\n        select_values,\n        sort_by,\n        sort_order,\n        limit,\n        offset,\n        return_size,\n        placeholder_fields)\n}\n\nunconstrained pub fn get_notes<Note, N, M, S, NS>(\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    num_selects: u8,\n    select_by: [u8; M],\n    select_values: [Field; M],\n    sort_by: [u8; M],\n    sort_order: [u2; M],\n    limit: u32,\n    offset: u32,\n    mut placeholder_opt_notes: [Option<Note>; S], // TODO: Remove it and use `limit` to initialize the note array.\n    placeholder_fields: [Field; NS] // TODO: Remove it and use `limit` to initialize the note array.\n) -> [Option<Note>; S] {\n    let fields = get_notes_oracle_wrapper(storage_slot,\n        num_selects,\n        select_by,\n        select_values,\n        sort_by,\n        sort_order,\n        limit,\n        offset,\n        placeholder_fields);\n    let num_notes = fields[0] as u32;\n    let contract_address = fields[1];\n    let deserialize = note_interface.deserialize;\n    let set_header = note_interface.set_header;\n    for i in 0..placeholder_opt_notes.len() {\n        if i as u32 < num_notes {\n            // lengths named as per typescript.\n            let return_header_length: Field = 2; // num_notes & contract_address.\n            let extra_preimage_length: Field = 2; // nonce & is_transient.\n            let read_offset: Field = return_header_length + i * (N + extra_preimage_length);\n            let nonce = fields[read_offset];\n            let is_transient = fields[read_offset + 1] as bool;\n            let header = NoteHeader { contract_address, nonce, storage_slot, is_transient };\n            let serialized_note = arr_copy_slice(fields, [0; N], read_offset + 2);\n            let mut note = deserialize(serialized_note);\n            set_header(&mut note, header);\n            placeholder_opt_notes[i] = Option::some(note);\n        };\n    }\n    placeholder_opt_notes\n}\n\n#[oracle(checkNullifierExists)]\nfn check_nullifier_exists_oracle(_inner_nullifier: Field) -> Field {}\n\nunconstrained pub fn check_nullifier_exists(inner_nullifier: Field) -> bool {\n    check_nullifier_exists_oracle(inner_nullifier) == 1\n}\n",
        "path": "/aztec/oracle/notes.nr"
      },
      "131": {
        "source": "#[oracle(storageRead)]\nfn storage_read_oracle<N>(_storage_slot: Field, _number_of_elements: Field) -> [Field; N] {}\n\nunconstrained fn storage_read_oracle_wrapper<N>(_storage_slot: Field) -> [Field; N] {\n    storage_read_oracle(_storage_slot, N)\n}\n\npub fn storage_read<T, N>(storage_slot: Field, deserialize: fn ([Field; N]) -> T) -> T {\n    let fields = storage_read_oracle_wrapper(storage_slot);\n    deserialize(fields)\n}\n\n#[oracle(storageWrite)]\nfn storage_write_oracle<N>(_storage_slot: Field, _values: [Field; N]) -> [Field; N] {}\n\n// TODO: Remove return value.\nunconstrained pub fn storage_write<N>(storage_slot: Field, fields: [Field; N]) {\n    let _hash = storage_write_oracle(storage_slot, fields);\n}\n",
        "path": "/aztec/oracle/storage.nr"
      },
      "132": {
        "source": "use crate::types::point::Point;\nuse dep::protocol_types::constants::NUM_FIELDS_PER_SHA256;\n\n// TODO: Should take encrypted data.\n#[oracle(emitEncryptedLog)]\nfn emit_encrypted_log_oracle<N>(_contract_address: Field, _storage_slot: Field, _encryption_pub_key: Point, _preimage: [Field; N]) -> Field {}\n\nunconstrained pub fn emit_encrypted_log<N>(contract_address: Field, storage_slot: Field, encryption_pub_key: Point, preimage: [Field; N]) -> [Field; NUM_FIELDS_PER_SHA256] {\n    [emit_encrypted_log_oracle(contract_address, storage_slot, encryption_pub_key, preimage), 0]\n}\n\n#[oracle(emitUnencryptedLog)]\nfn emit_unencrypted_log_oracle<T>(_contract_address: Field, _event_selector: Field, _message: T) -> Field {}\n\nunconstrained pub fn emit_unencrypted_log<T>(contract_address: Field, event_selector: Field, message: T) -> [Field; NUM_FIELDS_PER_SHA256] {\n    // https://github.com/AztecProtocol/aztec-packages/issues/885\n    [emit_unencrypted_log_oracle(contract_address, event_selector, message), 0]\n}\n",
        "path": "/aztec/oracle/logs.nr"
      },
      "133": {
        "source": "use crate::abi::FunctionData;\nuse crate::abi::PrivateCircuitPublicInputs;\nuse dep::protocol_types::constants::GENERATOR_INDEX__CALL_STACK_ITEM;\nuse crate::hash::pedersen_hash;\n\nstruct PrivateCallStackItem {\n    contract_address: Field,\n    function_data: FunctionData,\n    public_inputs: PrivateCircuitPublicInputs,\n    is_execution_request: bool,\n}\n\nimpl PrivateCallStackItem {\n    pub fn hash(self) -> Field {\n        pedersen_hash([\n            self.contract_address,\n            self.function_data.hash(),\n            self.public_inputs.hash(),\n        ], GENERATOR_INDEX__CALL_STACK_ITEM)\n    }\n}\n",
        "path": "/aztec/private_call_stack_item.nr"
      },
      "134": {
        "source": "use crate::{\n    abi,\n    hash::pedersen_hash,\n    abi::{\n        PublicCircuitPublicInputs,\n        FunctionData,\n    },\n};\nuse dep::protocol_types::constants::{\n    RETURN_VALUES_LENGTH,\n    GENERATOR_INDEX__CALL_STACK_ITEM,\n};\n\n// oracles\nuse crate::oracle::{\n    enqueue_public_function_call::enqueue_public_function_call_internal,\n};\n\nstruct PublicCallStackItem {\n    contract_address: Field,\n    function_data: FunctionData,\n    public_inputs: PublicCircuitPublicInputs,\n    is_execution_request: bool,\n}\n\nimpl PublicCallStackItem {\n    pub fn hash(self) -> Field {\n        pedersen_hash([\n            self.contract_address,\n            self.function_data.hash(),\n            self.public_inputs.hash(),\n        ], GENERATOR_INDEX__CALL_STACK_ITEM)\n    }\n}\n\n",
        "path": "/aztec/public_call_stack_item.nr"
      },
      "137": {
        "source": "use dep::std::option::Option;\nuse dep::protocol_types::constants::EMPTY_NULLIFIED_COMMITMENT;\nuse crate::context::{PrivateContext, Context};\nuse crate::note::{\n    lifecycle::create_note,\n    note_getter::{get_note, view_notes},\n    note_interface::NoteInterface,\n    note_viewer_options::NoteViewerOptions,\n};\nuse crate::oracle::notes::check_nullifier_exists;\nuse crate::state_vars::singleton::compute_singleton_initialization_nullifier;\n\n// docs:start:struct\nstruct ImmutableSingleton<Note, N> {\n    context: Option<&mut PrivateContext>,\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    compute_initialization_nullifier: fn (Field, Option<Field>) -> Field,\n}\n// docs:end:struct\n\nimpl<Note, N> ImmutableSingleton<Note, N> {\n    // docs:start:new\n    pub fn new(\n        context: Context,\n        storage_slot: Field,\n        note_interface: NoteInterface<Note, N>,\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        ImmutableSingleton {\n            context: context.private,\n            storage_slot,\n            note_interface,\n            compute_initialization_nullifier: compute_singleton_initialization_nullifier,\n        }\n    }\n    // docs:end:new\n\n    // docs:start:is_initialized\n    unconstrained pub fn is_initialized(self, owner: Option<Field>) -> bool {\n        let compute_initialization_nullifier = self.compute_initialization_nullifier;\n        let nullifier = compute_initialization_nullifier(self.storage_slot, owner);\n        check_nullifier_exists(nullifier)\n    }\n    // docs:end:is_initialized\n\n    // docs:start:initialize\n    pub fn initialize(\n        self,\n        note: &mut Note, \n        owner: Option<Field>,\n        broadcast: bool,\n    ) {\n        let context = self.context.unwrap();\n\n        // Nullify the storage slot.\n        let compute_initialization_nullifier = self.compute_initialization_nullifier;\n        let nullifier = compute_initialization_nullifier(self.storage_slot, owner);\n        context.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT);\n\n        create_note(\n            context,\n            self.storage_slot,\n            note,\n            self.note_interface,\n            broadcast,\n        );\n    }\n    // docs:end:initialize\n\n    // docs:start:get_note\n    pub fn get_note(self) -> Note {\n        let context = self.context.unwrap();\n        let storage_slot = self.storage_slot;\n        get_note(context, storage_slot, self.note_interface)\n    }\n    // docs:end:get_note\n\n    // docs:start:view_note\n    unconstrained pub fn view_note(self) -> Note {\n        let options = NoteViewerOptions::new().set_limit(1);\n        view_notes(self.storage_slot, self.note_interface, options)[0].unwrap()\n    }\n    // docs:end:view_note\n}\n",
        "path": "/aztec/state_vars/immutable_singleton.nr"
      },
      "138": {
        "source": "use crate::context::{PrivateContext, PublicContext, Context};\nuse dep::std::option::Option;\nuse crate::hash::pedersen_hash;\n\n// docs:start:map\nstruct Map<V> {\n    context: Context,\n    storage_slot: Field,\n    state_var_constructor: fn(Context, Field) -> V,\n}\n// docs:end:map\n\nimpl<V> Map<V> {\n    // docs:start:new\n    pub fn new(\n        context: Context,\n        storage_slot: Field,\n        state_var_constructor: fn(Context, Field) -> V,\n    ) -> Map<V> {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        Map {\n            context,\n            storage_slot,\n            state_var_constructor,\n        }\n    }\n    // docs:end:new\n\n    // docs:start:at\n    pub fn at(self, key: Field) -> V {\n        // TODO(#1204): use a generator index for the storage slot\n        let derived_storage_slot = pedersen_hash([self.storage_slot, key],0);\n\n        let state_var_constructor = self.state_var_constructor;\n        state_var_constructor(self.context, derived_storage_slot)\n    }\n    // docs:end:at\n}\n",
        "path": "/aztec/state_vars/map.nr"
      },
      "139": {
        "source": "use crate::context::{Context};\nuse crate::oracle::storage::storage_read;\nuse crate::oracle::storage::storage_write;\nuse crate::types::type_serialization::TypeSerializationInterface;\nuse dep::std::option::Option;\n\n// docs:start:public_state_struct\nstruct PublicState<T, T_SERIALIZED_LEN> {\n    context: Context,\n    storage_slot: Field,\n    serialization_methods: TypeSerializationInterface<T, T_SERIALIZED_LEN>,\n}\n// docs:end:public_state_struct\n\nimpl<T, T_SERIALIZED_LEN> PublicState<T, T_SERIALIZED_LEN> {\n    // docs:start:public_state_struct_new\n    pub fn new(\n        // Note: Passing the contexts to new(...) just to have an interface compatible with a Map.\n        context: Context,\n        storage_slot: Field,\n        serialization_methods: TypeSerializationInterface<T, T_SERIALIZED_LEN>,\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        PublicState {\n            context,\n            storage_slot,\n            serialization_methods,\n        }\n    }\n    // docs:end:public_state_struct_new\n\n    // docs:start:public_state_struct_read\n    pub fn read(self) -> T {\n        assert(self.context.private.is_none(), \"Public state writes only supported in public functions\");\n        storage_read(self.storage_slot, self.serialization_methods.deserialize)\n    }\n    // docs:end:public_state_struct_read\n\n    // docs:start:public_state_struct_write\n    pub fn write(self, value: T) {\n        assert(self.context.private.is_none(), \"Public state writes only supported in public functions\");\n        let serialize = self.serialization_methods.serialize;\n        let fields = serialize(value);\n        storage_write(self.storage_slot, fields);\n    }\n    // docs:end:public_state_struct_write\n}\n",
        "path": "/aztec/state_vars/public_state.nr"
      },
      "140": {
        "source": "use dep::std::option::Option;\nuse crate::abi::PublicContextInputs;\nuse dep::protocol_types::constants::{MAX_NOTES_PER_PAGE, MAX_READ_REQUESTS_PER_CALL};\nuse crate::context::{PrivateContext, PublicContext, Context};\nuse crate::note::{\n    lifecycle::{create_note, create_note_hash_from_public, destroy_note},\n    note_getter::{get_notes, view_notes},\n    note_getter_options::NoteGetterOptions,\n    note_header::NoteHeader,\n    note_interface::NoteInterface,\n    note_viewer_options::NoteViewerOptions,\n    utils::compute_note_hash_for_read_or_nullify,\n};\n\n// docs:start:struct\nstruct Set<Note, N> {\n    context: Context,\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n}\n// docs:end:struct\n\nimpl<Note, N> Set<Note, N> {\n    // docs:start:new\n    pub fn new(\n        context: Context,\n        storage_slot: Field,\n        note_interface: NoteInterface<Note, N>,\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        Set {\n            context,\n            storage_slot,\n            note_interface,\n        }\n    }\n    // docs:end:new\n\n    // docs:start:insert\n    pub fn insert(self,\n        note: &mut Note,\n        broadcast: bool,\n    ) {\n        create_note(\n            self.context.private.unwrap(),\n            self.storage_slot,\n            note,\n            self.note_interface,\n            broadcast,\n        );\n    }\n    // docs:end:insert\n\n    // docs:start:insert_from_public\n    pub fn insert_from_public(self, note: &mut Note) {\n        create_note_hash_from_public(\n            self.context.public.unwrap(),\n            self.storage_slot,\n            note,\n            self.note_interface,\n        );\n    }\n    // docs:end:insert_from_public\n    \n    // DEPRECATED\n    fn assert_contains_and_remove(_self: Self, _note: &mut Note, _nonce: Field) {\n        assert(false, \"`assert_contains_and_remove` has been deprecated. Please call PXE.addNote() to add a note to the database. Then use Set.get_notes() and Set.remove() in your contract to verify and remove a note.\");\n    }\n\n    // DEPRECATED\n    fn assert_contains_and_remove_publicly_created(_self: Self, _note: &mut Note) {\n        assert(false, \"`assert_contains_and_remove_publicly_created` has been deprecated. Please call PXE.addNote() to add a note to the database. Then use Set.get_notes() and Set.remove() in your contract to verify and remove a note.\");\n    }\n\n    // docs:start:remove\n    pub fn remove(self, note: Note) {\n        let context = self.context.private.unwrap();\n        let note_hash = compute_note_hash_for_read_or_nullify(self.note_interface, note);\n        let has_been_read = context.read_requests.any(|r| r == note_hash);\n        assert(has_been_read, \"Can only remove a note that has been read from the set.\");\n\n        destroy_note(\n            context,\n            note,\n            self.note_interface,\n        );\n    }\n    // docs:end:remove\n\n    // docs:start:get_notes\n    pub fn get_notes<FILTER_ARGS>(\n        self,\n        options: NoteGetterOptions<Note, N, FILTER_ARGS>,\n    ) -> [Option<Note>; MAX_READ_REQUESTS_PER_CALL] {\n        let storage_slot = self.storage_slot;\n        let opt_notes = get_notes(\n            self.context.private.unwrap(),\n            storage_slot,\n            self.note_interface,\n            options,\n        );\n        opt_notes\n    }\n    // docs:end:get_notes\n\n    // docs:start:view_notes\n    unconstrained pub fn view_notes(\n        self,\n        options: NoteViewerOptions<Note, N>,\n    ) -> [Option<Note>; MAX_NOTES_PER_PAGE] {\n        view_notes(self.storage_slot, self.note_interface, options)\n    }\n    // docs:end:view_notes\n}\n",
        "path": "/aztec/state_vars/set.nr"
      },
      "141": {
        "source": "use dep::std::option::Option;\nuse dep::protocol_types::constants::{EMPTY_NULLIFIED_COMMITMENT, GENERATOR_INDEX__INITIALIZATION_NULLIFIER};\nuse crate::context::{PrivateContext, PublicContext, Context};\nuse crate::note::{\n    lifecycle::{create_note, destroy_note},\n    note_getter::{get_note, view_notes},\n    note_interface::NoteInterface,\n    note_viewer_options::NoteViewerOptions,\n};\nuse crate::oracle::{\n    get_secret_key::get_secret_key,\n    notes::check_nullifier_exists,\n};\nuse crate::hash::pedersen_hash;\n\npub fn compute_singleton_initialization_nullifier(storage_slot: Field, owner: Option<Field>) -> Field {\n    if owner.is_some() {\n        let secret = get_secret_key(owner.unwrap_unchecked());\n        pedersen_hash([storage_slot, secret.low, secret.high],\n            GENERATOR_INDEX__INITIALIZATION_NULLIFIER)\n    } else {\n        pedersen_hash([storage_slot], GENERATOR_INDEX__INITIALIZATION_NULLIFIER)\n    }\n}\n\n// docs:start:struct\nstruct Singleton<Note, N> {\n    context: Option<&mut PrivateContext>,\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    compute_initialization_nullifier: fn (Field, Option<Field>) -> Field,\n}\n// docs:end:struct\n\nimpl<Note, N> Singleton<Note, N> {\n    // docs:start:new\n    pub fn new(\n        context: Context,\n        storage_slot: Field,\n        note_interface: NoteInterface<Note, N>,\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        Singleton {\n            context: context.private,\n            storage_slot,\n            note_interface,\n            compute_initialization_nullifier: compute_singleton_initialization_nullifier,\n        }\n    }\n    // docs:end:new\n\n    // docs:start:is_initialized\n    unconstrained pub fn is_initialized(self, owner: Option<Field>) -> bool {\n        let compute_initialization_nullifier = self.compute_initialization_nullifier;\n        let nullifier = compute_initialization_nullifier(self.storage_slot, owner);\n        check_nullifier_exists(nullifier)\n    }\n    // docs:end:is_initialized\n\n    // docs:start:initialize\n    pub fn initialize(\n        self,\n        note: &mut Note,\n        owner: Option<Field>,\n        broadcast: bool,\n    ) {\n        let context = self.context.unwrap();\n\n        // Nullify the storage slot.\n        let compute_initialization_nullifier = self.compute_initialization_nullifier;\n        let nullifier = compute_initialization_nullifier(self.storage_slot, owner);\n        context.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT);\n\n        create_note(context, self.storage_slot, note, self.note_interface, broadcast);\n    }\n    // docs:end:initialize\n\n    // docs:start:replace\n    pub fn replace(\n        self,\n        new_note: &mut Note,\n        broadcast: bool,\n    ) {\n        let context = self.context.unwrap();\n        let prev_note = get_note(context, self.storage_slot, self.note_interface);\n\n        // Nullify previous note.\n        destroy_note(context, prev_note, self.note_interface);\n\n        // Add replacement note.\n        create_note(context, self.storage_slot, new_note, self.note_interface, broadcast);\n    }\n    // docs:end:replace\n\n    // docs:start:get_note\n    pub fn get_note(self, broadcast: bool) -> Note {\n        let context = self.context.unwrap();\n        let mut note = get_note(context, self.storage_slot, self.note_interface);\n\n        // Nullify current note to make sure it's reading the latest note.\n        destroy_note(context, note, self.note_interface);\n\n        // Add the same note again.\n        // Because a nonce is added to every note in the kernel, its nullifier will be different.\n        create_note(context, self.storage_slot, &mut note, self.note_interface, broadcast);\n\n        note\n    }\n    // docs:end:get_note\n\n    // docs:start:view_note\n    unconstrained pub fn view_note(self) -> Note {\n        let options = NoteViewerOptions::new().set_limit(1);\n        view_notes(self.storage_slot, self.note_interface, options)[0].unwrap()\n    }\n    // docs:end:view_note\n}\n",
        "path": "/aztec/state_vars/singleton.nr"
      },
      "145": {
        "source": "struct BoundedVec<T, MaxLen> {\n    storage: [T; MaxLen],\n    len: Field,\n}\n\nimpl<T, MaxLen> BoundedVec<T, MaxLen> {\n    pub fn new(initial_value: T) -> Self {\n        BoundedVec { storage: [initial_value; MaxLen], len: 0 }\n    }\n\n    pub fn get(mut self: Self, index: Field) -> T {\n        assert(index as u64 < self.len as u64);\n        self.storage[index]\n    }\n\n    pub fn get_unchecked(mut self: Self, index: Field) -> T {\n        self.storage[index]\n    }\n\n    pub fn push(&mut self, elem: T) {\n        assert(self.len as u64 < MaxLen as u64);\n\n        self.storage[self.len] = elem;\n        self.len += 1;\n    }\n\n    pub fn push_array<Len>(&mut self, array: [T; Len]) {\n        let newLen = self.len + array.len();\n        assert(newLen as u64 <= MaxLen as u64);\n        for i in 0..array.len() {\n            self.storage[self.len + i] = array[i];\n        }\n        self.len = newLen;\n    }\n\n    pub fn pop(&mut self) -> T {\n        assert(self.len as u64 > 0);\n\n        let elem = self.storage[self.len - 1];\n        self.len -= 1;\n        elem\n    }\n\n    pub fn any<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = false;\n        let mut exceeded_len = false;\n        for i in 0..MaxLen {\n            exceeded_len |= i == self.len;\n            if (!exceeded_len) {\n                ret |= predicate(self.storage[i]);\n            }\n        }\n        ret\n    }\n}\n\n#[test]\nfn test_vec_push_pop() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    assert(vec.len == 0);\n    vec.push(2);\n    assert(vec.len == 1);\n    vec.push(4);\n    assert(vec.len == 2);\n    vec.push(6);\n    assert(vec.len == 3);\n    let x = vec.pop();\n    assert(x == 6);\n    assert(vec.len == 2);\n    assert(vec.get(0) == 2);\n    assert(vec.get(1) == 4);\n}\n\n#[test]\nfn test_vec_push_array() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    vec.push_array([2, 4]);\n    assert(vec.len == 2);\n    assert(vec.get(0) == 2);\n    assert(vec.get(1) == 4);\n}\n\n#[test(should_fail)]\nfn test_vec_get_out_of_bound() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    vec.push_array([2, 4]);\n    let _x = vec.get(2);\n}\n\n#[test(should_fail)]\nfn test_vec_get_not_declared() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    vec.push_array([2]);\n    let _x = vec.get(1);\n}\n\n#[test(should_fail)]\nfn test_vec_get_uninitialized() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    let _x = vec.get(0);\n}\n\n#[test(should_fail)]\nfn test_vec_push_overflow() {\n    let mut vec: BoundedVec<Field, 1> = BoundedVec::new(0);\n    vec.push(1);\n    vec.push(2);\n}\n\n#[test]\nfn test_vec_any() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    vec.push_array([2, 4, 6]);\n    assert(vec.any(|v| v == 2) == true);\n    assert(vec.any(|v| v == 4) == true);\n    assert(vec.any(|v| v == 6) == true);\n    assert(vec.any(|v| v == 3) == false);\n}\n\n#[test]\nfn test_vec_any_not_default() {\n    let default_value = 1;\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(default_value);\n    vec.push_array([2, 4]);\n    assert(vec.any(|v| v == default_value) == false);\n}\n",
        "path": "/aztec/types/vec.nr"
      },
      "147": {
        "source": "use crate::types::type_serialization::TypeSerializationInterface;\n\nglobal BOOL_SERIALIZED_LEN: Field = 1;\n\nfn deserializeBool(fields: [Field; BOOL_SERIALIZED_LEN]) -> bool {\n    fields[0] as bool\n}\n\nfn serializeBool(value: bool) -> [Field; BOOL_SERIALIZED_LEN] {\n    [value as Field]\n}\n\nglobal BoolSerializationMethods = TypeSerializationInterface {\n    deserialize: deserializeBool,\n    serialize: serializeBool,\n};\n",
        "path": "/aztec/types/type_serialization/bool_serialization.nr"
      },
      "148": {
        "source": "use crate::types::type_serialization::TypeSerializationInterface;\n\n// docs:start:field_serialization\nglobal FIELD_SERIALIZED_LEN: Field = 1;\n\nfn deserializeField(fields: [Field; FIELD_SERIALIZED_LEN]) -> Field {\n    fields[0]\n}\n\nfn serializeField(value: Field) -> [Field; FIELD_SERIALIZED_LEN] {\n    [value]\n}\n\nglobal FieldSerializationMethods = TypeSerializationInterface {\n    deserialize: deserializeField,\n    serialize: serializeField,\n};\n// docs:end:field_serialization",
        "path": "/aztec/types/type_serialization/field_serialization.nr"
      },
      "150": {
        "source": "use crate::types::type_serialization::TypeSerializationInterface;\nuse crate::types::address::AztecAddress;\n\nglobal AZTEC_ADDRESS_SERIALIZED_LEN: Field = 1;\n\nfn deserialize(fields: [Field; AZTEC_ADDRESS_SERIALIZED_LEN]) -> AztecAddress {\n    AztecAddress::new(fields[0])\n}\n\nfn serialize(value: AztecAddress) -> [Field; AZTEC_ADDRESS_SERIALIZED_LEN] {\n    [value.address]\n}\n\nglobal AztecAddressSerializationMethods = TypeSerializationInterface {\n    deserialize,\n    serialize,\n};\n",
        "path": "/aztec/types/type_serialization/aztec_address_serialization.nr"
      },
      "151": {
        "source": "pub fn arr_copy_slice<T, N, M>(src: [T; N], mut dst: [T; M], offset: Field) -> [T; M] {\n    for i in 0..dst.len() {\n        dst[i] = src[i + offset];\n    }\n    dst\n}\n\npub fn field_from_bytes<N>(bytes: [u8; N], big_endian: bool) -> Field {\n    assert(bytes.len() as u32 < 32, \"field_from_bytes: N must be less than 32\");\n    let mut as_field = 0;\n    let mut offset = 1;\n    for i in 0..N {\n        let mut index = i;\n        if big_endian {\n            index = N - i - 1;\n        }\n        as_field += (bytes[index] as Field) * offset;\n        offset *= 256;\n    }\n\n    as_field\n}\n\n// TODO(#3470): Copied over from https://github.com/AztecProtocol/aztec-packages/blob/a07c4bd47313be6aa604a63f37857eb0136b41ba/yarn-project/noir-protocol-circuits/src/crates/rollup-lib/src/base/base_rollup_inputs.nr#L599\n// move to a shared place?\n\n// TODO to radix returns u8, so we cannot use bigger radixes. It'd be ideal to use a radix of the maximum range-constrained integer noir supports\npub fn full_field_less_than(lhs: Field, rhs: Field) -> bool {\n    dep::std::eddsa::lt_bytes32(lhs, rhs)\n}\n\npub fn full_field_greater_than(lhs: Field, rhs: Field) -> bool {\n    dep::std::eddsa::lt_bytes32(rhs, lhs)\n}",
        "path": "/aztec/utils.nr"
      },
      "153": {
        "source": "/////////////////////////////////////////////////////////////////////\n//                             Imports                             //\n/////////////////////////////////////////////////////////////////////\n\nuse dep::aztec::{\n    context::PrivateContext,\n    log::emit_encrypted_log,\n    note::{\n        note_header::NoteHeader,\n        note_interface::NoteInterface,\n        utils::compute_note_hash_for_read_or_nullify,\n    },\n    oracle::{\n        get_public_key::get_public_key,\n        get_secret_key::get_secret_key,\n        notes::check_nullifier_exists,\n        notes::check_nullifier_exists_oracle,\n        rand::rand,\n    },\n    types::address::AztecAddress\n};\n\nuse dep::protocol_types::{\n    constants::EMPTY_NULLIFIED_COMMITMENT,\n};\n\nuse dep::std::option::Option;\n\n\n/////////////////////////////////////////////////////////////////////\n//                              Class                              //\n/////////////////////////////////////////////////////////////////////\n\n/// @notice A note that represents a given bet, of a given user\n/// @member owner The owner of the note\n/// @member round_id The id of the round this bet is placed on\n/// @member bet The bet outcome given by the user (true or false)\n/// @member header The note header\nstruct BetNote {\n    owner: AztecAddress,\n    round_id: Field,\n    bet: bool, // Heads is 0 (False). Tails is 1 (True).\n    randomness: Field,\n    header: NoteHeader\n}\n\nglobal BET_NOTE_LEN: Field = 4;\n\nimpl BetNote {\n    /////////////////////////////////////////////////////////////////////\n    //                         Public methods                          //\n    /////////////////////////////////////////////////////////////////////\n\n    /// @notice Bet note constructor\n    /// @param _context The currenct context, used to push the round_id nullifier in order to ensure uniqueness\n    /// @param _owner The owner of the note\n    /// @param _bet The bet outcome given by the user (true or false, representing head or tail)\n    /// @param _round_id The id of the bet (randomly generated, by reusing the escrow randomness)\n    /// @param _randomness An extra randomness field, often generated during the function execution and not known beforehand.\n    ///                    Used for linking to other notes, identifaction and nullification.\n    pub fn new(_context: &mut PrivateContext, _owner: AztecAddress, _round_id: Field, _bet: bool, _randomness: Field) -> Self {\n        // Nullify round id and randomness combination\n        let compute_initialization_nullifier = BetNote::generate_round_randomness_nullifier;\n        let nullifier = compute_initialization_nullifier(_round_id, _randomness);\n        _context.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT);\n\n        BetNote {\n            owner: _owner,\n            round_id: _round_id,\n            bet: _bet,\n            randomness: _randomness,\n            header: NoteHeader::empty(),\n        }\n    }\n\n    /// @notice Bet note round_id nullifying generator\n    /// @param _round_id The id of the bet to nullify\n    /// @param _randomness User defined randomness for a given bet\n    pub fn generate_round_randomness_nullifier(_round_id: Field, _randomness: Field) -> Field {\n        dep::std::hash::pedersen_hash([_round_id, _randomness])\n    }\n\n    /// @notice Bet note round_id initialization checker. Checks whether the round_id and randomness combination was added to the nullifying tree\n    /// @param _round_id The round id of the bet to check for nullification status\n    /// @param _randomness The randomness of the bet to check for nullification status\n    unconstrained pub fn is_round_randomness_nullified(_round_id: Field, _randomness: Field) -> bool {\n        let compute_initialization_nullifier = BetNote::generate_round_randomness_nullifier;\n        let nullifier = compute_initialization_nullifier(_round_id, _randomness);\n        check_nullifier_exists(nullifier)\n    }\n\n    /////////////////////////////////////////////////////////////////////\n    //                        Internal methods                         //\n    /////////////////////////////////////////////////////////////////////\n\n    /// @notice Serializes the note\n    fn serialize(self) -> [Field; BET_NOTE_LEN] {\n        [self.owner.address, self.round_id, self.bet as Field, self.randomness]\n    }\n\n    /// @notice Deserializes the note\n    fn deserialize(preimage: [Field; BET_NOTE_LEN]) -> Self {\n        BetNote {\n            owner: AztecAddress::new(preimage[0]),\n            round_id: preimage[1],\n            bet: preimage[2] as bool,\n            randomness: preimage[3],\n            header: NoteHeader::empty(),\n        }\n    }\n\n    /// @notice Computes the note hash of the note\n    fn compute_note_hash(self) -> Field {\n        dep::std::hash::pedersen_hash([\n            self.owner.address,\n            self.round_id,\n            self.bet as Field,\n            self.randomness\n        ])\n    }\n\n    /// @notice Computes the nullifier of the note\n    /// @dev    This is a pretty standard nullifier computation, using the round_id as the key\n    fn compute_nullifier(self) -> Field {\n        let note_hash_for_nullify = compute_note_hash_for_read_or_nullify(BetNoteMethods, self);\n        let nullifier_key = self.round_id;\n\n        dep::std::hash::pedersen_hash([\n            note_hash_for_nullify,\n            nullifier_key,\n        ])\n    }\n\n    /// @notice Sets the note header\n    fn set_header(&mut self, header: NoteHeader) {\n        self.header = header;\n    }\n\n    /// @notice Emit the note creation event using the owner public key\n    fn broadcast(self, context: &mut PrivateContext, slot: Field) {\n        let encryption_pub_key = get_public_key(self.owner.address);\n        emit_encrypted_log(\n            context,\n            (*context).this_address(),\n            slot,\n            encryption_pub_key,\n            self.serialize(),\n        );\n    }\n}\n\n/////////////////////////////////////////////////////////////////////\n//                         Global methods                          //\n/////////////////////////////////////////////////////////////////////\n\nfn deserialize(preimage: [Field; BET_NOTE_LEN]) -> BetNote {\n    BetNote::deserialize(preimage)\n}\n\nfn serialize(note: BetNote) -> [Field; BET_NOTE_LEN] {\n    note.serialize()\n}\n\nfn compute_note_hash(note: BetNote) -> Field {\n    note.compute_note_hash()\n}\n\nfn compute_nullifier(note: BetNote) -> Field {\n    note.compute_nullifier()\n}\n\nfn get_header(note: BetNote) -> NoteHeader {\n    note.header\n}\n\nfn set_header(note: &mut BetNote, header: NoteHeader) {\n    note.set_header(header)\n}\n\nfn broadcast(context: &mut PrivateContext, slot: Field, note: BetNote) {\n    note.broadcast(context, slot);\n}\n\nglobal BetNoteMethods = NoteInterface {\n    deserialize,\n    serialize,\n    compute_note_hash,\n    compute_nullifier,\n    get_header,\n    set_header,\n    broadcast,\n};",
        "path": "/home/shaito/wonderland/aztec-coin-toss-pvp/src/types/bet_note.nr"
      },
      "154": {
        "source": "/////////////////////////////////////////////////////////////////////\n//                             Imports                             //\n/////////////////////////////////////////////////////////////////////\n\nuse dep::aztec::{\n    context::PrivateContext,\n    note::{\n        note_header::NoteHeader,\n        note_interface::NoteInterface,\n    },\n    types::address::AztecAddress\n};\n\n/////////////////////////////////////////////////////////////////////\n//                              Class                              //\n/////////////////////////////////////////////////////////////////////\n\n/// @notice a note containing the (immutable) game configuration\n/// @member divinity the address of the divinity used by the oracle\n/// @member private_oracle the address of the private oracle contract\n/// @member token the address of the token used for betting\n/// @member bet_amount the amount of tokens to bet\n/// @member header the note header\nstruct ConfigNote {\n    divinity: AztecAddress,\n    private_oracle: AztecAddress,\n    token: AztecAddress,\n    bet_amount: Field,\n    header: NoteHeader\n}\n\nglobal CONFIG_NOTE_LEN: Field = 4;\n\nimpl ConfigNote {\n    \n    /////////////////////////////////////////////////////////////////////\n    //                         Public methods                          //\n    /////////////////////////////////////////////////////////////////////\n\n    /// @notice create a new config note\n    /// @param _divinity the address of the divinity used by the oracle\n    /// @param _private_oracle the address of the private oracle contract\n    /// @param _token the address of the token used for betting\n    /// @param _amount the amount of tokens to bet\n    pub fn new(_divinity: AztecAddress, _private_oracle: AztecAddress, _token: AztecAddress, _amount: Field) -> Self {\n        ConfigNote {\n            divinity: _divinity,\n            private_oracle: _private_oracle,\n            token: _token,\n            bet_amount: _amount,\n            header: NoteHeader::empty(),\n        }\n    }\n\n    /////////////////////////////////////////////////////////////////////\n    //                        Internal methods                         //\n    /////////////////////////////////////////////////////////////////////\n\n    /// @notice serialize the note\n    fn serialize(self) -> [Field; CONFIG_NOTE_LEN] {\n        [self.divinity.address, self.private_oracle.address, self.token.address, self.bet_amount]\n    }\n\n    /// @notice deserialize the note\n    fn deserialize(preimage: [Field; CONFIG_NOTE_LEN]) -> Self {\n        ConfigNote {\n            divinity: AztecAddress::new(preimage[0]),\n            private_oracle: AztecAddress::new(preimage[1]),\n            token: AztecAddress::new(preimage[2]),\n            bet_amount: preimage[3],\n            header: NoteHeader::empty(),\n        }\n    }\n\n    /// @notice compute the note hash\n    fn compute_note_hash(self) -> Field {\n        dep::std::hash::pedersen_hash([\n            self.divinity.address,\n            self.private_oracle.address,\n            self.token.address,\n            self.bet_amount\n        ])\n    }\n\n    /// @notice this note isn't nullifiable, returns 0\n    fn compute_nullifier(self) -> Field {\n         let _ = self; // Avoid compiler warning (same # acir opcodes and backend size)\n         0\n    }\n\n    /// @notice get the note header\n    fn set_header(&mut self, header: NoteHeader) {\n        self.header = header;\n    }\n\n    /// @notice this notes isn't private, no owner to emit to\n    fn broadcast(self, context: &mut PrivateContext, slot: Field) {\n        // no owner == no broadcast\n        let _ = self; // Avoid compiler warning (same # acir opcodes and backend size)\n        let __ = context;\n        let ___ = slot;\n    }\n}\n\n/////////////////////////////////////////////////////////////////////\n//                         Global methods                          //\n/////////////////////////////////////////////////////////////////////\n\nfn deserialize(preimage: [Field; CONFIG_NOTE_LEN]) -> ConfigNote {\n    ConfigNote::deserialize(preimage)\n}\n\nfn serialize(note: ConfigNote) -> [Field; CONFIG_NOTE_LEN] {\n    note.serialize()\n}\n\nfn compute_note_hash(note: ConfigNote) -> Field {\n    note.compute_note_hash()\n}\n\nfn compute_nullifier(note: ConfigNote) -> Field {\n    note.compute_nullifier()\n}\n\nfn get_header(note: ConfigNote) -> NoteHeader {\n    note.header\n}\n\nfn set_header(note: &mut ConfigNote, header: NoteHeader) {\n    note.set_header(header)\n}\n\nfn broadcast(context: &mut PrivateContext, slot: Field, note: ConfigNote) {\n    note.broadcast(context, slot);\n}\n\nglobal ConfigNoteMethods = NoteInterface {\n    deserialize,\n    serialize,\n    compute_note_hash,\n    compute_nullifier,\n    get_header,\n    set_header,\n    broadcast,\n};",
        "path": "/home/shaito/wonderland/aztec-coin-toss-pvp/src/types/config_note.nr"
      },
      "155": {
        "source": "/* Autogenerated file, do not edit! */\n  \nuse dep::std;\nuse dep::aztec::context::{ PrivateContext, PublicContext };\nuse dep::protocol_types::constants::RETURN_VALUES_LENGTH;\n\nstruct AccountsBroadcastEscrowNoteForStruct {\n  address: Field,\n}\n\nstruct FromBurnStruct {\n  address: Field,\n}\n\nstruct FromBurnPublicStruct {\n  address: Field,\n}\n\nstruct FromEscrowStruct {\n  address: Field,\n}\n\nstruct OwnerEscrowStruct {\n  address: Field,\n}\n\nstruct ToMintPublicStruct {\n  address: Field,\n}\n\nstruct ToRedeemShieldStruct {\n  address: Field,\n}\n\nstruct NewAdminSetAdminStruct {\n  address: Field,\n}\n\nstruct MinterSetMinterStruct {\n  address: Field,\n}\n\nstruct OwnerSettleEscrowStruct {\n  address: Field,\n}\n\nstruct RecipientSettleEscrowStruct {\n  address: Field,\n}\n\nstruct FromShieldStruct {\n  address: Field,\n}\n\nstruct FromShieldPrivateStruct {\n  address: Field,\n}\n\nstruct ToShieldPrivateStruct {\n  address: Field,\n}\n\nstruct FromTransferStruct {\n  address: Field,\n}\n\nstruct ToTransferStruct {\n  address: Field,\n}\n\nstruct FromTransferPublicStruct {\n  address: Field,\n}\n\nstruct ToTransferPublicStruct {\n  address: Field,\n}\n\nstruct FromUnshieldStruct {\n  address: Field,\n}\n\nstruct ToUnshieldStruct {\n  address: Field,\n}\n\n\n// Interface for calling Token functions from a private context\nstruct TokenPrivateContextInterface {\n  address: Field,\n}\n\nimpl TokenPrivateContextInterface {\n  pub fn at(address: Field) -> Self {\n      Self {\n          address,\n      }\n  }\n  \n  pub fn broadcast_escrow_note_for(\n    self,\n    context: &mut PrivateContext,\n    accounts: [AccountsBroadcastEscrowNoteForStruct;4],\n    randomness: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 5];\n    serialized_args[0] = accounts[0].address;\n    serialized_args[1] = accounts[1].address;\n    serialized_args[2] = accounts[2].address;\n    serialized_args[3] = accounts[3].address;\n    serialized_args[4] = randomness;\n\n    context.call_private_function(self.address, 0x2426c148, serialized_args)\n  }\n  \n\n  pub fn burn(\n    self,\n    context: &mut PrivateContext,\n    from: FromBurnStruct,\n    amount: Field,\n    nonce: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 3];\n    serialized_args[0] = from.address;\n    serialized_args[1] = amount;\n    serialized_args[2] = nonce;\n\n    context.call_private_function(self.address, 0xd4fcc96e, serialized_args)\n  }\n  \n\n  pub fn burn_public(\n    self,\n    context: &mut PrivateContext,\n    from: FromBurnPublicStruct,\n    amount: Field,\n    nonce: Field\n  ) {\n    let mut serialized_args = [0; 3];\n    serialized_args[0] = from.address;\n    serialized_args[1] = amount;\n    serialized_args[2] = nonce;\n\n    context.call_public_function(self.address, 0xb0e964d5, serialized_args)\n  }\n  \n\n  pub fn escrow(\n    self,\n    context: &mut PrivateContext,\n    from: FromEscrowStruct,\n    owner: OwnerEscrowStruct,\n    amount: Field,\n    nonce: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 4];\n    serialized_args[0] = from.address;\n    serialized_args[1] = owner.address;\n    serialized_args[2] = amount;\n    serialized_args[3] = nonce;\n\n    context.call_private_function(self.address, 0x54f7b220, serialized_args)\n  }\n  \n\n  pub fn get_escrow(\n    self,\n    context: &mut PrivateContext,\n    randomness: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 1];\n    serialized_args[0] = randomness;\n\n    context.call_private_function(self.address, 0x37785550, serialized_args)\n  }\n  \n\n  pub fn mint_private(\n    self,\n    context: &mut PrivateContext,\n    amount: Field,\n    secret_hash: Field\n  ) {\n    let mut serialized_args = [0; 2];\n    serialized_args[0] = amount;\n    serialized_args[1] = secret_hash;\n\n    context.call_public_function(self.address, 0x10763932, serialized_args)\n  }\n  \n\n  pub fn mint_public(\n    self,\n    context: &mut PrivateContext,\n    to: ToMintPublicStruct,\n    amount: Field\n  ) {\n    let mut serialized_args = [0; 2];\n    serialized_args[0] = to.address;\n    serialized_args[1] = amount;\n\n    context.call_public_function(self.address, 0x6bfd1d5b, serialized_args)\n  }\n  \n\n  pub fn redeem_shield(\n    self,\n    context: &mut PrivateContext,\n    to: ToRedeemShieldStruct,\n    amount: Field,\n    secret: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 3];\n    serialized_args[0] = to.address;\n    serialized_args[1] = amount;\n    serialized_args[2] = secret;\n\n    context.call_private_function(self.address, 0xb77168f2, serialized_args)\n  }\n  \n\n  pub fn set_admin(\n    self,\n    context: &mut PrivateContext,\n    new_admin: NewAdminSetAdminStruct\n  ) {\n    let mut serialized_args = [0; 1];\n    serialized_args[0] = new_admin.address;\n\n    context.call_public_function(self.address, 0x41b90896, serialized_args)\n  }\n  \n\n  pub fn set_minter(\n    self,\n    context: &mut PrivateContext,\n    minter: MinterSetMinterStruct,\n    approve: bool\n  ) {\n    let mut serialized_args = [0; 2];\n    serialized_args[0] = minter.address;\n    serialized_args[1] = approve as Field;\n\n    context.call_public_function(self.address, 0x7f020b80, serialized_args)\n  }\n  \n\n  pub fn settle_escrow(\n    self,\n    context: &mut PrivateContext,\n    owner: OwnerSettleEscrowStruct,\n    recipient: RecipientSettleEscrowStruct,\n    randomness: Field,\n    nonce: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 4];\n    serialized_args[0] = owner.address;\n    serialized_args[1] = recipient.address;\n    serialized_args[2] = randomness;\n    serialized_args[3] = nonce;\n\n    context.call_private_function(self.address, 0x510f50d4, serialized_args)\n  }\n  \n\n  pub fn shield(\n    self,\n    context: &mut PrivateContext,\n    from: FromShieldStruct,\n    amount: Field,\n    secret_hash: Field,\n    nonce: Field\n  ) {\n    let mut serialized_args = [0; 4];\n    serialized_args[0] = from.address;\n    serialized_args[1] = amount;\n    serialized_args[2] = secret_hash;\n    serialized_args[3] = nonce;\n\n    context.call_public_function(self.address, 0x1d24add0, serialized_args)\n  }\n  \n\n  pub fn shield_private(\n    self,\n    context: &mut PrivateContext,\n    from: FromShieldPrivateStruct,\n    to: ToShieldPrivateStruct,\n    amount: Field,\n    nonce: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 4];\n    serialized_args[0] = from.address;\n    serialized_args[1] = to.address;\n    serialized_args[2] = amount;\n    serialized_args[3] = nonce;\n\n    context.call_private_function(self.address, 0x319ca21e, serialized_args)\n  }\n  \n\n  pub fn transfer(\n    self,\n    context: &mut PrivateContext,\n    from: FromTransferStruct,\n    to: ToTransferStruct,\n    amount: Field,\n    nonce: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 4];\n    serialized_args[0] = from.address;\n    serialized_args[1] = to.address;\n    serialized_args[2] = amount;\n    serialized_args[3] = nonce;\n\n    context.call_private_function(self.address, 0xb1aa668a, serialized_args)\n  }\n  \n\n  pub fn transfer_public(\n    self,\n    context: &mut PrivateContext,\n    from: FromTransferPublicStruct,\n    to: ToTransferPublicStruct,\n    amount: Field,\n    nonce: Field\n  ) {\n    let mut serialized_args = [0; 4];\n    serialized_args[0] = from.address;\n    serialized_args[1] = to.address;\n    serialized_args[2] = amount;\n    serialized_args[3] = nonce;\n\n    context.call_public_function(self.address, 0x7db8f449, serialized_args)\n  }\n  \n\n  pub fn unshield(\n    self,\n    context: &mut PrivateContext,\n    from: FromUnshieldStruct,\n    to: ToUnshieldStruct,\n    amount: Field,\n    nonce: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 4];\n    serialized_args[0] = from.address;\n    serialized_args[1] = to.address;\n    serialized_args[2] = amount;\n    serialized_args[3] = nonce;\n\n    context.call_private_function(self.address, 0x78303b89, serialized_args)\n  }\n  \n}\n  \n  \n\n\n// Interface for calling Token functions from a public context\nstruct TokenPublicContextInterface {\n  address: Field,\n}\n\nimpl TokenPublicContextInterface {\n  pub fn at(address: Field) -> Self {\n      Self {\n          address,\n      }\n  }\n  \n  pub fn burn_public(\n    self,\n    context: PublicContext,\n    from: FromBurnPublicStruct,\n    amount: Field,\n    nonce: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 3];\n    serialized_args[0] = from.address;\n    serialized_args[1] = amount;\n    serialized_args[2] = nonce;\n\n    context.call_public_function(self.address, 0xb0e964d5, serialized_args)\n  }\n  \n\n  pub fn mint_private(\n    self,\n    context: PublicContext,\n    amount: Field,\n    secret_hash: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 2];\n    serialized_args[0] = amount;\n    serialized_args[1] = secret_hash;\n\n    context.call_public_function(self.address, 0x10763932, serialized_args)\n  }\n  \n\n  pub fn mint_public(\n    self,\n    context: PublicContext,\n    to: ToMintPublicStruct,\n    amount: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 2];\n    serialized_args[0] = to.address;\n    serialized_args[1] = amount;\n\n    context.call_public_function(self.address, 0x6bfd1d5b, serialized_args)\n  }\n  \n\n  pub fn set_admin(\n    self,\n    context: PublicContext,\n    new_admin: NewAdminSetAdminStruct\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 1];\n    serialized_args[0] = new_admin.address;\n\n    context.call_public_function(self.address, 0x41b90896, serialized_args)\n  }\n  \n\n  pub fn set_minter(\n    self,\n    context: PublicContext,\n    minter: MinterSetMinterStruct,\n    approve: bool\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 2];\n    serialized_args[0] = minter.address;\n    serialized_args[1] = approve as Field;\n\n    context.call_public_function(self.address, 0x7f020b80, serialized_args)\n  }\n  \n\n  pub fn shield(\n    self,\n    context: PublicContext,\n    from: FromShieldStruct,\n    amount: Field,\n    secret_hash: Field,\n    nonce: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 4];\n    serialized_args[0] = from.address;\n    serialized_args[1] = amount;\n    serialized_args[2] = secret_hash;\n    serialized_args[3] = nonce;\n\n    context.call_public_function(self.address, 0x1d24add0, serialized_args)\n  }\n  \n\n  pub fn transfer_public(\n    self,\n    context: PublicContext,\n    from: FromTransferPublicStruct,\n    to: ToTransferPublicStruct,\n    amount: Field,\n    nonce: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 4];\n    serialized_args[0] = from.address;\n    serialized_args[1] = to.address;\n    serialized_args[2] = amount;\n    serialized_args[3] = nonce;\n\n    context.call_public_function(self.address, 0x7db8f449, serialized_args)\n  }\n  \n}\n  \n  \n",
        "path": "/home/shaito/wonderland/aztec-coin-toss-pvp/src/types/token.nr"
      },
      "156": {
        "source": "/* Autogenerated file, do not edit! */\n  \nuse dep::std;\nuse dep::aztec::context::{ PrivateContext, PublicContext };\nuse dep::protocol_types::constants::RETURN_VALUES_LENGTH;\n\nstruct RequesterSubmitAnswerStruct {\n  address: Field,\n}\n\nstruct FromSubmitQuestionStruct {\n  address: Field,\n}\n\nstruct DivinityAddressSubmitQuestionStruct {\n  address: Field,\n}\n\n\n// Interface for calling PrivateOracle functions from a private context\nstruct PrivateOraclePrivateContextInterface {\n  address: Field,\n}\n\nimpl PrivateOraclePrivateContextInterface {\n  pub fn at(address: Field) -> Self {\n      Self {\n          address,\n      }\n  }\n  \n  pub fn cancel_question(\n    self,\n    context: &mut PrivateContext,\n    question: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 1];\n    serialized_args[0] = question;\n\n    context.call_private_function(self.address, 0x7d126cd4, serialized_args)\n  }\n  \n\n  pub fn consult_answer(\n    self,\n    context: &mut PrivateContext,\n    question: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 1];\n    serialized_args[0] = question;\n\n    context.call_private_function(self.address, 0x907da598, serialized_args)\n  }\n  \n\n  pub fn get_fee(\n    self,\n    context: &mut PrivateContext\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 0];\n\n    context.call_private_function(self.address, 0x64af47cf, serialized_args)\n  }\n  \n\n  pub fn initialize_payment_token(\n    self,\n    context: &mut PrivateContext,\n    payment_token: Field,\n    fee: Field\n  ) {\n    let mut serialized_args = [0; 2];\n    serialized_args[0] = payment_token;\n    serialized_args[1] = fee;\n\n    context.call_public_function(self.address, 0x233e29de, serialized_args)\n  }\n  \n\n  pub fn submit_answer(\n    self,\n    context: &mut PrivateContext,\n    question: Field,\n    requester: RequesterSubmitAnswerStruct,\n    answer: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 3];\n    serialized_args[0] = question;\n    serialized_args[1] = requester.address;\n    serialized_args[2] = answer;\n\n    context.call_private_function(self.address, 0xdc92d6e8, serialized_args)\n  }\n  \n\n  pub fn submit_question(\n    self,\n    context: &mut PrivateContext,\n    from: FromSubmitQuestionStruct,\n    question: Field,\n    divinity_address: DivinityAddressSubmitQuestionStruct,\n    nonce: Field,\n    callback: [Field;6]\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 10];\n    serialized_args[0] = from.address;\n    serialized_args[1] = question;\n    serialized_args[2] = divinity_address.address;\n    serialized_args[3] = nonce;\n    serialized_args[4] = callback[0];\n    serialized_args[5] = callback[1];\n    serialized_args[6] = callback[2];\n    serialized_args[7] = callback[3];\n    serialized_args[8] = callback[4];\n    serialized_args[9] = callback[5];\n\n    context.call_private_function(self.address, 0xb9d88bb1, serialized_args)\n  }\n  \n}\n  \n  \n\n\n// Interface for calling PrivateOracle functions from a public context\nstruct PrivateOraclePublicContextInterface {\n  address: Field,\n}\n\nimpl PrivateOraclePublicContextInterface {\n  pub fn at(address: Field) -> Self {\n      Self {\n          address,\n      }\n  }\n  \n  pub fn initialize_payment_token(\n    self,\n    context: PublicContext,\n    payment_token: Field,\n    fee: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 2];\n    serialized_args[0] = payment_token;\n    serialized_args[1] = fee;\n\n    context.call_public_function(self.address, 0x233e29de, serialized_args)\n  }\n  \n}\n  \n  \n",
        "path": "/home/shaito/wonderland/aztec-coin-toss-pvp/src/types/oracle.nr"
      },
      "157": {
        "source": "use dep::aztec::types::type_serialization::TypeSerializationInterface;\n\nmod Phase {\n    global BETTING: u120 = 1;\n    global AWAITING_ANSWER: u120 = 2;\n    global REVEAL: u120 = 3;\n    global CLAIM: u120 = 4;\n}\n\nstruct RoundData {\n    phase: u120, \n    current_phase_end: u120, \n    reveals_count: u120,\n    bettors: u120,\n    claim_amount: u120,\n}\n\nimpl RoundData {\n    pub fn new(\n        _phase: u120,\n        _current_phase_end: u120,\n        _reveals_count: u120,\n        _bettors: u120,\n        _claim_amount: u120,\n    ) -> Self {\n        Self {\n            phase: _phase,\n            current_phase_end: _current_phase_end,\n            reveals_count: _reveals_count,\n            bettors: _bettors,\n            claim_amount: _claim_amount,\n        }\n    }\n\n    pub fn add_bettor(round_data: RoundData) -> Self {\n        Self {\n            phase: round_data.phase,\n            current_phase_end: round_data.current_phase_end,\n            reveals_count: round_data.reveals_count,\n            bettors: round_data.bettors + 1,\n            claim_amount: round_data.claim_amount,\n        }\n    }\n\n    pub fn increase_reveal_count(round_data: RoundData) -> Self {\n        Self {\n            phase: round_data.phase,\n            current_phase_end: round_data.current_phase_end,\n            reveals_count: round_data.reveals_count + 1,\n            bettors: round_data.bettors,\n            claim_amount: round_data.claim_amount,\n        }\n    }\n}\n\nglobal ROUND_DATA_SERIALIZED_LEN: Field = 5;\n\nfn deserializeRoundData(fields: [Field; ROUND_DATA_SERIALIZED_LEN]) -> RoundData {\n    RoundData{phase: fields[0] as u120, current_phase_end: fields[1] as u120, reveals_count: fields[2] as u120, bettors: fields[3] as u120, claim_amount: fields[4] as u120}\n}\n\nfn serializeRoundData(value: RoundData) -> [Field; ROUND_DATA_SERIALIZED_LEN] {\n    [value.phase as Field, value.current_phase_end as Field, value.reveals_count as Field, value.bettors as Field, value.claim_amount as Field]\n}\n\nglobal RoundDataSerializationMethods = TypeSerializationInterface {\n    deserialize: deserializeRoundData,\n    serialize: serializeRoundData,\n};",
        "path": "/home/shaito/wonderland/aztec-coin-toss-pvp/src/types/round_data.nr"
      },
      "158": {
        "source": "/////////////////////////////////////////////////////////////////////\n//                             Imports                             //\n/////////////////////////////////////////////////////////////////////\n\nuse dep::aztec::{\n    context::PrivateContext,\n    log::emit_encrypted_log,\n    note::{\n        note_header::NoteHeader,\n        note_interface::NoteInterface,\n        utils::compute_note_hash_for_read_or_nullify,\n    },\n    oracle::{\n        get_public_key::get_public_key,\n        get_secret_key::get_secret_key,\n        notes::check_nullifier_exists,\n        notes::check_nullifier_exists_oracle,\n        rand::rand,\n    },\n    types::address::AztecAddress\n};\n\nuse dep::protocol_types::{\n    constants::EMPTY_NULLIFIED_COMMITMENT,\n};\n\nuse dep::std::option::Option;\n\n\n/////////////////////////////////////////////////////////////////////\n//                              Class                              //\n/////////////////////////////////////////////////////////////////////\n\n/// @notice A note that represents a given bet, of a given user\n/// @member owner The owner of the note\n/// @member round_id The id of the round this bet is placed on\n/// @member header The note header\nstruct RevealNote {\n    owner: AztecAddress,\n    round_id: Field,\n    randomness: Field,\n    header: NoteHeader\n}\n\nglobal REVEAL_NOTE_LEN: Field = 3;\n\nimpl RevealNote {\n    /////////////////////////////////////////////////////////////////////\n    //                         Public methods                          //\n    /////////////////////////////////////////////////////////////////////\n\n    /// @notice Reveal note constructor\n    /// @param _owner The owner of the note\n    /// @param _round_id The round id of the bet\n    /// @param _randomness An extra randomness field. Used for linking to other notes, identifaction and nullification.\n    pub fn new(_owner: AztecAddress, _round_id: Field, _randomness: Field) -> Self {\n        RevealNote {\n            owner: _owner,\n            round_id: _round_id,\n            randomness: _randomness,\n            header: NoteHeader::empty(),\n        }\n    }\n\n    /////////////////////////////////////////////////////////////////////\n    //                        Internal methods                         //\n    /////////////////////////////////////////////////////////////////////\n\n    /// @notice Serializes the note\n    fn serialize(self) -> [Field; REVEAL_NOTE_LEN] {\n        [self.owner.address, self.round_id, self.randomness]\n    }\n\n    /// @notice Deserializes the note\n    fn deserialize(preimage: [Field; REVEAL_NOTE_LEN]) -> Self {\n        RevealNote {\n            owner: AztecAddress::new(preimage[0]),\n            round_id: preimage[1],\n            randomness: preimage[2],\n            header: NoteHeader::empty(),\n        }\n    }\n\n    /// @notice Computes the note hash of the note\n    fn compute_note_hash(self) -> Field {\n        dep::std::hash::pedersen_hash([\n            self.owner.address,\n            self.round_id,\n            self.randomness\n        ])\n    }\n\n    /// @notice Computes the nullifier of the note\n    fn compute_nullifier(self) -> Field {\n        let note_hash_for_nullify = compute_note_hash_for_read_or_nullify(RevealNoteMethods, self);\n        let nullifier_key = self.randomness;\n\n        dep::std::hash::pedersen_hash([\n            note_hash_for_nullify,\n            nullifier_key,\n        ])\n    }\n\n    /// @notice Sets the note header\n    fn set_header(&mut self, header: NoteHeader) {\n        self.header = header;\n    }\n\n    /// @notice Emit the note creation event using the owner public key\n    fn broadcast(self, context: &mut PrivateContext, slot: Field) {\n        let encryption_pub_key = get_public_key(self.owner.address);\n        emit_encrypted_log(\n            context,\n            (*context).this_address(),\n            slot,\n            encryption_pub_key,\n            self.serialize(),\n        );\n    }\n}\n\n/////////////////////////////////////////////////////////////////////\n//                         Global methods                          //\n/////////////////////////////////////////////////////////////////////\n\nfn deserialize(preimage: [Field; REVEAL_NOTE_LEN]) -> RevealNote {\n    RevealNote::deserialize(preimage)\n}\n\nfn serialize(note: RevealNote) -> [Field; REVEAL_NOTE_LEN] {\n    note.serialize()\n}\n\nfn compute_note_hash(note: RevealNote) -> Field {\n    note.compute_note_hash()\n}\n\nfn compute_nullifier(note: RevealNote) -> Field {\n    note.compute_nullifier()\n}\n\nfn get_header(note: RevealNote) -> NoteHeader {\n    note.header\n}\n\nfn set_header(note: &mut RevealNote, header: NoteHeader) {\n    note.set_header(header)\n}\n\nfn broadcast(context: &mut PrivateContext, slot: Field, note: RevealNote) {\n    note.broadcast(context, slot);\n}\n\nglobal RevealNoteMethods = NoteInterface {\n    deserialize,\n    serialize,\n    compute_note_hash,\n    compute_nullifier,\n    get_header,\n    set_header,\n    broadcast,\n};",
        "path": "/home/shaito/wonderland/aztec-coin-toss-pvp/src/types/reveal_note.nr"
      }
    }
  }
}