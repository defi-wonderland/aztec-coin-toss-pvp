{
  "name": "CoinToss",
  "functions": [
    {
      "name": "_claim_funds",
      "functionType": "open",
      "isInternal": true,
      "parameters": [
        {
          "name": "round_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "secret_hash",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_header",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::BlockHeader",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "archive_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "_increase_bettors",
      "functionType": "open",
      "isInternal": true,
      "parameters": [
        {
          "name": "round_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_header",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::BlockHeader",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "archive_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "_increase_reveals",
      "functionType": "open",
      "isInternal": true,
      "parameters": [
        {
          "name": "round_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "user_bet",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_header",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::BlockHeader",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "archive_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "_set_result",
      "functionType": "open",
      "isInternal": true,
      "parameters": [
        {
          "name": "caller",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "round_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "answer",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_header",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::BlockHeader",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "archive_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "bet",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "bet",
          "type": {
            "kind": "boolean"
          },
          "visibility": "private"
        },
        {
          "name": "round_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "bet_randomness",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "unshield_nonce",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "claim",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "round_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "secret_hash",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "H4sIAAAAAAAA/+ydD5xVY/7H751pZppSFJVSmUIUcp+ZaWYKqUEIoVQqxYzuTSVJkqJSCZWKEEIIIYSsdrW0WP//7WLZlZXVLktWVruyWup3vjlne7pd08/O5zuez85zXq/TvZ175jnfP+/Pc57z3HPP95b2sdjXe8f+s8TD127ha6J6i8kJ2sjJ0G5RoqS4OFlamDRFpiJR2LmyrFOiuFNlSZkpM53KOg0tLCsqSpYVl5V2ruxcmuhsiouSJtWpc1EqbDgHZ2NCw+/coI1cBb9zHfc7L2gjT8HvPLDfP8R7de1sDrQzHsayIGyvWbBuDtY9w9fmtez1oGBtEeZM4rJbGJcWDti1V7BmWzZlWrqFr4nqLZV6bZclFNs2im0XKrZdpNh2sWLbnRTbLhEN5scyL5hjJIxSu/9hHH3uiyvYSBJToxXTZjHnY0rfLrDtwhroF3wefbv/U+2StK04ftO0u1NK0+7ofBf/zz+xWMtgbRWsrYNVplYKgrVNsLYN1n2Cdd9g3S9Y2wXr/sF6QLAG0zCxDsF6YOz764mDg7VjsB4iNgarBF8GuTIYlUGjDO5KgrU0WMuCtXOwdgnWQ4P1sGA9PFi7BusRoa/dg7U8WI8M1qOC9ehg7RGsxwTrscF6XLD2DNbjg/WEYD0xWHsF60nBenKwnhKsvYO1T7CeGqx9g7VfsPYP1tOCdUCwDgzWQcF6erAODtYhwXpGsJ4ZrBXBKhcuZwXr0GBNBqskZliwnh2sw4N1RLCODNZzgnVUsJ4brKOD9bxgHROs5wfr2GC9IFjHBeuFwTo+WC8K1gnBOjFYLw7WS4J1UrBODtYpwXppsE4N1mnBOj1YLwvWGcF6ebBeEaxXBuvMYJ0VrLOD9apgnROsc4N1XrBeHazXBOv8YL02WK8L1uuDdUGw3hCsNwbrTcG6MFhvDtZbgvXWYF0UrLcF6+3BekewLg7WO4P1rmC9O1iXBOs9wXpvsN4XrEuD9f5gfSBYHwzWZcH6ULA+HKyPBOvyYH00WH8WrI8F64pg/Xmw/iJYHw/WlcH6y2B9IlifDNZVwfqrYH0qWJ8O1meC9dfB+mywPheszwfrC8H6YrC+FKwvB+srwfpqsL4WrK8H62+C9bfB+kawvhmsbwXr74L17WB9J1h/H6x/CNZ3g3V1sL4XrH8M1veDdU2wfhCsfwrWD4N1bbD+OVj/EqwfBevHwfrXYP0kWD8N1nXB+lmw/i1YPw/W9cH6RbD+PVi/DNYNwfqPYP1nsH4VrBuD9etg/VewfhOsm4L138H6bbB+F/v+2nxLsIou48GaFazZwVonWHOCNTdY84K1brDmB2u9YK0frLsEa4NgbRisuwbrbsHaKFgbB+vuwbpHsDYJ1qbB2ixY9wzW5sHaIlj3CtbEHrGti4yD0ucDZFuj8H3c2tY4fJ9lbds9fJ9tbQubjtWxtjUJ3+dY25qG73Otbc3C93nWtj3D93Wt/ZuH77uFr4nqLUaO08I6ZvS6V/i+nnXslgrHbhW2Vd86duvw/S7WtmgavIG1rSB839Da1iZ8v6tldwxqtynMNHecqOYitkd87Wb5E/HVyNoW8dXY2hbxtbu1LfJ9D2tbxFcTa1vEV1NrW8RCM2tbxMKe1rYob82tbVHebK6ivO1lbYvy1tLaFuWtlbUtikdra1sUj72tbVE8CqxtUTwiLiRO7a3PoyWKvdgkcYti1i18TVRv2Tr/UN86Xjfr/9GxtI7bMO24DdOOWz9DHLRsiaXZEqvClsYO2bKrQ7bUc8iW+g7ZkueQLXUcsqWRQ7Y0cMiWhg7Zku+QLbkO2ZLtkC27O2TLbg7ZsotDttR1yJYch2yJ/8S25Fs2xKxt0ef1rG1N0uy3r5nta8Lo2sS+JoyuTexrwujaZFdrW1YG+6K+xr42is7j9rVRlFf72ijqM+1ro2g8Eh1f/q7jbts+j65x7HmF6BrHnleIrnHseYUCq81oW3SNY88rtA3f2/MK+4Tv61rb9rXeR6/7he/t3ES+2Ndnkc/29VkUG/v6LIphgbUtinUba1uUk7bWtuhach9rW3QtadseXUvul8EPWwPR33QLXxPVW7ZqwD5ON+v/0bHqWTbs54AtOQ7ZUtchW3ZxyJbdHLJld4dsyXbIllyHbMl3yJaGDtnSwCFbGjlkSx2HbMlzyJb6DtlSzyFbdnXIlsYO2ZJVQ7ZE4+qo3WZptmgdt0nacZvU0HFbpB23RQ0dt2XacVvW0HF9fmvmuD6/NXNcl/PbFnlc8/13+PvGtl+qmhtra9myD9KW8DdubbBtbv19WwG4TWnD+onjf+IX2V7f+rzAitfe4HjFrWNG7Ub/31vvuFv9b70T/1tnsKN1Dfpv2+dt9bZ6W39aWwu8rSq2el69rd5Wb2uBt1XFVs+rt9Xb6m0t8Laq2Op59bZ6W72tBd5WFVs9r95Wb6u3tcDbqmKr59Xb6m31thZ4W1Vs9bx6W72t3tYCb6uKrZ5Xb6u31dta4G1VsdXz6m31tnpbC7ytKrZ6Xr2t3lZva4G3VcVWz6u31dvqbS3wtqrY6nn1tnpbva0F3lYVWz2v3lZvq7e1wNuqYqvn1dvqbfW2FnhbVWz1vHpbva3e1gJvq4qtnldvq7fV21rgbVWx1fPqbfW2elsLvK0qtnpeva3eVm9rgbdVxVbPq7fV2+ptLfC2qtjqefW2elu9rQXeVhVbPa/eVm+rt7XA26piq+fV2+pt9bYWeFtVbPW8elu9rd7WAm+riq2eV2+rt9XbWuBtVbHV8+pt9bZ6Wwu8rSq2el69rd5Wb2uBt1XFVs+rt9Xb6m0t8Laq2Op59bZ6W72tBd5WFVs9r95Wb6u3tcDbqmKr59Xb6m31thZ4W1Vs9bx6W72t3tYCb6uKrZ5Xb6u31dta8BPbKsdthTxuYUVhftpxZYmn/b+b9b6VYgykzXbYNhPSxv6W/ZGv0XHqW5/bLO4P9i1uHTNqN/q/bZ+31dvqbfW2elu9rd5Wb6u31dvqbfW2elu9rd5Wb6u31dvqbfW2elu9rd5Wb6u31dvqbfW2elu9rd5Wb6u31dvqbfW2elu9rd5Wb6u31dvqbfW2elu9rd5Wb6u31dvqbfW2elu9rd5Wb6u31dvqbfW2elu9rd5Wb6u31dvqbfW2elu9rd5Wb6u31dvqbfW2elu9rd5Wb6u31dvqbfW2elu9rd5Wb6u31dvqbfW2elu9rd5Wb6u31dvqbfW2elu9rd5Wb6u31dvqbfW2elu9rd5Wb6u31dvqbfW2elu9rd5Wb6u31dvqbfW2elu9rd5Wb6u31dvqbfW2elu9rd5Wb6u31dvqbfW2elu9rd5Wb6u31dvqbfW2elu9rd5Wb6u31dvqbfW2elu9rd5Wb6u31dvqbfW2elu9rd5Wb6u31dvqbfW2elu9rd5Wb6u31dvqbfW2elu9rd5Wb6u31dvqbfW2elu9rd5Wb6u31dvqbfW2elu9rd5Wb6u31dvqbfW2elu9rd5Wb6u31dvqbfW2elu9rd5Wb6u31dvqbfW2elu9rd5Wb6u31dvqbfW2elu9rd5Wb6u31dvqbfW2elu9rd5Wb6u31dvqbfW2elu9rd5Wb6u3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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "compute_note_hash_and_nullifier",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [
        {
          "name": "contract_address",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "nonce",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "storage_slot",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "preimage",
          "type": {
            "kind": "array",
            "length": 4,
            "type": {
              "kind": "field"
            }
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "array",
          "length": 4,
          "type": {
            "kind": "field"
          }
        }
      ],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "constructor",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "divinity",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "private_oracle",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "token",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "bet_amount",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "phase_length",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "H4sIAAAAAAAA/+2dB3RcxRWGr1bdxh3bcgGMwYBtyjZZu4giYbBoMgYDDh1ptWuEZclFAkzvvZMKJCGkd9IbSQjpnfRGEkJ6J71iMv/xnXh2tTK7R3f27HA159xzZel6dr6p/3v73kxLDdEcYzbZHzvYR8eXYvUmj/oi+SaiK5LJbFs8G0vEeqLxdG+qNZps7V2RiqViranWvngqkcimkqm2dG+6LZqOJRPZWK41nchxxvVyZYz64G4weTR44G6ocu5Gk0ejB+5GYe6x+vt4y7lQsJw1XJeLOL+5xrYba2E/j/189gvYL3yB+gON7cFthnqZzvWyRxWUa0/KT9L9ai8S61dpW3+2jHsxB+aWRU791vHfn6/fIe3t/L9IQb57O3GLjdWyjZU6BDnraNftEh1fis0l+XlJuowtAZRxXgBlnE+VWYOi40uxxSS7Btm0j7FZ/HMzjR7D+F1dARPmlHphvmbOFynifA7Jfk6ymH6LjjM1O2WuLVKXdUXqst75XX0BL/49xfk7FdTLVI5tEG6Dwrm1w/m3/awmYzP458Gh4f7ctpVbsj3D2b7VQ8NZt2M1FFSIC1BTpHIsuIVuLMjHreRGx7uf+f9SS9SGm6f0aN6H/ClKqxjtSm5XeLvi25X+hawo96XRinLfKijXEtrR8W1/grednpzfIXWwj44vxRaQzlVYo+IKQblKqkJ38t/P2DT+2V0sbMJCUivM4kGhtPpWKBGnjmx9WF9POxXHrpRHnXA9uoLA5lsoEKA8rCra1JPZ0Lll/cjG7ODwVrcTFErVGqfwxSSXK80K4yqmLiLCeS8huXsU+8mVKzrWPQLpGSZC8rOgZB9oy+QSsWQs47MOlpD8LAtvR+D+xg4wttTYMmPLaYfCOcjYwcYOwecaQ0ePox8am83/t9TrTHegerwmjFbbNSH8ZOfvVFAHdhZulC1zn1vfVNAWhXVOlH+JJn0titl+HueVHdw8kh3JrhnpHejPrBoZzAz3Dw2u7BkYKCajbQctdt1Z+Hu3EZr4Z3eVaHYA7e9sXk3O79wGthXjbeWopdHahkh+BllK1T2Lcoq7dZFk30o7G9KVAGjw54rUWY3zc4RjIruIqRkjn7FGq7fOYOEA/mxBYaQ+o5UrVPrrj1by08GkRf5SAeZsbkdKBlB/0nJUknmFk1cslYjH2xKIS/WZj+nLxFPxeF9vMpqJ9mTi2XQyls4l48lEpi/Ta/LsieWiuZ5MOpfaUS73RoybpMfPCrm88i5422jnClZshfMga/IuW4rVn9fJzlfjtHnIN0Vynd4Xd0q+jYqWVWKiS3nIN02yAxODMM2+UiptGflZBIT7RZ5KO5R9OylTaQD3pdLauUKlB0k7+elg0iptmQCzVWmHBlB/0ipNkvkwCk+lHUayi4FNh9OEShNpnMM95HsEVbdKA/cR8m3kRaW1c1ml8z2SZAcmBuGRVFmVtpz8LALC/SJPpdk8O0mZSkN+vlRaJ1eo9CDpJD8dTFqlLRdgtiqtI4D6k1ZpksxHUXgq7SiSXQxsWkkTKk2kcVZ6yPdoqm6VBu6j5dvIi0rr5LJK53sMyQ5MDMJjqLIqLUp+FgHhfpGn0lax7yJlKg3gvlRaF1eo9CDpIj8dTFqlRQWYrUpbFUD9Sas0SeZjKTyVdizJLgY2HUcTKk2kcY7zkO/xVN0qDdzHy7eRF5XWxWWVzvcEkh2YGIQnUGVVWoz8LALC/SJPpZ3IvpuUqTSA+1Jp3Vyh0oOkm/x0MGmVFhNgtirtxADqT1qlSTKvpvBU2mqSXQxsOokmVJpI45zkId81VN0qDdxr5NvIi0rr5rJK53syyQ5MDMKTqbIqLU5+FgHhfpGn0k5hv5aUqTSA+1Jpa7lCpQfJWvLTwaRVWlyA2aq0UwKoP2mVJsl8KoWn0k4l2cXAptNoQqWJNM5pHvI9napbpYH7dPk28qLS1nJZpfNdR7IDE4NwHY1WZ9ITakSwDvYnP4uIdFsdIFDOYm/tS7eN5M4NiQq1TXR8KdYVSDm7AylnpYTdePtnRJD5QIXMB1EYc++LSG7uRdncXWyRN/ZWa2Xfzr6T/SRjZzCT3cXatut2xx/M/hDa9R5u2PnwTCc/K5bHiscV/Vllxp9dZvw5ZcafW2b8eWXGn19mfE+Z8b1lxmfKjO8rMz5bZnyuzPj1ZcZfUGZ8f5nxFzrxkTHisTnKhhLjBkqM21hi3GCJcUMlxm0qMW5ziXFbSozbWmLccIlxIyXGXVRi3MUlxl1SYty2EuMudeLWcdyZ/PclVNpenGexP5v9OezPZX8e+/PZ97DvZZ9h38c+yz7Hfj37C9j3s7+Q/Qb2A+w3sh9kP8R+E/vN7Lew38p+mP0I+4vYX8z+Evbb2F9aYv1M+Mp4vA5zGY2ef60uOYP9ZexnGruc8pO0XruCRHQl7p16vTFcI8h8JfnR0tV87+aqQJhrBZmvDoS5TpD5mkCY6wWZrw2EuUGQ+bpAmBsFma8PhHlPQeYbAmFeKMh8o0LmmxQy36yQ+RaFzLcqZL5NIfPtCpnvUMh8p0LmuxQy362Q+R6FzPcqZL5PIfOLFTK/RCHzSxUyv0wh88sVMr9CIfP9CpkfUMj8oELmVypkfpVC5lcrZH5IIfNrFDI/rJD5tQqZX6eQ+fUKmd+gkPmNCpnfpJD5zQqZ36KQ+a0Kmd+mkPntCpnfoZD5nQqZH1HI/C6FzO9WyPwehczvVcj8PoXM71fI/AGFzB9UyPwhhcwfVsj8EYXMjypk/qhC5o8pZP64QubHFDJ/QiHz4wqZP6mQ+VMKmT+tkPkzCpk/q5D5cwqZPx8I82JB5i8obOcvKmT+kkLmLytk/opC5q8qZH5CIfPXFDJ/XSHzNxQyf1Mh87cUMn9bIfN3FDJ/VyHz9wJhXiTI/H2F7fwDhcxPKmT+oULmHylk/rFC5qcUMv9EIfPTCpl/qpD5ZwqZf66Q+RcKmX+pkPlXCpl/HQjzFYLMv1HYzr9VyPw7hcy/V8j8B4XMf1TI/IxC5j8pZP6zQua/KGT+q0Lmvylk/rtC5n8oZP6nQuZ/KWT+t0Lm/yhk/q9C5mcDYb5ckHm7wnZ+TiEzDkvXxlyjkDmikLlWIXOdQuZ6hcwNCpkbFTI3KWRuDoS5SZB5UiDMzYLMkwNhniTIvFsgzJMFmacEwrybIPPUQJinCDJPC4R5qiDz9ECYpwkyzwiEebog88xAmGcIMs8KhHmmIPPugTDPEmSeHQjz7oLMcwJhni3IPDcQ5jmCzC2CzAs4nxpmrjVWZ6zeWIOxRmO4JsQ1Eq4ZoKGhKaGxoDmwBmNNwhyNOQtjGH0abQzmucZajM0zNt/YAqeOH2B/pbGrjF1t7Bpj1xq7ztj1xm4wdqOxm4zdbOwWY7cau83Y7cbuMHansbuM3W3sHmP3GrvPGM69xznwOBcd54Tj3GycI30/f/aDxnAOLc5lxTmlDxnDOZYPG8M5hzj3D+fg4Vw4nJOGc8NwjhbOlcI5Szh3COfw4FwanNPyiDGc44FzLXDOA849wDkA2Bcf+8Rj33TsI459tbHP9KPGsA8x9uXFPrWPGcM+po8bwz6X2PcR+yBiX0Dsk4d947CPGvYVwz5b2HcK+zBhXyLs0/OEMezjgn1NsM8H9r3APhDYFwH7BOC9ebxHjveq8Z7xk8bwHirey8R7ik8Zw3tsTxvDe0547wfvweC9ELwngfcG8Bw9nivHc9Z47hjP4eK5VDyn+YwxPMeH59rwnBeee8JzQHguBs+J4LkJPEeA79XxPTO+d8X3kPheDt9ToRPiewzc18d9btz3xX1Q3BfEfTLcN8J9FNxXwHU2rjtxHYbrEuh06FboOOgarPNY97AOYF7EPIFxY9P/ABZsMeo+/QAA",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "end_bet_phase",
      "functionType": "open",
      "isInternal": true,
      "parameters": [
        {
          "name": "round_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_header",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::BlockHeader",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "archive_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "end_reveal_phase",
      "functionType": "open",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_header",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::BlockHeader",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "archive_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_bet_amount_unconstrained",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "field"
        }
      ],
      "bytecode": "H4sIAAAAAAAA/8VUSQ7CMAx0QhYCEl/gzqmID/QN/KASFUck4P+CQEYdrKqXpsKXuE4y44ztGhEx8rWVDGaUfyh+oHhb1mamBeKrhenfGL5gJcrZlnVX3mLr8p62IxoG0rYSz5Hrw7hCXEl+64jYSmmRyMde1m5P+37kThjh4/uIORl00HdZI6/e0syzj0bM09I3uDYqhyVzgQ7AdSqXf/LGurxNxlgTL/oiku7gx7lEPvePVeeiLDNTQYYeqIXJ/Q+bmt0lezDrh//T43m7d9f+3HcXQ2k5laKl1NjnkUdJHcWmyhgpBhwurZan2vs1rlFrthcEivocEAcAAA==",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_config_unconstrained",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "types::config_note::ConfigNote",
          "fields": [
            {
              "name": "divinity",
              "type": {
                "kind": "struct",
                "path": "aztec::types::address::AztecAddress",
                "fields": [
                  {
                    "name": "address",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "private_oracle",
              "type": {
                "kind": "struct",
                "path": "aztec::types::address::AztecAddress",
                "fields": [
                  {
                    "name": "address",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "token",
              "type": {
                "kind": "struct",
                "path": "aztec::types::address::AztecAddress",
                "fields": [
                  {
                    "name": "address",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "bet_amount",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "header",
              "type": {
                "kind": "struct",
                "path": "aztec::note::note_header::NoteHeader",
                "fields": [
                  {
                    "name": "contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nonce",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_slot",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_transient",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_divinity_address_unconstrained",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::types::address::AztecAddress",
          "fields": [
            {
              "name": "address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "H4sIAAAAAAAA/8VUuw7CMAx0Qh4EJH6BnakM7P0G/qASFSMS8P+CQE49rKpLU+ElrpPcOWe7RkSMfG0lgxnlH4ofKN6WtZlpgfhqYfo3hi9YiXK2Zd2Vt9i6vKftiIaBtK3Ec+T6MK4QV5LfOiK2Ulok8rGXtdvTvh+5E0b4+D5iTgYd9F3WyKu3NPPsoxHztPQNro3KYclcoANwncrln7yxLm+TMdbEi76IpDv4cS6Rz/1j1bkoy8xUkKEHamFy/8OmZnfJHsz64f/0eN7u3bU/993FUFpOpWgpNfZ55FFSR7GpMkaKAYdLq+Wp9n6Na9Sa7QUdXUc/EAcAAA==",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_oracle_address_unconstrained",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::types::address::AztecAddress",
          "fields": [
            {
              "name": "address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "H4sIAAAAAAAA/8VUSQ7CMAx0QhYCEl/gzqlIPKBv4AeVqDgiAf8XBDLqYFW9NBW+xHWSGWds14iIka+tZDCj/EPxA8XbsjYzLRBfLUz/xvAFK1HOtqy78hZbl/e0HdEwkLaVeI5cH8YV4kryW0fEVkqLRD72snZ72vcjd8IIH99HzMmgg77LGnn1lmaefTRinpa+wbVROSyZC3QArlO5/JM31uVtMsaaeNEXkXQHP84l8rl/rDoXZZmZCjL0QC1M7n/Y1Owu2YNZP/yfHs/bvbv25767GErLqRQtpcY+jzxK6ig2VcZIMeBwabU81d6vcY1as70ARoe13RAHAAA=",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_phase_length_unconstrained",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "field"
        }
      ],
      "bytecode": "H4sIAAAAAAAA/8VUSQ7CMAx0QhYCEl/gzqnwgr6BH1Si4ogE/F8QyKiDVfXSVPgS10lmnLFdIyJGvraSwYzyD8UPFG/L2sy0QHy1MP0bwxesRDnbsu7KW2xd3tN2RMNA2lbiOXJ9GFeIK8lvHRFbKS0S+djL2u1p34/cCSN8fB8xJ4MO+i5r5NVbmnn20Yh5WvoG10blsGQu0AG4TuXyT95Yl7fJGGviRV9E0h38OJfI5/6x6lyUZWYqyNADtTC5/2FTs7tkD2b98H96PG/37tqf++5iKC2nUrSUGvs88iipo9hUGSPFgMOl1fJUe7/GNWrN9gJfUAj+EAcAAA==",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_result",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [
        {
          "name": "round_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "boolean"
        }
      ],
      "bytecode": "H4sIAAAAAAAA/81XzU7DMAxO+t/9/3AnTzC1u3DhUO6c4AkqbXDZqLQW8fosmy2+ZRVCmstmqY1rN/4+22mUekoprY7ig47CtoLG7DLJtVysDPl6++uZ9JSeUSLQCyH8SL4+GXLnMdxfMeSmHP+I8gtluSwtlq9OxV0jBegh1DqQ5ZJH6qeHQjEP/YtlYz7YGAnUxIeaWOmDPwZfIlwvrc7XPD8jv79y9a7Mtav+p7IxlwPizLVMgb+bT184HxujR7ECwOoD5rCD3g0olqaLMXqAO+oAl3FCwmUejOXDO4bGIdTD7UcXtUEpQGcs5KKvzCVV5/t7Cv4EbJ4z1/bgCfwT0j2wTUn3W2JPwDYmfdoyF2s0cXLJLpNDjRCngGfG6gGH6Q1wSf6JC/eE444dLtfEncniHvbROeDyGp1B3Rl/DjzuhHloh4cGXMZKQZ+DzXPei4mjL8uxi3NZbvkH6lR+278iGIXPwLn9vniPrptqV76vX9blSgOtwKGIvx6o47bHR78AbPwph2Dj+Xj85zh4jDz7dSuE8sdEVUuibf57Gh9pfD3WzdSbqjGZ+djfy82m+lqvFgZ9tdl+1o2pm3LXmLddtTX54htCyIFWpA4AAA==",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_reveal_notes_unconstrained",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [
        {
          "name": "start_offset",
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 32
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "array",
          "length": 10,
          "type": {
            "kind": "struct",
            "path": "std::option::Option",
            "fields": [
              {
                "name": "_is_some",
                "type": {
                  "kind": "boolean"
                }
              },
              {
                "name": "_value",
                "type": {
                  "kind": "struct",
                  "path": "types::reveal_note::RevealNote",
                  "fields": [
                    {
                      "name": "owner",
                      "type": {
                        "kind": "struct",
                        "path": "aztec::types::address::AztecAddress",
                        "fields": [
                          {
                            "name": "address",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "round_id",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "randomness",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "header",
                      "type": {
                        "kind": "struct",
                        "path": "aztec::note::note_header::NoteHeader",
                        "fields": [
                          {
                            "name": "contract_address",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "nonce",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "storage_slot",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "is_transient",
                            "type": {
                              "kind": "boolean"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_round_data",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [
        {
          "name": "round_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "types::round_data::RoundData",
          "fields": [
            {
              "name": "phase",
              "type": {
                "kind": "integer",
                "sign": "unsigned",
                "width": 120
              }
            },
            {
              "name": "current_phase_end",
              "type": {
                "kind": "integer",
                "sign": "unsigned",
                "width": 120
              }
            },
            {
              "name": "reveals_count",
              "type": {
                "kind": "integer",
                "sign": "unsigned",
                "width": 120
              }
            },
            {
              "name": "bettors",
              "type": {
                "kind": "integer",
                "sign": "unsigned",
                "width": 120
              }
            },
            {
              "name": "claim_amount",
              "type": {
                "kind": "integer",
                "sign": "unsigned",
                "width": 120
              }
            }
          ]
        }
      ],
      "bytecode": "H4sIAAAAAAAA/82Y3W7aQBCF19iYv5BASEhISHB+riNDG6kXvfAztE9gKbQ3pEjYVfv4jZ0d9evGrSoxDhkJdjxr5pwzu2a9GxpjPPNsPnyaxBLbxtvZ3NPLFTfBswEdhQW2lXvCp8/K+h3cb9BvdLXGoX79YnJvQGMP2tyadMyf4+zWIEDMR06JBU6N9q3f1NW2IL6YOycT+BzbQJfLPDS/9SrlLOdDSzfnhyJHGzXxUZPCeuhvoa+tXC/PvHyG5Jr8/pdrY8dc6xr/jm7OxZ7lzOfa/EVPT1lPkaNrcwXA6gGzX8PY7dlcnv0IRhe4+zXgCk7T4goPwfJxz61t+6iHOx511IaWwBcscvF2zIXrkkGs79SKaxXHIEX/wPpc84bW9ytyDxA7sP6w4res0cDREm9nZY2Ik+BasLrgMHwDXNqvxEXGRPIeOFx2iXuoi1v+j46AK3P0EHUX/BF4HCnz8BweP4F7BNxj5boXOcYV+o+hX/DH4HGiy6PUP3b0C+4JcE91cRdFjkmF/lPoF/wJeJzp8ij1Txz9gnsG3HNd3HdFjmmF/nPoF/wpeFzo8ij1Tx39gnsB3Etd3PdFjlmF/kvoF/wZeES6PEr9M0e/4ApWB/4IsSvrjxG7tv4EsRvrTxG7dbRxvY8Qk3X8CjHZ910jJvvCG8TkfViwWjYmORPbxtvZfQ37hnvqFPvX+1WIVnmPPi/Wf3mHzPL1Jv26/LRMHzzQco9eeNRCn69lsjXlUUTbycNp0UJM8nCb++IoK1HST6GmQqhvRRQxnv/wfpmXH237+bmOUbZa51EcfXv6Tler9Y/lw13Evix6/J7lUZanmzz6slk/RvO7X48KJpXEEwAA",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_round_id",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "field"
        }
      ],
      "bytecode": "H4sIAAAAAAAA/8VUSQ7CMAx00iwEJL7AnVP5Qd/ADypRcUQC/i8IZNTBqnppKnyJ6yQzztiuEREjX2tkNKP8Y/EDxbuytgstEF8tTP/G8AUrUc62rPvyFluX97Sb0DCQtrV4uD6MK8SV5LeOiDVKi0Q+9rJ2B9r3E3fCBB/fR8zJqIO+yxp59ZZ2mX00Yp6OvsG1VTmsmQt0AK5TufyTN9blbTPGhnjRF5F0Bz/OJfK5f6w6F2WdmQoy9kAtTO5/2NzsrtmDWT/8nx7P272/DuehvxhKy6kULaXGPo88SuooNlfGSDHgcGm1PNXer3GNWrO9APM4bgIQBwAA",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_token_address_unconstrained",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::types::address::AztecAddress",
          "fields": [
            {
              "name": "address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "H4sIAAAAAAAA/8VUuw7CMAx0Qh4EJH6BnakszP0G/qASFSMS8P+CQE49rKpLU+ElrpPcOWe7RkSMfG0lgxnlH4ofKN6WtZlpgfhqYfo3hi9YiXK2Zd2Vt9i6vKftiIaBtK3Ec+T6MK4QV5LfOiK2Ulok8rGXtdvTvh+5E0b4+D5iTgYd9F3WyKu3NPPsoxHztPQNro3KYclcoANwncrln7yxLm+TMdbEi76IpDv4cS6Rz/1j1bkoy8xUkKEHamFy/8OmZnfJHsz64f/0eN7u3bU/993FUFpOpWgpNfZ55FFSR7GpMkaKAYdLq+Wp9n6Na9Sa7QWxNSHDEAcAAA==",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "get_user_bets_unconstrained",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [
        {
          "name": "start_offset",
          "type": {
            "kind": "integer",
            "sign": "unsigned",
            "width": 32
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "array",
          "length": 10,
          "type": {
            "kind": "struct",
            "path": "std::option::Option",
            "fields": [
              {
                "name": "_is_some",
                "type": {
                  "kind": "boolean"
                }
              },
              {
                "name": "_value",
                "type": {
                  "kind": "struct",
                  "path": "types::bet_note::BetNote",
                  "fields": [
                    {
                      "name": "owner",
                      "type": {
                        "kind": "struct",
                        "path": "aztec::types::address::AztecAddress",
                        "fields": [
                          {
                            "name": "address",
                            "type": {
                              "kind": "field"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "name": "round_id",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "bet",
                      "type": {
                        "kind": "boolean"
                      }
                    },
                    {
                      "name": "randomness",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "header",
                      "type": {
                        "kind": "struct",
                        "path": "aztec::note::note_header::NoteHeader",
                        "fields": [
                          {
                            "name": "contract_address",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "nonce",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "storage_slot",
                            "type": {
                              "kind": "field"
                            }
                          },
                          {
                            "name": "is_transient",
                            "type": {
                              "kind": "boolean"
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "initialize",
      "functionType": "open",
      "isInternal": false,
      "parameters": [
        {
          "name": "phase_length",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "bet_amount",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "oracle_address",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "divinity_address",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        },
        {
          "name": "token_address",
          "type": {
            "kind": "struct",
            "path": "aztec::types::address::AztecAddress",
            "fields": [
              {
                "name": "address",
                "type": {
                  "kind": "field"
                }
              }
            ]
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_header",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::BlockHeader",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "archive_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "is_round_randomness_nullified",
      "functionType": "unconstrained",
      "isInternal": false,
      "parameters": [
        {
          "name": "round_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "randomness",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [
        {
          "kind": "boolean"
        }
      ],
      "bytecode": "H4sIAAAAAAAA/82XS2rDMBCGRw87ftFV79CtkxNo02W76RFCSk2zalro8RMlGvhRJhDICHvAyNJYo29+yZLtiMjQxdzpsnRt7A+pHB+ztdGLNZbktIqcBjijzh/pvhU0b9MzmFMN/qDEVOtrNmI+VsiHyyq1E5TY5+l09UJ7ZPa6zGucG4xLMBayuAWxmJlZWmAgaGM/roEq3Ttos0I8XCNcvtwZ2wvPoUZ1lsv4mJ01wnEC1HmsDhj8Aljcglik+Wd/BW0267sqw73BdUPAjxbgvoayUtawTnkqxjyflw3we9AzWg9+1LxRzs3AmByX68h3L6ubmbXEXMWYrW7MzZCY8X0jIZ9emIPI0xXQljJt2TqBxczMcuu86zKtcM9iX9wf3sDPeVkhTi88h7kPBXLHcQLUB8jDZHxzsjSCVujnNpv1XaW+z6m+/dptv9//9vvpc9r9vP5Ph99D/r3OLGy4N2rv+zEGv5+err+H8Iz0Qp54RuZrVfXniEXBHxj8mWQ7AtJRWaxlDgAA",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "oracle_callback",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "answer",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "data",
          "type": {
            "kind": "array",
            "length": 5,
            "type": {
              "kind": "field"
            }
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "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",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "reveal",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "round_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "user_randomness",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "roll",
      "functionType": "secret",
      "isInternal": false,
      "parameters": [
        {
          "name": "round_id",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        },
        {
          "name": "oracle_nonce",
          "type": {
            "kind": "field"
          },
          "visibility": "private"
        }
      ],
      "returnTypes": [],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    },
    {
      "name": "start_next_round",
      "functionType": "open",
      "isInternal": false,
      "parameters": [],
      "returnTypes": [
        {
          "kind": "struct",
          "path": "aztec::abi::PublicCircuitPublicInputs",
          "fields": [
            {
              "name": "call_context",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::CallContext",
                "fields": [
                  {
                    "name": "msg_sender",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "storage_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "portal_contract_address",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "function_selector",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "is_delegate_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_static_call",
                    "type": {
                      "kind": "boolean"
                    }
                  },
                  {
                    "name": "is_contract_deployment",
                    "type": {
                      "kind": "boolean"
                    }
                  }
                ]
              }
            },
            {
              "name": "args_hash",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "return_values",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "contract_storage_update_requests",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageUpdateRequest",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "old_value",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "new_value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "contract_storage_read",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "struct",
                  "path": "aztec::abi::ContractStorageRead",
                  "fields": [
                    {
                      "name": "storage_slot",
                      "type": {
                        "kind": "field"
                      }
                    },
                    {
                      "name": "value",
                      "type": {
                        "kind": "field"
                      }
                    }
                  ]
                }
              }
            },
            {
              "name": "public_call_stack",
              "type": {
                "kind": "array",
                "length": 4,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_commitments",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_nullifiers",
              "type": {
                "kind": "array",
                "length": 16,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "new_l2_to_l1_msgs",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_logs_hash",
              "type": {
                "kind": "array",
                "length": 2,
                "type": {
                  "kind": "field"
                }
              }
            },
            {
              "name": "unencrypted_log_preimages_length",
              "type": {
                "kind": "field"
              }
            },
            {
              "name": "block_header",
              "type": {
                "kind": "struct",
                "path": "aztec::abi::BlockHeader",
                "fields": [
                  {
                    "name": "note_hash_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "nullifier_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "contract_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "l1_to_l2_messages_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "archive_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "public_data_tree_root",
                    "type": {
                      "kind": "field"
                    }
                  },
                  {
                    "name": "global_variables_hash",
                    "type": {
                      "kind": "field"
                    }
                  }
                ]
              }
            },
            {
              "name": "prover_address",
              "type": {
                "kind": "field"
              }
            }
          ]
        }
      ],
      "bytecode": "",
      "verificationKey": "0000000200000800000000740000000f00000003515f3109623eb3c25aa5b16a1a79fd558bac7a7ce62c4560a8c537c77ce80dd339128d1d37b6582ee9e6df9567efb64313471dfa18f520f9ce53161b50dbf7731bc5f900000003515f322bc4cce83a486a92c92fd59bd84e0f92595baa639fc2ed86b00ffa0dfded2a092a669a3bdb7a273a015eda494457cc7ed5236f26cee330c290d45a33b9daa94800000003515f332729426c008c085a81bd34d8ef12dd31e80130339ef99d50013a89e4558eee6d0fa4ffe2ee7b7b62eb92608b2251ac31396a718f9b34978888789042b790a30100000003515f342be6b6824a913eb7a57b03cb1ee7bfb4de02f2f65fe8a4e97baa7766ddb353a82a8a25c49dc63778cd9fe96173f12a2bc77f3682f4c4448f98f1df82c75234a100000003515f351f85760d6ab567465aadc2f180af9eae3800e6958fec96aef53fd8a7b195d7c000c6267a0dd5cfc22b3fe804f53e266069c0e36f51885baec1e7e67650c62e170000000c515f41524954484d455449430d9d0f8ece2aa12012fa21e6e5c859e97bd5704e5c122064a66051294bc5e04213f61f54a0ebdf6fee4d4a6ecf693478191de0c2899bcd8e86a636c8d3eff43400000003515f43224a99d02c86336737c8dd5b746c40d2be6aead8393889a76a18d664029096e90f7fe81adcc92a74350eada9622ac453f49ebac24a066a1f83b394df54dfa0130000000c515f46495845445f42415345060e8a013ed289c2f9fd7473b04f6594b138ddb4b4cf6b901622a14088f04b8d2c83ff74fce56e3d5573b99c7b26d85d5046ce0c6559506acb7a675e7713eb3a00000007515f4c4f4749430721a91cb8da4b917e054f72147e1760cfe0ef3d45090ac0f4961d84ec1996961a25e787b26bd8b50b1a99450f77a424a83513c2b33af268cd253b0587ff50c700000003515f4d05dbd8623b8652511e1eb38d38887a69eceb082f807514f09e127237c5213b401b9325b48c6c225968002318095f89d0ef9cf629b2b7f0172e03bc39aacf6ed800000007515f52414e474504b57a3805e41df328f5ca9aefa40fad5917391543b7b65c6476e60b8f72e9ad07c92f3b3e11c8feae96dedc4b14a6226ef3201244f37cfc1ee5b96781f48d2b000000075349474d415f3125001d1954a18571eaa007144c5a567bb0d2be4def08a8be918b8c05e3b27d312c59ed41e09e144eab5de77ca89a2fd783be702a47c951d3112e3de02ce6e47c000000075349474d415f3223994e6a23618e60fa01c449a7ab88378709197e186d48d604bfb6931ffb15ad11c5ec7a0700570f80088fd5198ab5d5c227f2ad2a455a6edeec024156bb7beb000000075349474d415f3300cda5845f23468a13275d18bddae27c6bb189cf9aa95b6a03a0cb6688c7e8d829639b45cf8607c525cc400b55ebf90205f2f378626dc3406cc59b2d1b474fba000000075349474d415f342d299e7928496ea2d37f10b43afd6a80c90a33b483090d18069ffa275eedb2fc2f82121e8de43dc036d99b478b6227ceef34248939987a19011f065d8b5cef5c0000000010000000000000000100000002000000030000000400000005000000060000000700000008000000090000000a0000000b0000000c0000000d0000000e0000000f"
    }
  ],
  "events": [],
  "debug": {
    "debugSymbols": [
      "",
      "",
      "",
      "",
      "eJztnd1u5DYShd/F10FAFn9UzKss9iLYH2CBIFlschfMu29PpkXJ7ioVdcxu0j2+ygTQMY/pQ1L6SJX+fPnlt3/8/Md/fvv195ef/nyJLz/97c+X3//7869f/+/3P37+3x8vP7kfXv716z8v//3yw8u///PLv15+8l9+uLnKx5Dz9crLv5nr1YWkyxN5v16eKBuXl2VZL3aUtmvTl7//8JI+pOv8QNchpuo6uvQO14vk2nuKvGo8LeHQPcVE14spubhdGxbJfAnVTuHd1Y6/+uHH+ylrAsil135ur2ZafzTn9NZ7mdz7Uq4XF3/T79492jy5EterL4k2zFNw9eqQ/Xb111/l5urEq5G8Gx3ytdGX9eJIPm9XJ+lqKm7txeB4Ma5e4mp6YarXxr863D9Th2dfOzyTcS3V+SjQbl707uzc5emzC9/bhWH2LqzuKZT4qlu+2hdvcD6OffFO5+PYf/jNw0n7cbs6JWtMlTpYy1OsLw+/k5rljzNmIn34zd9duzvz9qsWK+B5TezlCeo9fUiz3xKVxdWxGaxxf7G69osPYfm+Zh+a/dZskj/lkLmKZr/pu+cfZ8zMNvt96rkeD3Xg+1Csq3NaWdXi6V2dOP3d8vSPeyRCys8uPNOFsz/0fIAuVB5N8lKpti/uuAvzwmsLmdNuIk9JQp/JhZXbJr/D6+L01nFTgJTHgml+1X47CUEhyPf8VeuY47SU/a/61Y/yNHFPPyEd+FFuie/pp6yrOmf2x1EontfclOBuzCu3jLOYT3XElkT81rxy9/UxzCt3PR/DvHK/8THMKyv9xzA/YI3tZ37AqtnNfBywDvYzP2DR7Gd+8hX22PzsK2zian5Jb83PvsIemp99hT00P/sKe2h+9hX20PzsK+yh+dlX2CPzafYV9tD87CvsofnZV9hD85OvsLnuvZW82264mp98hT02P/kKe2x+8hX22PzkK+yx+clX2GPzk6+wh+bz5CvssfnJV9hj85OvsMfm515hvXNUN66di/6t/bnXWNP+3KusaX/udda0P/dKa9qfe6017c+92lr2l7nXW9P+3CuuaX/uNde0P/2qy26zX96C72X6VffY/vSr7rH96VfdY/vTr7rH9qdfdY/tT7/qHtrn6VfdY/vTr7rH9qdfdY/tz77q+u2QtvO7w51X+7Ovuob92Vddw/7sq65hf/ZV17A/+6pr2J991T22X2ZfdQ37s6+6hv3ZV13D/uSrLm070Jd/L8tb+5Ovupb9yVddy/7kq65lf/JV17I/+apr2Z981TXsXx5hPrj/yddd0//kC6/pf/aVN7tqhHJ8uzXt3exLb871xocWegv5vZt97V2i2/zzrf/ZF192m38O8cb/5KtvoLgrg+Bu8z/58hvCtskVws3bk95Nvv6GUOrLsSFm99a/VmBxGv9xqfN/SLsX2Ff/k6+/IdVamD7kfLN+acUCp/G/uK3/F1+OL4/1Zd3kNjJ9CaHkOtDqI6ew+8OefsXba+UCPzvxTCdOfidyrhNTrYib4mJ04lJoLXO8lOSOOzG6WpogXlbfd/X45PdO9+txXupdAS9slHegtBUaye8qe3Hp2u+2x7lWmOIS31NQw2v1NT9mJ8Y6gaYSjE40+kW+lSW3leChy1J12C+Xx8Vly/ru2iT5CeTXHx1eFfcRrz6s+izfxpKnsHnPx94v19ZfNO5XriiV4lm2P2nYFTFzUqmhM5UFc6iF3POrQkNin8Sl4oVYdmVpzvcgyTfSk/TgoELY8s35990n8g3/HfukbATE7W5YvnbKX4bkm+cHGdrX3lsNyTeidzR0+ZvXH+2ZrNzkpQZncdYMk/JSb+eXfffL81FduvbP6pff5lvPyDeM30XPbM/ReXf78rVnhNHqah27slv+zy/pSmHC76LDc10Z877k7hpF+Sbwo/bM4tcYpMudsnE11UVmDwQv+fnWM8ptIG32KfjluGfCVvn08u/9E9K9SwN6pTbgff33q/fnlYJ/5/xH59MWzdttG6WK39lG6jwlN6LcKpxsJNXeij4uxl8ipq1scdxXxl09KXcLd/VUfP3hsYQbhq0U0hvrSVmqh3pSVrOhnpR1ZKinHjN4b089ZuXOnpSScmM99ZmY+3oaMY9bnobM49ltnm7Pcijl2sZ6GjKPG56GzOOGpyHzuOFpyDxueBoyjx97UgqXjfU0ZB43PA2Zxw1PA+bx5HZPm+6mZKhXioKN9TRgHjc9DZjHTU8D5nHT04B53PQ0YB63PCnlscZ6GjCPm54GzOOmpxHzeKQddYs3rEcpPDXW04h53PI0Yh63PI2Yxy1PI+Zxy9OIedzwpJRdGutpxDxueRoxj1uehszjvK0tsdycUVdKGY31NGQeNzwNmccNT0PmccPTkHnc8DRkHj/2pBTyGetpyDxueBoyjxueRszjabcLnnaHJ1ZPI+Zxy9OIedzyNGIetzyNmMctTyPmccvTiHnc8KSUhhnracQ8bnkaMY9bngbM4zlyPUOT0+3eq1Ju5b6eto+S+rw/Rb96GjCP5xxo83T7bqdSGOWunhbHtZ8WH2/7acA8vvhcf/hC/oYdKiVM7uuJQt483d4/KXVJ7usp1FOcl2fem7NrpNQaua+nGOr+3ZJu3n8npX7IfT2luP3tUjIuz9XJ/uU7H+SXb3q9jkpKYZLPjlEqnszUMfV1rVenzMWO8ZeZoj6IXUaDcfS339u35Aaswnfsx8u6UG86iHYvP4ld4x2H2u2uvLMnB9w7PGlPjrjjec6eHHGf9pw9OeLu8jl7csQ98VP2pFK16LMnz/fk/M8fH6Un539g+Sg9+VxPOCN78vMZp1dPfj7j9OrJz2ecXj35+YzTqyc/n3F69eTnM06nntQKSn3Ungy1yOLl3/svaMg9GWLdG3T74iBITz7ZM87AnnyyZ5yBPflkzzgDe/LJnnEG9uSTPeMM7Mkne8YZ2JNP9owzsCef7BlnYE8+2TPOuJ7sVKvtsyepU0G6z56kEVX3nrQnP59xevXk5zNOr578fMbp1ZNP9oyzlI308vKeErQ0oqjlua5JvB5HXlIwuubwd11+lJ8rQqkfsoiedk1cQvdNJt5EmzL5jtGWibdHtky8F7Bl4sJny8RZ3paJU5otE8evLROzbcuwlMhlT02ZXJnUlmEpket72jIsJXKVTFuGpUSuNWnLsJTIFRttGZYSue6hLcNSIlcPtGVYSuQafLYMS4lcyc6WYSmR68HZMiwlclU1W4alRK5NZsuwlMgVvmwZlhK5TpYtw1IiV5uyZVhK5JpNtgxLiVz5yJZhKZHrB9kyLCVyFR5bhqVErmVjy7CUyBVhbBmWErmuii3DUiJXJ7FlWErkGh+2DEuJXCnDlmEpketN2DIsJXLVBluGpUSufWDLsJTIFQRsGZYS+T18W4alxMuvszfosJx4+Y3sBh2WFO+wqHj5ddQGHRYWL79q2KDD4qJ8ct7WyS9NNejAvMgvxDTowLzILzs06MC8yAfZG3RgXuRDyg06MC/yAdQGHZgX+XBhgw7Mi3xwrEEH5kU+FNSgA/MCglnlA3C2DkSzyrfUGnRgXkA6q3xmrEEH5gUEtMontRp0YF5ARqt8PqpBB+YFxLTKp5IadGBeQFKrfBaoQQfmBYS1yidwbB2Ia5VPyTTowLyAxFb5bEqDDswLCG2VT4Q06MC8gNxW+RxGgw7MC4hulU8/NOjAvID0VvnMQYMOzAsIcJWS/rYORLhKafwGHZgXkOIqZeAbdGBeQJCrlDxv0IF5AVmuUt67QQfmBcS5SinrBh2YF5DoKmWbG3RgXkCoq5QotnUg1lVK/TbowLyAZFcpa9ugA/MCwl2lhGuDDswLyHeVcqUNOiwvSsXNBh2WF6UAY4MOy4tSXK9Bh+VFKZzWoAPzAvJdpQRUgw7MC8h3lWI2DTowLyDfVcpyNOjAvIB8Vykw0KAD8wLyXeVV6QYdmBeQ7yovfTbowLygB29Bvqu8rNWgA/MC8l3ltZMGHZgXkO8qB+gbdGBeQL5LIN8lkO8SyHcJ5LsE8l0C+S6BfJdAvksg3yWQ7xLIdwnkuwTyXQL5LoF8l0C+SyDfJZDvEsh3CeS7BPJdAvkugXyXQL5LIN8lkO8SyHcJ5LsE8l0C+S6BfJdAvksg3yWQ7xLIdwnkuwTyXQL5LoF8l0C+SyDfJZDvEsh3CeS7BPJdAvkugXyXQL5LIN8lkO8SyHcJ5LsE8l0C+S6BfJdAvksg3yWQ7xLId6mF72ZJ15AXQRda+K6oa8iLqGvIi6hryIuoa8iLqGvIi6hryIuoa8iLqMPyElr4rqRr4buiDsxLC98VdWBeWviuqAPz0sJ3RR2Ylxa+K+rAvLTwXVEH5qWF74o6MC8tfFfU2XkJ6ZVOKC2R19ISeVcqIoS1CTta727CTuG7m7AD+94mGpjWmyauutO//VV3+le66uwxKOoamJass8egrLPHoKyzx6Css8egrDs9Bq86MC8NTEvWgXlpYFqiroFpyTowLw1MS9aBeZGZFpFba+9Q3H0j1Qe36sS8NOjEvDToxLw06MS8NOjEvNg6mWk16MS8NOjEvDToxLw06MC8yEyrQQfmRWZaDTowLzLTsnUy02rQgXmRmVaDDsyLzLQadGBeZKbVoAPzIjOtBh2YF5lpNejAvMhMq0EH5kVmWg06MC8y02rQgXmRmVaDDstLlJlWgw7LS5SZVoMOy0uUmVaDDstLlJlWgw7LS5SZVoMOzIvMtBp0YF5kptWgA/MiM60GHZgXmWk16MC8yEyrQQfmRWZaDTowLzLTatCBeZGZVoMOzIsMqhp0YF5kpNSgA/Min1ls0IF5kc8sNujAvMhnFht0YF7kM4sNOjAv8pnFBh2YF/nMYoMOzIt8ZrFBB+ZFPrPYoAPzIvPdBh2YF5nvNujAvMh8t0EH5kXmuw06MC8y323QgXmR+W6DDsyLzHcbdGBeZL7boAPzIvPdBh2YF5DvRpDvRpDvRpDvRpDvRpDvRpDvRpDvRpDvRpDvRpDvRpDvRpDvRpDvRpDvRpDvRpDvRpDvRpDvRpDvRpDvRpDvRpDvRpDvRpDvRpDvRpDvRpDvRpDvRpDvRpDvRpDvRpDvRpDvRpDvRpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJpDvJoXvRuKqC4ukk/Ni6+S82Do5L3tdjJJOzoutk/MSl1B1TJJOzoupU/iurZPzkkr9/fLuU507nZwXWyf//Wyd/PezdfL5+bCsuQ6BnaBT3tm2dfL5eVsnn5+3dfL5eVsn5yyHOt5zlMaRwvlsnZyzvS4VSSfPE4XW9wOoJJZ0cs5snZyz4qKhk+cJWyfPE4VXXXAuSDr572fpsvKusKsfFA5O8pmVd4VtnZxrF/KmE/7uWXlX2NaJeXmly0I+s/KusK2T3yOimrNwWSsknfweka2T3yOydfI86EvedK/zcvsKnjmrZOXN4t6tyFns3Yqc3N6tyDnv3Yo8Knq3Io+h3q3II653K/L47N2KPJp7t/KQsa+8Jd67lYeMfeUN9N6tPGTsK2+3927lIWNfeR2+dysPGfvKS/G9W3nI2FcquvZu5SFjX6kW27uVh4x9pRJt71YeMvaVKre9W3nI2Fcq6HZuRal/e6oVXx9gvd9dm/zaRofRYrbRIV++AjtPRWqjQ7rMNjpky2yjQ7LMNjqsKVYbSr2TgzauutOZv+pO5/iqOz2PX3XyzEwL1THtnNGH0fu1E6MPOwqd4tqKPHJ6t6IwkFOtOL/2WHSxvGrl9mrKzldu6EnypPCVoZ4UdjPUkzyW7+opb54WyZNSu2asJ3leGetJnrPu6Wnx68++tBIkT/J8ONZTj7m2t6ceM/NJT8lVT9lLnh4/j9ueHj+P255Oz+NX3em59ptOqTdu607PWVfd6Xnlqjs99q+60+Pzqjs9hq660zm/6k5n8aoD86LsXZs6Ze/a1oF5UfaubR2YF6XeuK0D86LUG7d1YF6UeuO2DsyLUm/c1oF5UeqNB1/3roP5/BhjWFuJMe1Ofohz+tHVV0/KOYqhnuScj/Ukj6GxnuTxOdaTPPbHepLnlbGelPNZAz0tyhmZA09XnXL2y9Sdng+vutNz1lV3el656pSxb3DoRTkjY+uUMWTqlJybOuys4KKcerF12FnBRTmZYuuws4KLcnrE1oF5UU542DowL8opDFsH5kU5KWHrwLwopxlsHZgX5cSBrQPzopwKsHVgXpSde1sH5kXZXbd1YF6UHXBbB+ZF2aW2dWBelJ1kWwfmRdnttXVgXpTvpdo6MC/KHrCtA/OifC/V1oF5UfaGbR2YF2UP19aBeVH2Wm0dmBdlr9XWgXlR9lptHZgXZT/U1oF5UfYVbR2YF2V/ztaBeVH2uWwdmBdlv8jWgXlR9l1sHZgXZf/C1oF5UfYvbB2YF2X/wtaBeVH2L2wdmBdl/8LWgXlR9i9sHZgX8N27BXz3bgHfvVvAd+8WZf/C1oF5UfYvbB2YF2X/wtaBeVH2L2wdmBdt/8LUgXnR9gFMHZgXjaebOjAvGpc2dVheWOO7pg7LC2t819RheWGN75o6LC8M8l0G+S6DfJdBvssg32WQ7zLIdxnkuwzyXQb5LoN8l0G+yyDfZZDvMsh3GeS7DPJdBvkug3yXQb7LIN9lkO8yyHcZ5LsM8l0G+S6DfJdBvssg32WQ7zLIdxnkuwzyXQb5LoN8l0G+yyDfZZDvMsh3GeS7DPJdBvkug3yXQb7LIN9lkO8yyHcZ5LsM8l0G+S6DfJdBvssg32WQ7zLIdxnkuwzyXQb5LoN8l0G+yyDfZZDvMsh3GeS7DPJdBvkug3yXQb7LIN9lkO8yyHcZ5LsM8l0G+S6DfJdBvssg32WQ7zLIdxnkuwzyXQb5LoN8l0G+yyDfZZDvMsh3GeS7DPJdBvkug3yXQb7LIN9lkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkO8WkNMWkNOW8zWITtfEKufrFQFtdKhRZ7YhZ6FvGz3qh1lt9KgfFtYizn5fQ31ro0f9sBBqGyy10aN+mNXG/euHFYVh922jxzi32ugxzq02eoxzq40e49xq4/51AovC8vu2cf86gUXZI+jbxgPGubL30LeNB4xzZU+jbxsPGOfKXknfNh4wzpU9mL5tPGCcK3s7fdt4wDhX9oz6tvGAca7sRfVt4wHjXNnj6tvGA8a5snfWt40HjHNlT65vGw8Y58peX982xPFhqsTEmyoxwz5SfZx8VYOmMgR5j65BJ2atQSfmp0EnZsLUeSdv0rUIxVm6RShOvS1COS8NQjkyDUIlNbUirM+LF4VKbGyhkhtbqATHFirJMYXydp0hDO5Hsb0Y1mKfaf99S79cRXJjpkrOaKmFRf2O7/j8l4oU1XFbF5UYa1MlZtpUiYE2VWKaD1WeNIuprJAs+x18janKRI+2TDG5rjtpL/uWKU/xR/mzf7wuCiHsABiFVSV/9M9SyZ/8s1Rygm2Z/MHGY9lleMr3OpyusrivhuyoyuTbF1Mmj2muyXr1zb5vMm0mSBXr57yrtk3LqpI70padnwu8OhkYrWmzgS2Tx5opk8eaKRPH2oHsy5f/A0MmZYg=",
      "",
      "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gGyOwum2GEI2R+F0Wwwim6Nwui2Gkc1RON0WA8nmKJxui6FkcxRMtxWOJROOJROOJROOJZMHptsKx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5IJx5Ipx5Ipx5Ipx5Ipx5LpA9NtlWPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJlGPJjGPJjGPJjGPJjGPJ7IHptsaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMaxZMax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",
      "",
      "",
      "eJzNlcsKgzAQRf9l1lIyM/H5K6ULaS0IoqW6k/x7bVFqMSUbkbtL4F5yFjMnIzXdtRzqru2pGMmcYirOI/WPsn3f+6F8DlQIJ6lEVLW3zzlPXUT3uqmoYBdt0izJEmZV/WY196Q1tnNY83iVZXeJJp4EjCcF48nAeHIwHjZoQIwGJGhAigZk0YDQLM1ommY0TzOaqBnN1IJmakEztaCZWtBMLWimlsNNbQ3PYSvmB2ibnd5eKGQFb7MZ/nCr7wl/+A+wI7z61WPSpWTtdtbUr4dAyb/CgZJ/zQIl/yoESv4R/F9y7gUGf0L9",
      "",
      "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ebnMzstldl4us/NymZ2Xy+y8XGbn5TI7L5fZebnMzstldl4us/NymZ2Xy+y8XGbn5TI7L5fZebnMzstldl4us/NymZ2Xy+y8XGbn5TI7L5fZebnMzstldl4us/NymZ2Xy+y8XGbn5TI7L5fZebnMzstldl4us/NymZ2Xy+y8XGbn5TI7L5fZebnMzstldl4us/NymZ2Xy+y8XGbn5TI7L5fZebnMzstldl4us/NymZ2Xy+y8XGbn5TI7L5fZebnMzstldl4us/NymZ2Xy+y8XGbn5TI7L5fZebnMzstldl4us/NymZ2Xy+y8XGbn5TI7L5fZebnMzstldl4us/NymZ1Xk9l5NZmdV5PZeTWZnVf7UDljm8zOq8nsvJrMzqvJ7LyazM6ryey8mszOq8nsvJrMzqvJ7LyazM6ryey8mszOq8nsvJrMzqvJ7LyazM6ryey8mszOq8nsvJrMzqvJ7LyazM6ryey8mszOq8nsvJrMzqvJ7LyazM6ryey8mszOq8nsvJrMzqvJ7LyazM6ryey8mszOq8nsvJrMzqvJ7LyazM6ryey8mszOq8nsvJrMzqvJ7LyazM6ryey8mszOq8nsvJrMzqvJ7LyazM6ryey8mszOq8nsvJrMzqvJ7LyazM6ryey8mszOq8nsvJrMzqvJ7LyazM6ryey8mszOq8nsvJrMzqvJ7LyazM6ryey8mszOq8nsvJrMzqvJ7LyazM6ryey8mszOq8nsvJrMzqvJ7LyazM6ryey8mszOq8nsvJrMzqvJ7LyazM6ryey8mszOq8nsvJrMzqvJ7LyazM4rZHZeIbPzCpmdV8jsvOJD5YwNmZ1XyOy8QmbnFTI7r5DZeYXMzitkdl4hs/MKmZ1XyOy8QmbnFTI7r5DZeYXMzitkdl4hs/MKmZ1XyOy8QmbnFTI7r5DZeYXMzitkdl4hs/MKmZ1XyOy8QmbnFTI7r5DZeYXMzitkdl4hs/MKmZ1XyOy8QmbnFTI7r5DZeYXMzitkdl4hs/MKmZ1XyOy8QmbnFTI7r5DZeYXMzitkdl4hs/MKmZ1XyOy8QmbnFTI7r5DZeYXMzitkdl4hs/MKmZ1XyOy8QmbnFTI7r5DZeYXMzitkdl4hs/MKmZ1XyOy8QmbnFTI7r5DZeYXMzitkdl4hs/MKmZ1XyOy8QmbnFTI7r5DZeYXMzitkdl4hs/MKmZ1XyOy8QmbnFTI7r5DZeYXMzitkdl4hs/MKmZ1XyOy8QmbnFTI7r5DZeYXMzitkdl4ps/NKmZ1Xyuy8UmbnlR8qZ2zK7LxSZueVMjuvlNl5pczOK2V2Ximz80qZnVfK7LxSZueVMjuvlNl5pczOK2V2Ximz80qZnVfK7LxSZueVMjuvlNl5pczOK2V2Ximz80qZnVfK7LxSZueVMjuvlNl5pczOK2V2Ximz80qZnVfK7LxSZueVMjuvlNl5pczOK2V2Ximz80qZnVfK7LxSZueVMjuvlNl5pczOK2V2Ximz80qZnVfK7LxSZueVMjuvlNl5pczOK2V2Ximz80qZnVfK7LxSZueVMjuvlNl5pczOK2V2Ximz80qZnVfK7LxSZueVMjuvlNl5pczOK2V2Ximz80qZnVfK7LxSZueVMjuvlNl5pczOK2V2Ximz80qZnVfK7LxSZueVMjuvlNl5pczOK2V2Ximz80qZnVfK7LxSZueVMjuvlNl5pczOK2V2Ximz8yqZnVfJ7LxKZudVMjuv+lA5Y0tm51UyO6+S2XmVzM6rZHZeJbPzKpmdV8nsvEpm51UyO6+S2XmVzM6rZHZeJbPzKpmdV8nsvEpm51UyO6+S2XmVzM6rZHZeJbPzKpmdV8nsvEpm51UyO6+S2XmVzM6rZHZeJbPzKpmdV8nsvEpm51UyO6+S2XmVzM6rZHZeJbPzKpmdV8nsvEpm51UyO6+S2XmVzM6rZHZeJbPzKpmdV8nsvEpm51UyO6+S2XmVzM6rZHZeJbPzKpmdV8nsvEpm51UyO6+S2XmVzM6rZHZeJbPzKpmdV8nsvEpm51UyO6+S2XmVzM6rZHZeJbPzKpmdV8nsvEpm51UyO6+S2XmVzM6rZHZeJbPzKpmdV8nsvEpm51UyO6+S2XmVzM6rZHZeJbPzKpmdV8nsvEpm51UyO6+S2XmVzM6rZHZeJbPzKpmdV5fZeXWZnVeX2Xl1mZ1X/1A5Y7vMzqvL7Ly6zM6ry+y8uszOq8vsvLrMzqvL7Ly6zM6ry+y8uszOq8vsvLrMzqvL7Ly6zM6ry+y8uszOq8vsvLrMzqvL7Ly6zM6ry+y8uszOq8vsvLrMzqvL7Ly6zM6ry+y8uszOq8vsvLrMzqvL7Ly6zM6ry+y8uszOq8vsvLrMzqvL7Ly6zM6ry+y8uszOq8vsvLrMzqvL7Ly6zM6ry+y8uszOq8vsvPo3d15jfN1Jfvj37uR7Z+ybd/K9M/bNO/neGfvmnXzvjH3zTr53xr55J987Y1+8k2/uvN68k++dsW/eyffO2DfvROaM/ebO6807kTljv7nzevNOZM7Yb+683rwTmTP2mzuvN+9E5oz95s7rzTuROWO/ufN6805kzthv7rzevBOZM/abO68370TmjP3mzuvNO5E5Y7+583rzTmTO2G/uvN68E5kz9ps7rzfvROaM/ebO6807kTljv7nzevNOZM7Yb+683rwTmTP2mzuvN+9E5oz95s7rzTuROWO/ufN6805UztjxzZ3Xm3eicsaOb+683rwTlTN2fKicseObO68370TljB3f3Hm9eScqZ+z45s7rxTv55s7rzTuROWO/ufN6805kzthv7rzevBOZM/abO68370TmjP3mzuvNO5E5Y7+583rzTmTO2G/uvN68E5kz9ps7rzfvROaM/ebO6807kTljv7nzevNOZM7Yb+683rwTmTP2mzuvN+9E5oz95s7rzTuROWO/ufN6805kzthv7rzevBOZM/abO68370TmjP3mzuvNO5E5Y7+583rzTmTO2G/uvN68E5kz9ps7rzfvROaM/ebO6807kTljv7nzevNOZM5YmZ3XkNl5DZmd15DZeQ2ZndeQ2XkNmZ3XkNl5DZmd15DZeQ2ZndeQ2XkNmZ3XkNl5DZmd15DZeQ2ZndeQ2XkNmZ3XkNl5DZmd15DZeQ2ZndeQ2XkNmZ3XkNl5DZmd15DZeQ2ZndeQ2XkNmZ3XkNl5DZmd15DZeQ2ZndeQ2XkNmZ3XkNl5DZmd15DZeQ2ZndeQ2XkNmZ3XkNl5DZmd15DZeU2ZndeU2XlNmZ3XlNl5zQ+VM3bK7LymzM5ryuy8pszOa8rsvKbMzmvK7LymzM5ryuy8pszOa8rsvKbMzmvK7LymzM5ryuy8pszOa8rsvKbMzmvK7LymzM5ryuy8pszOa8rsvKbMzmvK7LymzM5ryuy8pszOa8rsvKbMzmvK7LymzM5ryuy8pszOa8rsvKbMzmvK7LymzM5ryuy8pszOa8rsvKbMzmvK7LymzM5ryuy8pszOa8rsvKbMzmvK7LymzM5ryuy8pszOa8rsvKbMzmvK7LymzM5ryuy8pszOa8rsvKbMzmvK7LymzM5ryuy8pszOa8rsvKbMzmvK7LymzM5ryuy8pszOa8rsvKbMzmvK7LymzM5ryuy8pszOa8rsvKbMzmvK7LymzM5ryuy8pszOa8rsvKbMzmvK7LymzM5ryuy8pszOa8rsvKbMzmvK7LymzM5ryuy8pszOa8rsvOxDZui1bkXllF23onLMrltROWfXragctOtWVE7adSsqR+26FZWzdt2KymG7bkXntJWZfK1b0TltZUZf61Z0TluZ2de6FZ3TVmb4tW5F57SVmX6tW9E5bWXGX+tWdE5bmfnXuhWd01ZmALZuRee0lZmArVvROW1lRmDrVnROW5kZ2LoVndNWZgi2bkXntJWZgq1b0TltZcZg61Z0TluZOdi6FZ3TVmYQtm5F57SVmYStW9E5bWVGYetWdE5bmVnYuhWd01ZmGLZuRee0lZmGrVvROW1lxmHrVnROW5l52LoVndNWZiC2bkXntJWZiK1b0TltZUZi61Z0TluZmdi6FZ3TVmYotm5F57SVmYqtW9E5bWXGYutWdE5bmbnYuhWd01ZmMLZuRee0lZmMrVvROW1lRmPrVnROW5nZ2LoVndNWZji2bkXntJWZjq1b0TltZcZj61Z0TluZ+di6FZ3TVmZAtm5F57SVmZCtW9E5bWVGZOtWdE5bmRnZuhWd01ZmSLZuRee0lZmSrVuROW1NZ0tmOlsy09mSmc6WzD5kTlvT2ZKZzpbMdLZkprMlM50tmelsyUxnS2Y6WzLT2ZKZzpbMdLZkprMlM50tmelsyUxnS2Y6WzLT2ZKZzpbMdLZkprMlM50tmelsyUxnS2Y6WzLT2ZKZzpbMdLZkprMlM50tmelsyUxnS2Y6WzLT2ZKZzpbMdLZkprMlM50tmelsyUxnS2Y6WzLT2ZKZzpbMdLZkprMlM50tmelsyUxnS2Y6WzLT2ZKZzpbMdLZkprMlM50tmelsyUxnS2Y6WzLT2ZKZzpbMdLZkprMlM50tmelsyUxnS2Y6WzLT2ZKZzpbMdLZkprMlM50tmelsyUxnS2Y6WzLT2ZKZzpbMdLZkprMlM50tmelsyUxnS2Y6WzLT2ZKZzpbMdLZkprMlM50tmelsyUxnS2Y6WzLT2ZKZzpbMdLZkprMlM50tmelsyUxnS+Y6WzLX2ZK5zpbMdbZk/iFz2rrOlsx1tmSusyVznS2Z62zJXGdL5jpbMtfZkrnOlsx1tmSusyVznS2Z62zJXGdL5jpbMtfZkrnOlsx1tmSusyVznS2Z62zJXGdL5jpbMtfZkrnOlsx1tmSusyVznS2Z62zJXGdL5jpbMtfZkrnOlsx1tmSusyVznS2Z62zJXGdL5jpbMtfZkrnOlsx1tmSusyVznS2Z62zJXGdL5jpbMtfZkrnOlsx1tmSusyVznS2Z62zJXGdL5jpbMtfZkrnOlsx1tmSusyVznS2Z62zJXGdL5jpbMtfZkrnOlsx1tmSusyVznS2Z62zJXGdL5jpbMtfZkrnOlsx1tmSusyVznS2Z62zJXGdL5jpbMtfZkrnOlsx1tmSusyVznS2Z62zJXGdL5jpbMtfZkrnOlsx1tmSusyVznS2Z62zJXGdL5jpbsqazJWs6W7KmsyVrOluy9iFz2jadLVnT2ZI1nS1Z09mSNZ0tWdPZkjWdLVnT2ZI1nS1Z09mSNZ0tWdPZkjWdLVnT2ZI1nS1Z09mSNZ0tWdPZkjWdLVnT2ZI1nS1Z09mSNZ0tWdPZkjWdLVnT2ZI1nS1Z09mSNZ0tWdPZkjWdLVnT2ZI1nS1Z09mSNZ0tWdPZkjWdLVnT2ZI1nS1Z09mSNZ0tWdPZkjWdLVnT2ZI1nS1Z09mSNZ0tWdPZkjWdLVnT2ZI1nS1Z09mSNZ0tWdPZkjWdLVnT2ZI1nS1Z09mSNZ0tWdPZkjWdLVnT2ZI1nS1Z09mSNZ0tWdPZkjWdLVnT2ZI1nS1Z09mSNZ0tWdPZkjWdLVnT2ZI1nS1Z09mSNZ0tWdPZkjWdLVnT2ZI1nS1Z09mSNZ0tWdPZkjWdLVnT2ZI1nS1Z09mSNZ0tWdPZkjWdLVnT2ZI1nS1Z09mSNZ0tWehsyUJnSxY6W7LQ2ZLFh8xpGzpbstDZkoXOlix0tmShsyULnS1Z6GzJQmdLFjpbstDZkoXOlix0tmShsyULnS1Z6GzJQmdLFjpbstDZkoXOlix0tmShsyULnS1Z6GzJQmdLFjpbstDZkoXOlix0tmShsyULnS1Z6GzJQmdLFjpbstDZkoXOlix0tmShsyULnS1Z6GzJQmdLFjpbstDZkoXOlix0tmShsyULnS1Z6GzJQmdLFjpbstDZkoXOlix0tmShsyULnS1Z6GzJQmdLFjpbstDZkoXOlix0tmShsyULnS1Z6GzJQmdLFjpbstDZkoXOlix0tmShsyULnS1Z6GzJQmdLFjpbstDZkoXOlix0tmShsyULnS1Z6GzJQmdL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",
      "",
      "",
      "eJzNlctqwzAQRf9Fa1OsGb3sXyldmCaFQHBK7Z3xv8clcUPITAV3I+1s0EEX5szVYs6Xz2E+XcbJ9Itp3zrTvy9m+h7G3/9pHn5m0xN1yTXmOB62b26dWxvzdTofTW/Xj2ajbIthFsMIwxjDHIZ5DAsYFjEsYRhmCWGWEGYJYZYQZglhlhBmCWGWEGYJYZYQZgljljBmCWOWMGYJY5YwZgmLA+Bk453iFPkB+e379TTZtJ+m7Ono9kAx0d9Zd4vjxMGWiyMKUy6OKGK5OKLg5eKIi1MujriQ5eKIz0G5OOIzUy6O+HyVi1NXK/u6WtnX1cq+rlb2dbWyr6uVvdLKifcLOhueLrhhSnvmMKXlcpjSRjlMaY0MFpTtzmHKFuYwZVtymGJ1DlPsy2GYJQGzJGCWBMySgFkSMUsiZknELImYJVEeQGC/YyHZB8btHZMH8IQFAZMH8B+2rletm4uN",
      "eJztnNFq3DAQRf/Fz0vRSCONlV8pfQhtCoGQlCZvYf+9Doll41VnSFfpzQo/ZQOSdXy9e6SxhZ+Hu4fv10+3D/ePw9XzEIarr8/D46/r+5f/Hp+ufz8NV+4w3Nz/mP4eD8PP27ub4YqOh5NWxCGlt5bT53EsrbOvNY+eaG4efTKaZ5G5sfNxaRuP3w4DXyR1/I/UgWOhZhfPoE41ahLKZQDxOev0Ict8ntPncTUEf3DmAqBvl/3YgJ4dldbsOK3ppyFykyGcV4Yg12SMWIJiYjEuAkfJpbmQ3yIRAClTKM1zcFsk//mQqrMDFqmqfixS1etYpBbSbozUwsSNkdrotSlSGx23RPIIextIEHsntyCJbJEg9taRIPbWkSD21pEg9taRIPbWkSD21pEg9taRIPZWkQLE3joSwN7RrSpK58ctEsDeFhLA3hYSwN4WEsDeFhLA3hYSwN4WEsDeFhLA3gYSA+xtISHszX51R423N3MYYW8DCWFvAwlhbwMJYW8DCWFvAwlhbwMJYW8DCWFvHSki7G0gQew9LhMKrw7+hgSxt44EsbeOBLG3jgSxt44EsbeOBLG3jgSxt44EsbeKlCD21pEQ9o6rp9kxhS0Swt4GEsLeBhLC3gYSwt4GEsLeBhLC3gYSwt4GEsLeOpIg7G0gAeydeCzbYFI8eZAqAHunaZIrSMnFLRLA3ikFvyDJyYUD2FvcWFIS4pOUAPYWSmE5OG1vDArA3uJDqh78DQlgbwlUmgufbDwTgL2FQ3keJ9Ftt+cJwN4SeblwMRrNE89fvLTaDEqh2jb4+WQn4a1+yu/ffAmYQi4iF8A89s5cxlnn4sTIhSjnUnN5R8Z2XXZljmdaHfwfYgTMvR8Y4zQhlJWGn7SsJ0NuDCV1l88LErBi6DNIxDqnyyARq7Mug0SsKbsMErES7jJIxPq9yyA/f9VxGUHmz1+mXEiQfdU1wCD3yqZRkHtl0yjIvbJpFORe2TQKcq9sGgW5VzaNguyssgm+HHrK0VtBBi6PAB27c145kTurbGBBkuustAEm2VltA0yys+IGmGRn1Q0wyc7KG2CSndU3wCQ7K3CASXZW4QCT3EucVknuNU6jJBEvx+s0yb3GaZXkXuO0SnKvcVol2VmNI3m5zzvKOS+JJcQLKN8XTRznvccSgxGNvmvkS3XhsbzsNa2+lFPIr33qc6zVqT6d5PlMPK0uMqXXZdFfeqlDvfSqCtfsVZWL2av6QzJ7Vb9jSq/j8Q9lhqiO",
      "",
      "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",
      ""
    ],
    "fileMap": {
      "1": {
        "source": "mod types;\n\n/// @notice This contract implements a private coin toss game between users.\n/// @dev The contract is deployed with a bet_amount and a private oracle.\n///      The user can create a bet note with a bet (true or false) which is later settled by the private oracle.\n///      The users that betted for the winner receive (in equal parts) the bets made by the users that lost.\ncontract CoinToss {\n\n    /////////////////////////////////////////////////////////////////////\n    //                             Imports                             //\n    /////////////////////////////////////////////////////////////////////\n\n\n    use crate::types::oracle::{\n        DivinityAddressSubmitQuestionStruct, \n        FromSubmitQuestionStruct, \n        PrivateOraclePrivateContextInterface, \n    };\n\n    use crate::types::{\n        bet_note::{BetNote, BetNoteMethods, BET_NOTE_LEN},\n        reveal_note::{RevealNote, RevealNoteMethods, REVEAL_NOTE_LEN},\n        config_note::{ConfigNote, ConfigNoteMethods, CONFIG_NOTE_LEN},\n        round_data::{RoundData, RoundDataSerializationMethods, ROUND_DATA_SERIALIZED_LEN, Phase},\n        token::{\n            AccountsBroadcastEscrowNoteForStruct,\n            FromEscrowStruct,\n            FromTransferStruct, \n            OwnerEscrowStruct,\n            OwnerSettleEscrowStruct,\n            RecipientSettleEscrowStruct,\n            TokenPrivateContextInterface, \n            ToTransferStruct,\n            FromUnshieldStruct,\n            ToUnshieldStruct,\n            FromShieldStruct,\n            TokenPublicContextInterface\n        }\n    };\n\n    use dep::aztec::{\n        context::Context,\n        types::type_serialization::{\n            field_serialization::{FieldSerializationMethods, FIELD_SERIALIZED_LEN},\n            bool_serialization::{BoolSerializationMethods, BOOL_SERIALIZED_LEN},\n            aztec_address_serialization::{AztecAddressSerializationMethods, AZTEC_ADDRESS_SERIALIZED_LEN},\n        },\n        note::{\n            note_getter_options::NoteGetterOptions,\n            note_header::NoteHeader,\n            note_viewer_options::NoteViewerOptions,\n            utils as note_utils\n        },\n        oracle::{\n            get_public_key::get_public_key,\n            rand::rand\n        },\n        selector::compute_selector,\n        state_vars::{\n            immutable_singleton::ImmutableSingleton,\n            set::Set,\n            map::Map, \n            public_state::PublicState\n        },\n        types::address::AztecAddress,\n    };\n\n    use dep::std::option::Option;\n\n    /////////////////////////////////////////////////////////////////////\n    //                             Storage                             //\n    /////////////////////////////////////////////////////////////////////\n\n    global ROUND_ID_SLOT = 1;\n    global PHASE_LENGTH_SLOT = 2;\n    global BET_AMOUNT_SLOT = 3;\n    global ORACLE_ADDRESS_SLOT = 4;\n    global DIVINITY_ADDRESS_SLOT = 5;\n    global TOKEN_ADDRESS_SLOT = 6;\n    global RESULTS_SLOT = 7;\n    global ROUND_DATA_SLOT = 8;\n    global CONFIG_NOTE_SLOT = 9;\n    global BETS_SLOT = 10;\n    global REVEALS_SLOT = 11;\n\n    /// @member config The config note, containing the divinity address, the private oracle address, the token address and the bet amount\n    /// @member bets The set of bet notes (ie active bets)\n    struct Storage {\n        ////////////////////////////// public //////////////////////////\n        round_id: PublicState<Field, FIELD_SERIALIZED_LEN>,\n        phase_length: PublicState<Field, FIELD_SERIALIZED_LEN>,\n        bet_amount: PublicState<Field, FIELD_SERIALIZED_LEN>,\n        oracle_address: PublicState<AztecAddress, AZTEC_ADDRESS_SERIALIZED_LEN>,\n        divinity_address: PublicState<AztecAddress, AZTEC_ADDRESS_SERIALIZED_LEN>,\n        token_address: PublicState<AztecAddress, AZTEC_ADDRESS_SERIALIZED_LEN>,\n        results: Map<PublicState<bool, BOOL_SERIALIZED_LEN>>,\n        rounds: Map<PublicState<RoundData, ROUND_DATA_SERIALIZED_LEN>>,\n\n        ///////////////////////////// private //////////////////////////\n        config: ImmutableSingleton<ConfigNote, CONFIG_NOTE_LEN>,\n        bets: Set<BetNote, BET_NOTE_LEN>,\n        reveals: Set<RevealNote, REVEAL_NOTE_LEN>,\n    }\n\n    impl Storage {\n        fn init(context: Context) -> Self {\n            Storage {\n                ////////////////////////////// public //////////////////////////\n                round_id: PublicState::new(context, ROUND_ID_SLOT, FieldSerializationMethods),\n                phase_length: PublicState::new(context, PHASE_LENGTH_SLOT, FieldSerializationMethods),\n                bet_amount: PublicState::new(context, BET_AMOUNT_SLOT, FieldSerializationMethods),\n                oracle_address: PublicState::new(context, ORACLE_ADDRESS_SLOT, AztecAddressSerializationMethods),\n                divinity_address: PublicState::new(context, DIVINITY_ADDRESS_SLOT, AztecAddressSerializationMethods),\n                token_address: PublicState::new(context, TOKEN_ADDRESS_SLOT, AztecAddressSerializationMethods),\n                results: Map::new(\n                    context,\n                    RESULTS_SLOT,\n                    |context, slot| {\n                        PublicState::new(\n                            context,\n                            slot,\n                            BoolSerializationMethods,\n                        )\n                    },\n                ),\n                 rounds: Map::new(\n                    context,\n                    ROUND_DATA_SLOT,\n                    |context, slot| {\n                        PublicState::new(\n                            context,\n                            slot,\n                            RoundDataSerializationMethods,\n                        )\n                    },\n                ),\n\n                ////////////////////////////// private //////////////////////////\n                config: ImmutableSingleton::new(\n                    context,\n                    CONFIG_NOTE_SLOT,\n                    ConfigNoteMethods,\n                ),\n                bets: Set::new(context, BETS_SLOT, BetNoteMethods),\n                reveals: Set::new(context, REVEALS_SLOT, RevealNoteMethods),\n            }\n        }\n    }\n\n    /////////////////////////////////////////////////////////////////////\n    //                           Constructor                           //\n    /////////////////////////////////////////////////////////////////////\n\n    /// @notice         Constructor for the contract, setting the config note\n    /// @custom:privacy private\n    /// @param          divinity The divinity address, invoked by the oracle\n    /// @param          private_oracle The private oracle contract address\n    /// @param          token The token used to bet\n    /// @param          bet_amount The bet amount\n    /// @param          phase_length The phase length\n    #[aztec(private)]\n    fn constructor(divinity: AztecAddress, private_oracle: AztecAddress, token: AztecAddress, bet_amount: Field, phase_length: Field) {\n        let mut config_note = ConfigNote::new(divinity, private_oracle, token, bet_amount);\n        storage.config.initialize(&mut config_note, Option::none(), false);\n\n        let selector = compute_selector(\"initialize(Field,Field,(Field),(Field),(Field))\");\n        context.call_public_function(context.this_address(), selector, [phase_length, bet_amount, private_oracle.address, divinity.address, token.address]);\n    }\n\n    /////////////////////////////////////////////////////////////////////\n    //                   Public external functions                    //\n    /////////////////////////////////////////////////////////////////////\n\n    #[aztec(public)]\n    fn start_next_round() {\n        let timestamp = context.timestamp();\n        let phase_length = storage.phase_length.read();\n\n        let current_round_id = storage.round_id.read();\n        if(current_round_id != 0) {\n            let current_round_data = storage.rounds.at(storage.round_id.read()).read();\n            assert(current_round_data.phase >= Phase::REVEAL, \"Current round not finished\");\n        }\n        let next_round_id = current_round_id + 1;\n        storage.round_id.write(next_round_id);\n        storage.rounds.at(next_round_id).write(RoundData::new(Phase::BETTING, (timestamp + phase_length) as u120, 0, 0, 0));\n    }\n\n    #[aztec(public)]\n    fn end_reveal_phase() {\n        let current_round_id = storage.round_id.read(); \n        let current_round_data = storage.rounds.at(current_round_id).read();\n        let number_of_bettors = current_round_data.bettors;\n        let number_of_winners = current_round_data.reveals_count;\n\n        assert(current_round_data.phase == Phase::REVEAL, \"Reveal phase over\");\n        \n        let bet_amount = storage.bet_amount.read() as u120;\n        let claim_amount = number_of_bettors * bet_amount / number_of_winners;\n\n        let timestamp = context.timestamp() as u120;\n        let phase_length = storage.phase_length.read() as u120;\n\n        let updated_round_data = RoundData::new(Phase::CLAIM, (timestamp + phase_length) as u120, number_of_winners, number_of_bettors, claim_amount);\n        storage.rounds.at(current_round_id).write(updated_round_data);\n    }\n\n    /////////////////////////////////////////////////////////////////////\n    //                   Public internal functions                    //\n    /////////////////////////////////////////////////////////////////////\n\n    #[aztec(public)]\n    fn initialize(phase_length: Field, bet_amount: Field, oracle_address: AztecAddress, divinity_address: AztecAddress, token_address: AztecAddress) {\n        assert(context.msg_sender() == context.this_address());\n\n        storage.phase_length.write(phase_length);\n        storage.bet_amount.write(bet_amount);\n        storage.oracle_address.write(oracle_address);\n        storage.divinity_address.write(divinity_address);\n        storage.token_address.write(token_address);\n    }\n\n    #[aztec(public)]\n    internal fn end_bet_phase(round_id: Field) {\n        let timestamp = context.timestamp() as u120;\n        let phase_length = storage.phase_length.read() as u120;\n\n        // Check that the phase is BETTING \n        let current_round_id = storage.round_id.read();\n        assert(round_id == current_round_id, \"Round id mismatch\");\n\n        let current_round_data = storage.rounds.at(storage.round_id.read()).read();\n        assert(current_round_data.phase == Phase::BETTING, \"Not in bet phase\");\n\n        // Check that the timestamp is after the end of the bet phase\n        assert(timestamp >= current_round_data.current_phase_end, \"Bet phase not finished\");\n\n        // Set state to AWAITING_ANSWER and update the end phase timestamp\n        let new_round_data = RoundData::new(Phase::AWAITING_ANSWER, (timestamp + phase_length) as u120, 0, current_round_data.bettors, 0);\n        storage.rounds.at(current_round_id).write(new_round_data);\n    }\n\n    /////////////////////////////////////////////////////////////////////\n    //                   Private external functions                    //\n    /////////////////////////////////////////////////////////////////////\n    #[aztec(private)]\n    fn bet(bet: bool, round_id: Field, bet_randomness: Field, unshield_nonce: Field) {\n        let config_note = storage.config.get_note();\n        let token = config_note.token;\n        let bet_amount = config_note.bet_amount;\n        let bettor = AztecAddress::new(context.msg_sender());\n        let address_this = AztecAddress::new(context.this_address());\n        let token = TokenPrivateContextInterface::at(token.address);\n\n        // Unshield private balance from the user to the coin toss. This requires an authwit.\n        let _ = token.unshield(\n            &mut context,\n            FromUnshieldStruct { address: bettor.address }, \n            ToUnshieldStruct {address: address_this.address }, \n            bet_amount, \n            unshield_nonce\n        );\n\n        // Create a bet note for the user. This method nullifies the randomness and round_id combinarion.\n        let mut user_bet: BetNote = BetNote::new(&mut context, bettor, round_id, bet, bet_randomness);\n        storage.bets.insert(&mut user_bet, true);\n\n        let selector = compute_selector(\"_increase_bettors(Field)\");\n        context.call_public_function(context.this_address(), selector, [round_id]);\n    }\n\n    /////////////////////////////////////////////////////////////////////\n    //                   Public internal functions                    //\n    /////////////////////////////////////////////////////////////////////\n    #[aztec(public)]\n    internal fn _increase_bettors(\n        round_id: Field,\n    ) {\n        let current_round_id = storage.round_id.read();\n        assert(current_round_id == round_id, \"Round id mismatch\");\n\n        let current_round_data = storage.rounds.at(current_round_id).read();\n        assert(current_round_data.phase >= Phase::BETTING, \"Betting phase over\");\n\n        let updated_round_data = current_round_data.add_bettor();\n        storage.rounds.at(round_id).write(updated_round_data);\n    }\n\n    #[aztec(public)]\n    internal fn _set_result(caller: Field, round_id: Field, answer: Field) {\n        let oracle = storage.oracle_address.read();\n        let timestamp = context.timestamp() as u120;\n        let phase_length = storage.phase_length.read() as u120;\n\n        assert(caller == oracle.address, \"Caller is not the oracle\");\n\n        let current_round_id = storage.round_id.read();\n        assert(current_round_id == round_id, \"Round id mismatch\");\n\n        let current_round_data = storage.rounds.at(current_round_id).read();\n        assert(current_round_data.phase == Phase::AWAITING_ANSWER, \"Not in awaiting answer phase\");\n\n        let new_round_data = RoundData::new(Phase::REVEAL, (timestamp + phase_length) as u120, 0, current_round_data.bettors, 0);\n        storage.rounds.at(round_id).write(new_round_data);\n\n        storage.results.at(round_id).write(answer as bool);\n    }\n\n    #[aztec(public)]\n    internal fn _increase_reveals(round_id: Field, user_bet: Field) {\n        let current_round_id = storage.round_id.read();\n        assert(current_round_id == round_id, \"Round id mismatch\");\n\n        let current_round_data = storage.rounds.at(current_round_id).read();\n        assert(current_round_data.phase == Phase::REVEAL, \"Reveal phase over\");\n\n        let results = storage.results.at(round_id).read();\n        assert(results == user_bet as bool, \"User bet does not match result\");\n\n        let updated_round_data = current_round_data.increase_reveal_count();\n        storage.rounds.at(round_id).write(updated_round_data);\n    }\n\n    #[aztec(public)]\n    internal fn _claim_funds(round_id: Field, secret_hash: Field) {\n        let address_this = AztecAddress::new(context.this_address());\n        let token = TokenPublicContextInterface::at(storage.token_address.read().address);\n\n        let round_data = storage.rounds.at(round_id).read();\n\n        let claim_amount = round_data.claim_amount;\n\n        let _ = token.shield(\n            context,\n            FromShieldStruct { address: address_this.address },\n            claim_amount as Field,\n            secret_hash,\n            0\n        );\n    }\n\n    /////////////////////////////////////////////////////////////////////\n    //                   Private internal functions                    //\n    /////////////////////////////////////////////////////////////////////\n\n    /// @notice         Calls the oracle to get the result of the bet round\n    /// @custom:privacy private\n    /// @param          round_id The id of the current round\n    #[aztec(private)]\n    fn roll(round_id: Field, oracle_nonce: Field) {\n        let sender = AztecAddress::new(context.msg_sender());\n        let config_note = storage.config.get_note();\n        let divinity = config_note.divinity;\n        let oracle = config_note.private_oracle;\n        let oracle_contract = PrivateOraclePrivateContextInterface::at(oracle.address);\n        let address_this = AztecAddress::new(context.this_address());\n\n        // Create the question in the oracle\n        let callback = [address_this.address, round_id, 0, 0, 0, 0];\n        let __ = oracle_contract.submit_question(\n            &mut context,\n            FromSubmitQuestionStruct { address: sender.address },\n            round_id,\n            DivinityAddressSubmitQuestionStruct { address: divinity.address },\n            oracle_nonce,\n            callback\n        );\n\n        // End the bet phase and update public state\n        // This checks that the round id is correct and that the phase is BETTING\n        let selector = compute_selector(\"end_bet_phase(Field)\");\n        context.call_public_function(context.this_address(), selector, [round_id]);\n    }\n\n    /// @notice         Called by the oracle to set the result of the bet round\n    /// @param          answer The answer of the oracle\n    /// @param          data The data of the oracle \n    ///                 data[0]: round_id\n    ///                 data[1:5]: unused\n    #[aztec(private)]\n    fn oracle_callback(answer: Field, data: [Field; 5]) {\n        let round_id = data[0];\n        let selector = compute_selector(\"_set_result(Field,Field,Field)\");\n        context.call_public_function(context.this_address(), selector, [context.msg_sender(), round_id, answer]);\n    }\n\n    #[aztec(private)]\n    fn reveal(round_id: Field, user_randomness: Field) {\n        let options = NoteGetterOptions::new().select(1, round_id).select(3, user_randomness).set_limit(1);\n        let bet_notes = storage.bets.get_notes(options);\n        let bettor = AztecAddress::new(context.msg_sender());\n\n        if (bet_notes[0].is_some()) {\n            let bet_note = bet_notes[0].unwrap_unchecked();\n            let user_bet = bet_note.bet;\n            \n            let mut reveal_note: RevealNote = RevealNote::new(bettor, round_id, user_randomness);\n            storage.reveals.insert(&mut reveal_note, true);\n\n            storage.bets.remove(bet_note);\n\n            let selector = compute_selector(\"_increase_reveals(Field,Field)\");\n            context.call_public_function(context.this_address(), selector, [round_id, user_bet as Field]);\n        } else {\n            assert(false, \"Bet note not found\");\n        }\n    }\n\n    #[aztec(private)]\n    fn claim(round_id: Field, secret_hash: Field) {\n        let bettor = AztecAddress::new(context.msg_sender());\n        let options = NoteGetterOptions::new().select(0, bettor.address).select(1, round_id).set_limit(1);\n        let reveal_notes = storage.reveals.get_notes(options);\n\n        if (reveal_notes[0].is_some()) {\n            let reveal_note = reveal_notes[0].unwrap_unchecked();\n            storage.reveals.remove(reveal_note);\n\n            let selector = compute_selector(\"_claim_funds(Field,Field)\");\n            context.call_public_function(context.this_address(), selector, [round_id,secret_hash]);\n        } else {\n            assert(false, \"Reveal note not found\");\n        }\n    }\n\n    /////////////////////////////////////////////////////////////////////\n    //             Public unconstrained external functions             //\n    /////////////////////////////////////////////////////////////////////\n\n    /// @notice         Gets the config note\n    /// @custom:privacy unconstrained\n    /// @return         The config note (divinity, private oracle, token, bet_amount)\n    unconstrained fn get_config_unconstrained() -> ConfigNote {\n        storage.config.view_note()\n    }\n\n    /// @notice         Gets the bet notes for an user\n    /// @custom:privacy unconstrained\n    /// @param          start_offset The offset to start from\n    /// @return         The bet notes (padded with empty notes, up to 10)\n    unconstrained fn get_user_bets_unconstrained(start_offset: u32) -> [Option<BetNote>; 10] {\n        let user_bets_getter_option = NoteViewerOptions::new().set_offset(start_offset);\n        storage.bets.view_notes(user_bets_getter_option)\n    }\n\n    /// @notice         Gets the reveal notes for an user\n    /// @custom:privacy unconstrained\n    /// @param          start_offset The offset to start from\n    /// @return         The reveal notes (padded with empty notes, up to 10)\n    unconstrained fn get_reveal_notes_unconstrained(start_offset: u32) -> [Option<RevealNote>; 10] {\n        let reveal_notes_getter_option = NoteViewerOptions::new().set_offset(start_offset);\n        storage.reveals.view_notes(reveal_notes_getter_option)\n    }\n\n    /// @notice         Compute the note hash and nullifier for a note\n    /// @custom:privacy unconstrained\n    /// @param          contract_address The contract address (this)\n    /// @param          nonce The nonce\n    /// @param          storage_slot The storage slot of the note\n    /// @param          preimage The preimage of the note\n    /// @return         The note hash and nullifier\n    unconstrained fn compute_note_hash_and_nullifier(contract_address: Field, nonce: Field, storage_slot: Field, preimage: [Field; CONFIG_NOTE_LEN]) -> [Field; 4] {\n        let note_header = NoteHeader::new(contract_address, nonce, storage_slot);\n\n        if(storage_slot == BETS_SLOT) {\n            note_utils::compute_note_hash_and_nullifier(BetNoteMethods, note_header, preimage)\n        } else if(storage_slot == REVEALS_SLOT) {\n            note_utils::compute_note_hash_and_nullifier(RevealNoteMethods, note_header, preimage)\n        } else {\n            note_utils::compute_note_hash_and_nullifier(ConfigNoteMethods, note_header, preimage)\n        }\n    }\n\n    unconstrained fn get_phase_length_unconstrained() -> Field {\n        storage.phase_length.read()\n    }\n\n    unconstrained fn get_bet_amount_unconstrained() -> Field {\n        storage.bet_amount.read()\n    }\n\n    unconstrained fn get_oracle_address_unconstrained() -> AztecAddress {\n        storage.oracle_address.read()\n    }\n\n    unconstrained fn get_divinity_address_unconstrained() -> AztecAddress {\n        storage.divinity_address.read()\n    }\n\n    unconstrained fn get_token_address_unconstrained() -> AztecAddress {\n        storage.token_address.read()\n    }\n\n    unconstrained fn get_round_id() -> Field {\n        storage.round_id.read()\n    }\n\n    unconstrained fn get_round_data(round_id: Field) -> RoundData {\n        storage.rounds.at(round_id).read()\n    }\n\n    unconstrained fn get_result(round_id: Field) -> bool {\n        storage.results.at(round_id).read()\n    }\n\n    /// @notice         Gets a bet note by its round id and randomness combination and checks whether these params were nullified\n    /// @custom:privacy unconstrained\n    /// @param          round_id The id of the round this bet was made in\n    /// @param          randomness The randomness the user used for this bet in this round\n    /// @param          bet_id The id of the bet\n    /// @return         A boolean indicating whether a bet with this combination of fields has been initialized or not\n    unconstrained fn is_round_randomness_nullified(round_id: Field, randomness: Field) -> bool {\n        BetNote::is_round_randomness_nullified(round_id, randomness)\n    }\n}",
        "path": "/home/shaito/wonderland/aztec-coin-toss-pvp/src/main.nr"
      },
      "4": {
        "source": "mod poseidon;\nmod mimc;\n\n#[foreign(sha256)]\npub fn sha256<N>(_input: [u8; N]) -> [u8; 32] {}\n\n#[foreign(blake2s)]\npub fn blake2s<N>(_input: [u8; N]) -> [u8; 32] {}\n\nstruct PedersenPoint {\n   x : Field,\n   y : Field,\n}\n\npub fn pedersen_commitment<N>(input: [Field; N]) -> PedersenPoint {\n    pedersen_commitment_with_separator(input, 0)\n}\n\n#[foreign(pedersen)]\npub fn __pedersen_commitment_with_separator<N>(_input: [Field; N], _separator: u32) -> [Field; 2] {}\n\npub fn pedersen_commitment_with_separator<N>(input: [Field; N], separator: u32) -> PedersenPoint {\n    let values = __pedersen_commitment_with_separator(input, separator);\n    PedersenPoint { x: values[0], y: values[1] }\n}\n\npub fn pedersen_hash<N>(input: [Field; N]) -> Field {\n    pedersen_hash_with_separator(input, 0)\n}\n\n#[foreign(pedersen_hash)]\npub fn pedersen_hash_with_separator<N>(_input: [Field; N], _separator: u32) -> Field {}\n\npub fn hash_to_field<N>(_input: [Field; N]) -> Field {\n    let mut inputs_as_bytes = [];\n\n    for i in 0..N {\n        let input_bytes = _input[i].to_le_bytes(32);\n        for i in 0..32 {\n            inputs_as_bytes = inputs_as_bytes.push_back(input_bytes[i]);\n        }\n    }\n\n    let hashed_input = blake2s(inputs_as_bytes);\n    crate::field::bytes32_to_field(hashed_input)\n}\n\n#[foreign(keccak256)]\npub fn keccak256<N>(_input: [u8; N], _message_size: u32) -> [u8; 32] {}\n\n",
        "path": "std/hash.nr"
      },
      "33": {
        "source": "struct Option<T> {\n    _is_some: bool,\n    _value: T,\n}\n\nimpl<T> Option<T> {\n    /// Constructs a None value\n    pub fn none() -> Self {\n        Self { _is_some: false, _value: crate::unsafe::zeroed() }\n    }\n\n    /// Constructs a Some wrapper around the given value\n    pub fn some(_value: T) -> Self {\n        Self { _is_some: true, _value }\n    }\n\n    /// True if this Option is None\n    pub fn is_none(self) -> bool {\n        !self._is_some\n    }\n\n    /// True if this Option is Some\n    pub fn is_some(self) -> bool {\n        self._is_some\n    }\n\n    /// Asserts `self.is_some()` and returns the wrapped value.\n    pub fn unwrap(self) -> T {\n        assert(self._is_some);\n        self._value\n    }\n\n    /// Returns the inner value without asserting `self.is_some()`\n    /// Note that if `self` is `None`, there is no guarantee what value will be returned,\n    /// only that it will be of type `T`.\n    pub fn unwrap_unchecked(self) -> T {\n        self._value\n    }\n\n    /// Returns the wrapped value if `self.is_some()`. Otherwise, returns the given default value.\n    pub fn unwrap_or(self, default: T) -> T {\n        if self._is_some {\n            self._value\n        } else {\n            default\n        }\n    }\n\n    /// Returns the wrapped value if `self.is_some()`. Otherwise, calls the given function to return\n    /// a default value.\n    pub fn unwrap_or_else<Env>(self, default: fn[Env]() -> T) -> T {\n        if self._is_some {\n            self._value\n        } else {\n            default()\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `Some(f(x))`. Otherwise, this returns `None`.\n    pub fn map<U, Env>(self, f: fn[Env](T) -> U) -> Option<U> {\n        if self._is_some {\n            Option::some(f(self._value))\n        } else {\n            Option::none()\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `f(x)`. Otherwise, this returns the given default value.\n    pub fn map_or<U, Env>(self, default: U, f: fn[Env](T) -> U) -> U {\n        if self._is_some {\n            f(self._value)\n        } else {\n            default\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `f(x)`. Otherwise, this returns `default()`.\n    pub fn map_or_else<U, Env1, Env2>(self, default: fn[Env1]() -> U, f: fn[Env2](T) -> U) -> U {\n        if self._is_some {\n            f(self._value)\n        } else {\n            default()\n        }\n    }\n\n    /// Returns None if self is None. Otherwise, this returns `other`.\n    pub fn and(self, other: Self) -> Self {\n        if self.is_none() {\n            Option::none()\n        } else {\n            other\n        }\n    }\n\n    /// If self is None, this returns None. Otherwise, this calls the given function\n    /// with the Some value contained within self, and returns the result of that call.\n    ///\n    /// In some languages this function is called `flat_map` or `bind`.\n    pub fn and_then<U, Env>(self, f: fn[Env](T) -> Option<U>) -> Option<U> {\n        if self._is_some {\n            f(self._value)\n        } else {\n            Option::none()\n        }\n    }\n\n    /// If self is Some, return self. Otherwise, return `other`.\n    pub fn or(self, other: Self) -> Self {\n        if self._is_some {\n            self\n        } else {\n            other\n        }\n    }\n\n    /// If self is Some, return self. Otherwise, return `default()`.\n    pub fn or_else<U, Env>(self, default: fn[Env]() -> Self) -> Self {\n        if self._is_some {\n            self\n        } else {\n            default()\n        }\n    }\n\n    // If only one of the two Options is Some, return that option.\n    // Otherwise, if both options are Some or both are None, None is returned.\n    pub fn xor(self, other: Self) -> Self {\n        if self._is_some {\n            if other._is_some {\n                Option::none()\n            } else {\n                self\n            }\n        } else if other._is_some {\n            other\n        } else {\n            Option::none()\n        }\n    }\n\n    /// Returns `Some(x)` if self is `Some(x)` and `predicate(x)` is true.\n    /// Otherwise, this returns `None`\n    pub fn filter<Env>(self, predicate: fn[Env](T) -> bool) -> Self {\n        if self._is_some {\n            if predicate(self._value) {\n                self\n            } else {\n                Option::none()\n            }\n        } else {\n            Option::none()\n        }\n    }\n\n    /// Flattens an Option<Option<T>> into a Option<T>.\n    /// This returns None if the outer Option is None. Otherwise, this returns the inner Option.\n    pub fn flatten(option: Option<Option<T>>) -> Option<T> {\n        if option._is_some {\n            option._value\n        } else {\n            Option::none()\n        }\n    }\n}\n",
        "path": "std/option.nr"
      },
      "75": {
        "source": "global ARGS_LENGTH: Field = 16;\nglobal RETURN_VALUES_LENGTH: Field = 4;\n\n/**\n * Convention for constant array lengths are mainly divided in 2 classes:\n *  - FUNCTION CALL\n *  - TRANSACTION\n *\n * Agreed convention is to use MAX_XXX_PER_CALL resp. MAX_XXX_PER_TX, where XXX denotes a type of element such as\n * commitment, or nullifier, e.g.,:\n *  - MAX_NEW_NULLIFIERS_PER_CALL\n *  - MAX_NEW_COMMITMENTS_PER_TX\n *\n * In the kernel circuits, we accumulate elements such as commitments and the nullifiers from all functions calls in a\n * transaction. Therefore, we always must have:\n * MAX_XXX_PER_TX ≥ MAX_XXX_PER_CALL\n *\n * For instance:\n * MAX_NEW_COMMITMENTS_PER_TX ≥ MAX_NEW_COMMITMENTS_PER_CALL\n * MAX_NEW_NULLIFIERS_PER_TX ≥ MAX_NEW_NULLIFIERS_PER_CALL\n *\n */\n\n// docs:start:constants\n// \"PER CALL\" CONSTANTS\nglobal MAX_NEW_COMMITMENTS_PER_CALL: Field = 16;\nglobal MAX_NEW_NULLIFIERS_PER_CALL: Field = 16;\nglobal MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL: Field = 4;\nglobal MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL: Field = 4;\nglobal MAX_NEW_L2_TO_L1_MSGS_PER_CALL: Field = 2;\nglobal MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL: Field = 16;\nglobal MAX_PUBLIC_DATA_READS_PER_CALL: Field = 16;\nglobal MAX_READ_REQUESTS_PER_CALL: Field = 32;\nglobal MAX_PENDING_READ_REQUESTS_PER_CALL: Field = 32;\n\n// \"PER TRANSACTION\" CONSTANTS\nglobal MAX_NEW_COMMITMENTS_PER_TX: Field = 64;\nglobal MAX_NEW_NULLIFIERS_PER_TX: Field = 64;\nglobal MAX_PRIVATE_CALL_STACK_LENGTH_PER_TX: Field = 8;\nglobal MAX_PUBLIC_CALL_STACK_LENGTH_PER_TX: Field = 8;\nglobal MAX_NEW_L2_TO_L1_MSGS_PER_TX: Field = 2;\nglobal MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_TX: Field = 16;\nglobal MAX_PUBLIC_DATA_READS_PER_TX: Field = 16;\nglobal MAX_NEW_CONTRACTS_PER_TX: Field = 1;\nglobal MAX_OPTIONALLY_REVEALED_DATA_LENGTH_PER_TX: Field = 4;\nglobal MAX_READ_REQUESTS_PER_TX: Field = 128;\nglobal MAX_PENDING_READ_REQUESTS_PER_TX: Field = 128;\nglobal NUM_ENCRYPTED_LOGS_HASHES_PER_TX: Field = 1;\nglobal NUM_UNENCRYPTED_LOGS_HASHES_PER_TX: Field = 1;\n// docs:end:constants\n\n// ROLLUP CONTRACT CONSTANTS - constants used only in l1-contracts\nglobal NUMBER_OF_L1_L2_MESSAGES_PER_ROLLUP: Field = 16;\n// TODO(961): Use this constant everywhere instead of hard-coded \"2\".\nglobal KERNELS_PER_BASE_ROLLUP: Field = 2;\nglobal MAX_NEW_NULLIFIERS_PER_BASE_ROLLUP: Field = 128;\nglobal MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_BASE_ROLLUP: Field = 32;\nglobal MAX_PUBLIC_DATA_READS_PER_BASE_ROLLUP: Field = 32;\n\n// TREES RELATED CONSTANTS\nglobal VK_TREE_HEIGHT: Field = 3;\nglobal FUNCTION_TREE_HEIGHT: Field = 5;\nglobal CONTRACT_TREE_HEIGHT: Field = 16;\nglobal NOTE_HASH_TREE_HEIGHT: Field = 32;\nglobal PUBLIC_DATA_TREE_HEIGHT: Field = 254;\nglobal NULLIFIER_TREE_HEIGHT: Field = 20;\nglobal L1_TO_L2_MSG_TREE_HEIGHT: Field = 16;\nglobal ROLLUP_VK_TREE_HEIGHT: Field = 8;\n\n// SUB-TREES RELATED CONSTANTS\nglobal CONTRACT_SUBTREE_HEIGHT: Field = 1;\nglobal CONTRACT_SUBTREE_SIBLING_PATH_LENGTH: Field = 15;\nglobal NOTE_HASH_SUBTREE_HEIGHT: Field = 7;\nglobal NOTE_HASH_SUBTREE_SIBLING_PATH_LENGTH: Field = 25;\nglobal NULLIFIER_SUBTREE_HEIGHT: Field = 7;\nglobal ARCHIVE_HEIGHT: Field = 16;\nglobal NULLIFIER_SUBTREE_SIBLING_PATH_LENGTH: Field = 13;\nglobal L1_TO_L2_MSG_SUBTREE_HEIGHT: Field = 4;\nglobal L1_TO_L2_MSG_SUBTREE_SIBLING_PATH_LENGTH: Field = 12;\n\n// MISC CONSTANTS\nglobal FUNCTION_SELECTOR_NUM_BYTES: Field = 4;\nglobal MAPPING_SLOT_PEDERSEN_SEPARATOR: Field = 4;\nglobal NUM_FIELDS_PER_SHA256: Field = 2;\nglobal ARGS_HASH_CHUNK_LENGTH: u32 = 32;\nglobal ARGS_HASH_CHUNK_COUNT: u32 = 16;\n\n\n// NOIR CONSTANTS - constants used only in yarn-packages/noir-contracts\n// Some are defined here because Noir doesn't yet support globals referencing other globals yet.\n// Move these constants to a noir file once the issue bellow is resolved:\n// https://github.com/noir-lang/noir/issues/1734\nglobal L1_TO_L2_MESSAGE_LENGTH: Field = 8;\nglobal L1_TO_L2_MESSAGE_ORACLE_CALL_LENGTH: Field = 26;\nglobal MAX_NOTE_FIELDS_LENGTH: Field = 20;\n// GET_NOTE_ORACLE_RETURN_LENGT = MAX_NOTE_FIELDS_LENGTH + 1 + 2\n// The plus 1 is 1 extra field for nonce.\n// + 2 for EXTRA_DATA: [number_of_return_notes, contract_address]\nglobal GET_NOTE_ORACLE_RETURN_LENGTH: Field = 23;\nglobal MAX_NOTES_PER_PAGE: Field = 10;\n// VIEW_NOTE_ORACLE_RETURN_LENGTH = MAX_NOTES_PER_PAGE * (MAX_NOTE_FIELDS_LENGTH + 1) + 2;\nglobal VIEW_NOTE_ORACLE_RETURN_LENGTH: Field = 212;\nglobal CALL_CONTEXT_LENGTH: Field = 7;\nglobal BLOCK_HEADER_LENGTH: Field = 7;\nglobal FUNCTION_DATA_LENGTH: Field = 4;\nglobal CONTRACT_DEPLOYMENT_DATA_LENGTH: Field = 6;\n// Change this ONLY if you have changed the PrivateCircuitPublicInputs structure.\n// In other words, if the structure/size of the public inputs of a function call changes then we\n// should change this constant as well as the offsets in private_call_stack_item.nr\nglobal PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH: Field = 155;\nglobal CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH: Field = 3;\nglobal CONTRACT_STORAGE_READ_LENGTH: Field = 2;\n// Change this ONLY if you have changed the PublicCircuitPublicInputs structure.\nglobal PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH: Field = 142;\nglobal GET_NOTES_ORACLE_RETURN_LENGTH: Field = 674;\nglobal EMPTY_NULLIFIED_COMMITMENT: Field = 1000000;\nglobal CALL_PRIVATE_FUNCTION_RETURN_SIZE: Field = 161;\nglobal PUBLIC_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH: Field = 87;\nglobal PRIVATE_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH: Field = 144;\nglobal COMMITMENTS_NUM_BYTES_PER_BASE_ROLLUP: Field = 4096;\nglobal NULLIFIERS_NUM_BYTES_PER_BASE_ROLLUP: Field = 4096;\nglobal PUBLIC_DATA_WRITES_NUM_BYTES_PER_BASE_ROLLUP: Field = 2048;\nglobal CONTRACTS_NUM_BYTES_PER_BASE_ROLLUP: Field = 64;\nglobal CONTRACT_DATA_NUM_BYTES_PER_BASE_ROLLUP: Field = 128;\nglobal CONTRACT_DATA_NUM_BYTES_PER_BASE_ROLLUP_UNPADDED: Field = 104;\nglobal L2_TO_L1_MSGS_NUM_BYTES_PER_BASE_ROLLUP: Field = 128;\nglobal LOGS_HASHES_NUM_BYTES_PER_BASE_ROLLUP: Field = 128;\n\n/**\n * Enumerate the hash_indices which are used for pedersen hashing.\n * We start from 1 to avoid the default generators. The generator indices are listed\n * based on the number of elements each index hashes. The following conditions must be met:\n *\n * +-----------+-------------------------------+----------------------+\n * | Hash size | Number of elements hashed (n) | Condition to use     |\n * |-----------+-------------------------------+----------------------|\n * | LOW       | n ≤ 8                         | 0 < hash_index ≤ 32  |\n * | MID       | 8 < n ≤ 16                    | 32 < hash_index ≤ 40 |\n * | HIGH      | 16 < n ≤ 48                   | 40 < hash_index ≤ 48 |\n * +-----------+-------------------------------+----------------------+\n *\n * Note: When modifying, modify `GeneratorIndexPacker` in packer.hpp accordingly.\n */\n// Indices with size ≤ 8\nglobal GENERATOR_INDEX__COMMITMENT = 1;\nglobal GENERATOR_INDEX__COMMITMENT_NONCE = 2;\nglobal GENERATOR_INDEX__UNIQUE_COMMITMENT = 3;\nglobal GENERATOR_INDEX__SILOED_COMMITMENT = 4;\nglobal GENERATOR_INDEX__NULLIFIER = 5;\nglobal GENERATOR_INDEX__INITIALIZATION_NULLIFIER = 6;\nglobal GENERATOR_INDEX__OUTER_NULLIFIER = 7;\nglobal GENERATOR_INDEX__PUBLIC_DATA_READ = 8;\nglobal GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST = 9;\nglobal GENERATOR_INDEX__FUNCTION_DATA = 10;\nglobal GENERATOR_INDEX__FUNCTION_LEAF = 11;\nglobal GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA = 12;\nglobal GENERATOR_INDEX__CONSTRUCTOR = 13;\nglobal GENERATOR_INDEX__CONSTRUCTOR_ARGS = 14;\nglobal GENERATOR_INDEX__CONTRACT_ADDRESS = 15;\nglobal GENERATOR_INDEX__CONTRACT_LEAF = 16;\nglobal GENERATOR_INDEX__CALL_CONTEXT = 17;\nglobal GENERATOR_INDEX__CALL_STACK_ITEM = 18;\nglobal GENERATOR_INDEX__CALL_STACK_ITEM_2 = 19;\nglobal GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET = 20;\nglobal GENERATOR_INDEX__L2_TO_L1_MSG = 21;\nglobal GENERATOR_INDEX__TX_CONTEXT = 22;\nglobal GENERATOR_INDEX__PUBLIC_LEAF_INDEX = 23;\nglobal GENERATOR_INDEX__PUBLIC_DATA_LEAF = 24;\nglobal GENERATOR_INDEX__SIGNED_TX_REQUEST = 25;\nglobal GENERATOR_INDEX__GLOBAL_VARIABLES = 26;\nglobal GENERATOR_INDEX__PARTIAL_ADDRESS = 27;\nglobal GENERATOR_INDEX__BLOCK_HASH = 28;\n// Indices with size ≤ 16\nglobal GENERATOR_INDEX__TX_REQUEST = 33;\nglobal GENERATOR_INDEX__SIGNATURE_PAYLOAD = 34;\n// Indices with size ≤ 44\nglobal GENERATOR_INDEX__VK = 41;\nglobal GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS = 42;\nglobal GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS = 43;\nglobal GENERATOR_INDEX__FUNCTION_ARGS = 44;\n",
        "path": "/protocol_types/constants.nr"
      },
      "92": {
        "source": "use dep::protocol_types::constants::{\n    RETURN_VALUES_LENGTH,\n    MAX_READ_REQUESTS_PER_CALL,\n    MAX_PENDING_READ_REQUESTS_PER_CALL,\n    MAX_NEW_COMMITMENTS_PER_CALL,\n    MAX_NEW_NULLIFIERS_PER_CALL,\n    MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n    MAX_NEW_L2_TO_L1_MSGS_PER_CALL,\n    NUM_FIELDS_PER_SHA256,\n    MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL,\n    MAX_PUBLIC_DATA_READS_PER_CALL,\n    GENERATOR_INDEX__FUNCTION_ARGS,\n    BLOCK_HEADER_LENGTH,\n    CONTRACT_DEPLOYMENT_DATA_LENGTH,\n    CALL_CONTEXT_LENGTH,\n    PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH,\n    PRIVATE_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH,\n    CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH,\n    CONTRACT_STORAGE_READ_LENGTH,\n    PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH,\n    PUBLIC_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH,\n    GENERATOR_INDEX__BLOCK_HASH,\n    GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS,\n    GENERATOR_INDEX__FUNCTION_DATA,\n    GENERATOR_INDEX__PUBLIC_DATA_READ,\n    GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST,\n    GENERATOR_INDEX__CALL_CONTEXT,\n    GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS,\n    GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA,\n};\n\nuse crate::oracle::debug_log;\nuse crate::types::vec::BoundedVec;\nuse crate::types::point::Point;\nuse crate::hash::pedersen_hash;\n\n// docs:start:private-global-variables\nstruct PrivateGlobalVariables {\n    chain_id: Field,\n    version: Field,\n}\n// docs:end:private-global-variables\n\nimpl PrivateGlobalVariables {\n    fn serialize(self) -> [Field; 2] {\n        [self.chain_id, self.version]\n    }\n}\n\n// docs:start:public-global-variables\nstruct PublicGlobalVariables {\n    chain_id: Field,\n    version: Field,\n    block_number: Field,\n    timestamp: Field,\n}\n// docs:end:public-global-variables\n\nimpl PublicGlobalVariables {\n    fn serialize(self) -> [Field; 4] {\n        [self.chain_id, self.version, self.block_number, self.timestamp]\n    }\n}\n\n// docs:start:contract-deployment-data\nstruct ContractDeploymentData {\n    deployer_public_key: Point,\n    constructor_vk_hash : Field,\n    function_tree_root : Field,\n    contract_address_salt : Field,\n    portal_contract_address : Field,\n}\n// docs:end:contract-deployment-data\n\nimpl ContractDeploymentData {\n    fn serialize(self) -> [Field; CONTRACT_DEPLOYMENT_DATA_LENGTH] {\n        [\n            self.deployer_public_key.x,\n            self.deployer_public_key.y,\n            self.constructor_vk_hash,\n            self.function_tree_root,\n            self.contract_address_salt,\n            self.portal_contract_address,\n        ]\n    }\n\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA)\n    }\n}\n\n// PrivateContextInputs are expected to be provided to each private function\n// docs:start:private-context-inputs\nstruct PrivateContextInputs {\n    call_context : CallContext,\n    block_header: BlockHeader,\n    contract_deployment_data: ContractDeploymentData,\n    private_global_variables: PrivateGlobalVariables,\n}\n// docs:end:private-context-inputs\n\n// PublicContextInputs are expected to be provided to each public function\n// docs:start:public-context-inputs\nstruct PublicContextInputs {\n    call_context: CallContext,\n    block_header: BlockHeader,\n\n    public_global_variables: PublicGlobalVariables,\n}\n// docs:end:public-context-inputs\n\n// docs:start:call-context\nstruct CallContext {\n    msg_sender : Field,\n    storage_contract_address : Field,\n    portal_contract_address : Field,\n    function_selector: Field,\n\n    is_delegate_call : bool,\n    is_static_call : bool,\n    is_contract_deployment: bool,\n}\n// docs:end:call-context\n\nimpl CallContext {\n    fn serialize(self) -> [Field; CALL_CONTEXT_LENGTH] {\n        [\n            self.msg_sender,\n            self.storage_contract_address,\n            self.portal_contract_address,\n            self.function_selector,\n            self.is_delegate_call as Field,\n            self.is_static_call as Field,\n            self.is_contract_deployment as Field,\n        ]\n    }\n\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__CALL_CONTEXT)\n    }\n}\n\n// docs:start:block-header\nstruct BlockHeader {\n    note_hash_tree_root : Field,\n    nullifier_tree_root : Field,\n    contract_tree_root : Field,\n    l1_to_l2_messages_tree_root : Field,\n    archive_root: Field,\n    public_data_tree_root: Field,\n    global_variables_hash: Field,\n}\n// docs:end:block-header\n\nimpl BlockHeader {\n    // NOTE: this order must match the order in `private_circuit_public_inputs.hpp`\n    pub fn serialize(self) -> [Field; BLOCK_HEADER_LENGTH] {\n        [\n            self.note_hash_tree_root,\n            self.nullifier_tree_root,\n            self.contract_tree_root,\n            self.l1_to_l2_messages_tree_root,\n            self.archive_root,\n            self.public_data_tree_root,\n            self.global_variables_hash,\n        ]\n    }\n\n    pub fn deserialize(deserialized: [Field; BLOCK_HEADER_LENGTH]) -> Self {\n        BlockHeader {\n            note_hash_tree_root: deserialized[0],\n            nullifier_tree_root: deserialized[1],\n            contract_tree_root: deserialized[2],\n            l1_to_l2_messages_tree_root: deserialized[3],\n            archive_root: deserialized[4],\n            public_data_tree_root: deserialized[5],\n            global_variables_hash: deserialized[6],\n        }\n    }\n\n    pub fn empty() -> Self {\n        Self { note_hash_tree_root: 0, nullifier_tree_root: 0, contract_tree_root: 0, l1_to_l2_messages_tree_root: 0, archive_root: 0, public_data_tree_root: 0, global_variables_hash: 0 }\n    }\n\n    pub fn block_hash(self) -> Field {\n        // TODO(#3442): Unify the ordering in `BlockHeader::serialize` function and the ordering\n        // in the block hash preimage --> This requires changes in the circuits.\n        let inputs = [\n            self.global_variables_hash,\n            self.note_hash_tree_root,\n            self.nullifier_tree_root,\n            self.contract_tree_root,\n            self.l1_to_l2_messages_tree_root,\n            self.public_data_tree_root\n        ];\n        pedersen_hash(inputs, GENERATOR_INDEX__BLOCK_HASH)\n    }\n}\n\nstruct FunctionData {\n    function_selector: Field,\n    is_internal: bool,\n    is_private: bool,\n    is_constructor: bool,\n}\n\nimpl FunctionData {\n    fn hash(self) -> Field {\n        pedersen_hash([\n            self.function_selector,\n            self.is_internal as Field,\n            self.is_private as Field,\n            self.is_constructor as Field,\n        ], GENERATOR_INDEX__FUNCTION_DATA)\n    }\n}\n\nstruct PrivateCircuitPublicInputs {\n    call_context: CallContext,\n    args_hash: Field,\n    return_values: [Field; RETURN_VALUES_LENGTH],\n    read_requests: [Field; crate::abi::MAX_READ_REQUESTS_PER_CALL],\n    pending_read_requests: [Field; crate::abi::MAX_PENDING_READ_REQUESTS_PER_CALL],\n    new_commitments: [Field; MAX_NEW_COMMITMENTS_PER_CALL],\n    new_nullifiers: [Field; MAX_NEW_NULLIFIERS_PER_CALL],\n    nullified_commitments: [Field; MAX_NEW_NULLIFIERS_PER_CALL],\n    private_call_stack: [Field; MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL],\n    public_call_stack: [Field; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n    new_l2_to_l1_msgs: [Field; MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n    // Explore introducing a new type like uint256 (similar to Point), so it's more explicit that\n    // we're talking about a single number backed by two field elements.\n    encrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    unencrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    encrypted_log_preimages_length: Field,\n    unencrypted_log_preimages_length: Field,\n    block_header: BlockHeader,\n    contract_deployment_data: ContractDeploymentData,\n    chain_id: Field,\n    version: Field,\n}\n\nimpl PrivateCircuitPublicInputs {\n    fn hash(self) -> Field {\n        let mut fields: BoundedVec<Field, PRIVATE_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH> = BoundedVec::new(0); \n        fields.push(self.call_context.hash());\n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        fields.push_array(self.read_requests);\n        fields.push_array(self.pending_read_requests);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.nullified_commitments);\n        fields.push_array(self.private_call_stack);\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.encrypted_logs_hash);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.encrypted_log_preimages_length);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_header.serialize());\n        fields.push(self.contract_deployment_data.hash());\n        fields.push(self.chain_id);\n        fields.push(self.version);\n\n        pedersen_hash(fields.storage, GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS)\n    }\n\n    fn serialize(self) -> [Field; PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH] {\n        let mut fields: BoundedVec<Field, PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH> = BoundedVec::new(0); \n        fields.push_array(self.call_context.serialize());\n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        fields.push_array(self.read_requests);\n        fields.push_array(self.pending_read_requests);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.private_call_stack);\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.encrypted_logs_hash);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.encrypted_log_preimages_length);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_header.serialize());\n        fields.push_array(self.contract_deployment_data.serialize());\n        fields.push(self.chain_id);\n        fields.push(self.version);\n        fields.storage\n    }\n}\n\nstruct ContractStorageRead {\n    storage_slot: Field,\n    value: Field,\n}\n\nimpl ContractStorageRead {\n    pub fn serialize(self) -> [Field; CONTRACT_STORAGE_READ_LENGTH] {\n        [self.storage_slot, self.value]\n    }\n\n    pub fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__PUBLIC_DATA_READ)\n    }\n\n    pub fn empty() -> Self {\n        Self { storage_slot: 0, value: 0 }\n    }\n}\n\nstruct ContractStorageUpdateRequest {\n    storage_slot: Field,\n    old_value: Field,\n    new_value: Field,\n}\n\nimpl ContractStorageUpdateRequest {\n    pub fn serialize(self) -> [Field; CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH] {\n        [self.storage_slot, self.old_value, self.new_value]\n    }\n\n    pub fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST)\n    }\n\n    pub fn empty() -> Self {\n        Self { storage_slot: 0, old_value: 0, new_value: 0 }\n    }\n}\n\nstruct PublicCircuitPublicInputs {\n    call_context: CallContext,\n    args_hash: Field,\n    return_values: [Field; RETURN_VALUES_LENGTH],\n    contract_storage_update_requests: [ContractStorageUpdateRequest; MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n    contract_storage_read: [ContractStorageRead; MAX_PUBLIC_DATA_READS_PER_CALL],\n    public_call_stack: [Field; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n    new_commitments: [Field; MAX_NEW_COMMITMENTS_PER_CALL],\n    new_nullifiers: [Field; crate::abi::MAX_NEW_NULLIFIERS_PER_CALL],\n    new_l2_to_l1_msgs: [Field; crate::abi::MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n    unencrypted_logs_hash: [Field; NUM_FIELDS_PER_SHA256],\n    unencrypted_log_preimages_length: Field,\n    block_header: BlockHeader,\n    prover_address: Field,\n}\n\nimpl PublicCircuitPublicInputs {\n    \n    pub fn hash(self) -> Field {\n        let mut inputs: BoundedVec<Field, PUBLIC_CIRCUIT_PUBLIC_INPUTS_HASH_INPUT_LENGTH> = BoundedVec::new(0);\n        inputs.push(self.call_context.hash());\n        inputs.push(self.args_hash);\n        inputs.push_array(self.return_values);\n        for i in 0..MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL {\n            inputs.push(self.contract_storage_update_requests[i].hash());\n        }\n        for i in 0..MAX_PUBLIC_DATA_READS_PER_CALL {\n            inputs.push(self.contract_storage_read[i].hash());\n        }\n        inputs.push_array(self.public_call_stack);\n        inputs.push_array(self.new_commitments);\n        inputs.push_array(self.new_nullifiers);\n        inputs.push_array(self.new_l2_to_l1_msgs);\n\n        inputs.push_array(self.unencrypted_logs_hash);\n        inputs.push(self.unencrypted_log_preimages_length);\n        inputs.push_array(self.block_header.serialize());\n        inputs.push(self.prover_address);\n\n        pedersen_hash(inputs.storage, GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS)\n    }\n\n    pub fn serialize(self) -> [Field; PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH] {\n        let mut fields: BoundedVec<Field, PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH> = BoundedVec::new(0); \n        fields.push_array(self.call_context.serialize());   \n        fields.push(self.args_hash);\n        fields.push_array(self.return_values);\n        for i in 0..MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL {\n            fields.push_array(self.contract_storage_update_requests[i].serialize());\n        }\n        for i in 0..MAX_PUBLIC_DATA_READS_PER_CALL {\n            fields.push_array(self.contract_storage_read[i].serialize());\n        }\n        fields.push_array(self.public_call_stack);\n        fields.push_array(self.new_commitments);\n        fields.push_array(self.new_nullifiers);\n        fields.push_array(self.new_l2_to_l1_msgs);\n        fields.push_array(self.unencrypted_logs_hash);\n        fields.push(self.unencrypted_log_preimages_length);\n        fields.push_array(self.block_header.serialize());\n        fields.push(self.prover_address);\n        fields.storage\n    }\n}\n\nstruct Hasher {\n    fields: [Field],\n}\n\nimpl Hasher {\n    pub fn new()-> Self {\n        Self { fields: [] }\n    }\n\n    pub fn add(&mut self, field: Field) {\n        self.fields = self.fields.push_back(field);\n    }\n\n    pub fn add_multiple<N>(&mut self, fields: [Field; N]) {\n        for i in 0..N {\n            self.fields = self.fields.push_back(fields[i]);\n        }\n    }\n\n    pub fn hash(self) -> Field {\n        hash_args(self.fields)\n    }\n}\n\nglobal ARGS_HASH_CHUNK_LENGTH: u32 = 32;\nglobal ARGS_HASH_CHUNK_COUNT: u32 = 16;\n\npub fn hash_args<N>(args: [Field; N]) -> Field {\n    if args.len() == 0 {\n        0\n    } else {\n        let mut chunks_hashes = [0; ARGS_HASH_CHUNK_COUNT];\n        for i in 0..ARGS_HASH_CHUNK_COUNT {\n            let mut chunk_hash = 0;\n            let start_chunk_index = i * ARGS_HASH_CHUNK_LENGTH;\n            if start_chunk_index < (args.len() as u32) {\n                let mut chunk_args = [0; ARGS_HASH_CHUNK_LENGTH];\n                for j in 0..ARGS_HASH_CHUNK_LENGTH {\n                    let item_index = i * ARGS_HASH_CHUNK_LENGTH + j;\n                    if item_index < (args.len() as u32) {\n                        chunk_args[j] = args[item_index];\n                    }\n                }\n                chunk_hash = pedersen_hash(chunk_args, GENERATOR_INDEX__FUNCTION_ARGS);\n            }\n            chunks_hashes[i] = chunk_hash;\n        }\n        pedersen_hash(chunks_hashes, GENERATOR_INDEX__FUNCTION_ARGS)\n    }\n}\n",
        "path": "/aztec/abi.nr"
      },
      "93": {
        "source": "use dep::protocol_types::constants::GENERATOR_INDEX__CONTRACT_ADDRESS;\nuse crate::hash::pedersen_hash;\n\npub fn compute_address(pub_key_x: Field, pub_key_y: Field, partial_address: Field) -> Field {\n    pedersen_hash([pub_key_x, pub_key_y, partial_address],\n        GENERATOR_INDEX__CONTRACT_ADDRESS)\n}\n",
        "path": "/aztec/address.nr"
      },
      "94": {
        "source": "use dep::protocol_types::constants::{\n    EMPTY_NULLIFIED_COMMITMENT,\n    MAX_NEW_COMMITMENTS_PER_CALL,\n    MAX_NEW_L2_TO_L1_MSGS_PER_CALL,\n    MAX_NEW_NULLIFIERS_PER_CALL,\n    MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_DATA_READS_PER_CALL,\n    MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL,\n    MAX_READ_REQUESTS_PER_CALL,\n    MAX_PENDING_READ_REQUESTS_PER_CALL,\n    NUM_FIELDS_PER_SHA256,\n    RETURN_VALUES_LENGTH,\n};\n\nuse crate::abi;\n\nuse crate::abi::{\n    hash_args,\n    CallContext,\n    ContractDeploymentData,\n    BlockHeader,\n    FunctionData,\n    PrivateCircuitPublicInputs,\n    PublicCircuitPublicInputs,\n};\n\n// TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n// use dep::std::collections::vec::Vec;\n\n// l1 to l2 messaging\nuse crate::messaging::process_l1_to_l2_message;\nuse crate::private_call_stack_item::PrivateCallStackItem;\nuse crate::public_call_stack_item::PublicCallStackItem;\n\nuse crate::types::{\n    vec::BoundedVec,\n    point::Point,\n};\n\nuse crate::utils::arr_copy_slice;\n\nuse crate::oracle::{\n    arguments,\n    call_private_function::call_private_function_internal,\n    public_call::call_public_function_internal,\n    enqueue_public_function_call::enqueue_public_function_call_internal,\n    context::get_portal_address,\n    get_block_header::get_block_header,\n};\n\nuse dep::std::option::Option;\n\n// When finished, one can call .finish() to convert back to the abi\nstruct PrivateContext {\n    // docs:start:private-context\n    inputs: abi::PrivateContextInputs,\n\n    args_hash : Field,\n    return_values : BoundedVec<Field, RETURN_VALUES_LENGTH>,\n\n    read_requests: BoundedVec<Field, MAX_READ_REQUESTS_PER_CALL>,\n    pending_read_requests: BoundedVec<Field, MAX_PENDING_READ_REQUESTS_PER_CALL>,\n\n    new_commitments: BoundedVec<Field, MAX_NEW_COMMITMENTS_PER_CALL>,\n    new_nullifiers: BoundedVec<Field, MAX_NEW_NULLIFIERS_PER_CALL>,\n    nullified_commitments: BoundedVec<Field, MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    private_call_stack : BoundedVec<Field, MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL>,\n    public_call_stack : BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n    new_l2_to_l1_msgs : BoundedVec<Field, MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n    // docs:end:private-context\n\n    block_header: BlockHeader,\n\n    // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    // encrypted_logs_preimages: Vec<Field>,\n    // unencrypted_logs_preimages: Vec<Field>,\n}\n\nimpl PrivateContext {\n    pub fn new(inputs: abi::PrivateContextInputs, args_hash: Field) -> PrivateContext {\n        PrivateContext {\n            inputs: inputs,\n\n            args_hash: args_hash,\n            return_values: BoundedVec::new(0),\n\n            read_requests: BoundedVec::new(0),\n            pending_read_requests: BoundedVec::new(0),\n\n            new_commitments: BoundedVec::new(0),\n            new_nullifiers: BoundedVec::new(0),\n            nullified_commitments: BoundedVec::new(0),\n\n            block_header: inputs.block_header,\n\n            private_call_stack: BoundedVec::new(0),\n            public_call_stack: BoundedVec::new(0),\n            new_l2_to_l1_msgs: BoundedVec::new(0),\n\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n        }\n    }\n\n    pub fn msg_sender(self) -> Field {\n        self.inputs.call_context.msg_sender\n    }\n\n    pub fn this_address(self) -> Field {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    pub fn this_portal_address(self) -> Field {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    pub fn chain_id(self) -> Field {\n        self.inputs.private_global_variables.chain_id\n    }\n\n    pub fn version(self) -> Field {\n        self.inputs.private_global_variables.version\n    }\n\n    pub fn selector(self) -> Field {\n        self.inputs.call_context.function_selector\n    }\n\n    pub fn get_block_header(self, block_number: u32) -> BlockHeader {\n        get_block_header(block_number, self)\n    }\n\n    pub fn finish(self) -> abi::PrivateCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let encrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let unencrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let encrypted_log_preimages_length = 0;\n        let unencrypted_log_preimages_length = 0;\n\n        let priv_circuit_pub_inputs = abi::PrivateCircuitPublicInputs {\n            call_context: self.inputs.call_context,\n            args_hash: self.args_hash,\n            return_values: self.return_values.storage,\n            read_requests: self.read_requests.storage,\n            pending_read_requests: self.pending_read_requests.storage,\n            new_commitments: self.new_commitments.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            nullified_commitments: self.nullified_commitments.storage,\n            private_call_stack: self.private_call_stack.storage,\n            public_call_stack: self.public_call_stack.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            encrypted_logs_hash: encrypted_logs_hash,\n            unencrypted_logs_hash: unencrypted_logs_hash,\n            encrypted_log_preimages_length: encrypted_log_preimages_length,\n            unencrypted_log_preimages_length: unencrypted_log_preimages_length,\n            block_header: self.block_header,\n            contract_deployment_data: self.inputs.contract_deployment_data,\n            chain_id: self.inputs.private_global_variables.chain_id,\n            version: self.inputs.private_global_variables.version,\n        };\n        priv_circuit_pub_inputs\n    }\n\n    pub fn push_read_request(&mut self, read_request: Field) {\n        self.read_requests.push(read_request);\n    }\n\n    pub fn push_pending_read_request(&mut self, pending_read_request: Field) {\n        self.pending_read_requests.push(pending_read_request);\n    }\n\n    pub fn push_new_note_hash(&mut self, note_hash: Field) {\n        self.new_commitments.push(note_hash);\n    }\n\n    // We never push a zero nullified_commitment as zero is used to indicate the end\n    // of a field array in private kernel. This routine transparently replaces a\n    // zero value into the special placeholder: EMPTY_NULLIFIED_COMMITMENT.\n    pub fn push_new_nullifier(&mut self, nullifier: Field, nullified_commitment: Field) {\n        self.new_nullifiers.push(nullifier);\n        let mut non_zero_nullified = nullified_commitment;\n        if (non_zero_nullified == 0) {\n            non_zero_nullified = EMPTY_NULLIFIED_COMMITMENT;\n        }\n        self.nullified_commitments.push(non_zero_nullified);\n    }\n\n    // docs:start:context_message_portal\n    pub fn message_portal(&mut self, content: Field) \n    // docs:end:context_message_portal\n    {\n        self.new_l2_to_l1_msgs.push(content);\n    }\n\n    // PrivateContextInputs must be temporarily passed in to prevent too many unknowns\n    // Note this returns self to get around an issue where mutable structs do not maintain mutations unless reassigned\n    // docs:start:context_consume_l1_to_l2_message\n    // docs:start:consume_l1_to_l2_message\n    pub fn consume_l1_to_l2_message(\n        &mut self,\n        msg_key: Field,\n        content: Field,\n        secret: Field\n    ) \n    // docs:end:context_consume_l1_to_l2_message\n    {\n        let nullifier = process_l1_to_l2_message(self.block_header.l1_to_l2_messages_tree_root, self.this_address(), self.this_portal_address(), self.chain_id(), self.version(), msg_key, content, secret);\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT)\n    }\n    // docs:end:consume_l1_to_l2_message\n\n    pub fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self.inputs;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self.inputs;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn call_private_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n        args: [Field; ARGS_COUNT]\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_private_function_with_packed_args(contract_address, function_selector, args_hash)\n    }\n\n    pub fn call_private_function_no_args(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        self.call_private_function_with_packed_args(contract_address, function_selector, 0)\n    }\n\n    pub fn call_private_function_with_packed_args(\n        &mut self,\n        contract_address: Field,\n        function_selector: Field,\n        args_hash: Field\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let fields = call_private_function_internal(\n            contract_address, \n            function_selector, \n            args_hash\n        );\n        let item = PrivateCallStackItem {\n            contract_address: fields[0],\n            function_data: FunctionData {\n                function_selector: fields[1],\n                is_internal: fields[2] as bool,\n                is_private: fields[3] as bool,\n                is_constructor: fields[4] as bool,\n            },\n            public_inputs: PrivateCircuitPublicInputs {\n                call_context: CallContext {\n                    msg_sender : fields[5],\n                    storage_contract_address : fields[6],\n                    portal_contract_address : fields[7],\n                    function_selector: fields[8], // practically same as fields[1]\n                    is_delegate_call : fields[9] as bool,\n                    is_static_call : fields[10] as bool,\n                    is_contract_deployment: fields[11] as bool,\n                },\n                // TODO handle the offsets as a variable incremented during extraction?\n                args_hash: fields[12],\n                return_values: arr_copy_slice(fields, [0; RETURN_VALUES_LENGTH], 13),\n                read_requests: arr_copy_slice(fields, [0; MAX_READ_REQUESTS_PER_CALL], 17),\n                pending_read_requests: arr_copy_slice(fields, [0; MAX_READ_REQUESTS_PER_CALL], 49),\n                new_commitments: arr_copy_slice(fields, [0; MAX_NEW_COMMITMENTS_PER_CALL], 81),\n                new_nullifiers: arr_copy_slice(fields, [0; MAX_NEW_NULLIFIERS_PER_CALL], 97),\n                nullified_commitments: arr_copy_slice(fields, [0; MAX_NEW_NULLIFIERS_PER_CALL], 113),\n                private_call_stack: arr_copy_slice(fields, [0; MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL], 129),\n                public_call_stack: arr_copy_slice(fields, [0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL], 133),\n                new_l2_to_l1_msgs: arr_copy_slice(fields, [0; MAX_NEW_L2_TO_L1_MSGS_PER_CALL], 137),\n                encrypted_logs_hash: arr_copy_slice(fields, [0; NUM_FIELDS_PER_SHA256], 139),\n                unencrypted_logs_hash: arr_copy_slice(fields, [0; NUM_FIELDS_PER_SHA256], 141),\n                encrypted_log_preimages_length: fields[143],\n                unencrypted_log_preimages_length: fields[144],\n                block_header: BlockHeader {\n                    // Must match order in `private_circuit_public_inputs.hpp`\n                    note_hash_tree_root : fields[145],\n                    nullifier_tree_root : fields[146],\n                    contract_tree_root : fields[147],\n                    l1_to_l2_messages_tree_root : fields[148],\n                    archive_root : fields[149],\n                    public_data_tree_root: fields[150],\n                    global_variables_hash: fields[151],\n                },\n                contract_deployment_data: ContractDeploymentData {\n                    deployer_public_key: Point::new(fields[152], fields[153]),\n                    constructor_vk_hash : fields[154],\n                    function_tree_root : fields[155],\n                    contract_address_salt : fields[156],\n                    portal_contract_address : fields[157],\n                },\n                chain_id: fields[158],\n                version: fields[159],\n            },\n            is_execution_request: fields[160] as bool,\n        };\n        assert(contract_address == item.contract_address);\n        assert(function_selector == item.function_data.function_selector);\n\n        assert(args_hash == item.public_inputs.args_hash);\n\n        assert(item.is_execution_request == false);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        // We are issuing a regular call which is not delegate, static, or deployment. We also constrain\n        // the msg_sender in the nested call to be equal to our address, and the execution context address\n        // for the nested call to be equal to the address we actually called.\n        assert(item.public_inputs.call_context.is_delegate_call == false);\n        assert(item.public_inputs.call_context.is_static_call == false);\n        assert(item.public_inputs.call_context.is_contract_deployment == false);\n        assert(item.public_inputs.call_context.msg_sender == self.inputs.call_context.storage_contract_address);\n        assert(item.public_inputs.call_context.storage_contract_address == contract_address);\n\n        self.private_call_stack.push(item.hash());\n\n        item.public_inputs.return_values\n    }\n\n    pub fn call_public_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field, \n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash)\n    }\n\n    pub fn call_public_function_no_args(\n        &mut self,\n        contract_address: Field, \n        function_selector: Field,\n    ) {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0)\n    }\n\n    pub fn call_public_function_with_packed_args(\n        &mut self,\n        contract_address: Field,\n        function_selector: Field,\n        args_hash: Field\n    ) {\n        let fields = enqueue_public_function_call_internal(\n            contract_address, \n            function_selector, \n            args_hash\n        );\n        let item = PublicCallStackItem {\n            contract_address: fields[0],\n            function_data: FunctionData {\n                function_selector: fields[1],\n                is_internal: fields[2] as bool,\n                is_private: fields[3] as bool,\n                is_constructor: fields[4] as bool,\n            },\n            public_inputs: PublicCircuitPublicInputs {\n                call_context: CallContext {\n                    msg_sender : fields[5],\n                    storage_contract_address : fields[6],\n                    portal_contract_address : fields[7],\n                    function_selector: fields[8], // practically same as fields[1]\n                    is_delegate_call : fields[9] as bool,\n                    is_static_call : fields[10] as bool,\n                    is_contract_deployment: fields[11] as bool,\n                },\n                args_hash: fields[12],\n                return_values: [0; RETURN_VALUES_LENGTH],\n                contract_storage_update_requests: [ContractStorageUpdateRequest::empty(); MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n                contract_storage_read: [ContractStorageRead::empty(); MAX_PUBLIC_DATA_READS_PER_CALL],\n                public_call_stack: [0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n                new_commitments: [0; MAX_NEW_COMMITMENTS_PER_CALL],\n                new_nullifiers: [0; MAX_NEW_NULLIFIERS_PER_CALL],\n                new_l2_to_l1_msgs:[0; MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n                unencrypted_logs_hash:[0; NUM_FIELDS_PER_SHA256],\n                unencrypted_log_preimages_length: 0,\n                block_header: BlockHeader::empty(),\n                prover_address: 0,\n            },\n            is_execution_request: true,\n        };\n\n        assert(contract_address == item.contract_address);\n        assert(function_selector == item.function_data.function_selector);\n        \n        assert(args_hash == item.public_inputs.args_hash);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        // We are issuing a regular call which is not delegate, static, or deployment. We also constrain\n        // the msg_sender in the nested call to be equal to our address, and the execution context address\n        // for the nested call to be equal to the address we actually called.\n        assert(item.public_inputs.call_context.is_delegate_call == false);\n        assert(item.public_inputs.call_context.is_static_call == false);\n        assert(item.public_inputs.call_context.is_contract_deployment == false);\n        assert(item.public_inputs.call_context.msg_sender == self.inputs.call_context.storage_contract_address);\n        assert(item.public_inputs.call_context.storage_contract_address == contract_address);\n\n        self.public_call_stack.push(item.hash());\n    }\n}\n\nuse crate::abi::{\n    ContractStorageRead,\n    ContractStorageUpdateRequest\n};\n\nstruct PublicContext {\n    inputs: abi::PublicContextInputs,\n\n    args_hash : Field,\n    return_values : BoundedVec<Field, RETURN_VALUES_LENGTH>,\n\n    contract_storage_update_requests: BoundedVec<ContractStorageUpdateRequest, MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL>,\n    contract_storage_read: BoundedVec<ContractStorageRead, MAX_PUBLIC_DATA_READS_PER_CALL>,\n    public_call_stack: BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n\n    new_commitments: BoundedVec<Field, MAX_NEW_COMMITMENTS_PER_CALL>,\n    new_nullifiers: BoundedVec<Field, crate::abi::MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    new_l2_to_l1_msgs: BoundedVec<Field, crate::abi::MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n\n    unencrypted_logs_hash: BoundedVec<Field, NUM_FIELDS_PER_SHA256>,\n    unencrypted_logs_preimages_length: Field,\n\n    block_header: BlockHeader,\n    prover_address: Field,\n}\n\nimpl PublicContext {\n    pub fn new(inputs: abi::PublicContextInputs, args_hash: Field) -> PublicContext {\n        let empty_storage_read = ContractStorageRead::empty();\n        let empty_storage_update = ContractStorageUpdateRequest::empty();\n        PublicContext {\n            inputs: inputs,\n\n            args_hash: args_hash,\n            return_values: BoundedVec::new(0),\n\n            contract_storage_update_requests: BoundedVec::new(empty_storage_update),\n            contract_storage_read: BoundedVec::new(empty_storage_read),\n            public_call_stack: BoundedVec::new(0),\n\n            new_commitments: BoundedVec::new(0),\n            new_nullifiers: BoundedVec::new(0),\n\n            new_l2_to_l1_msgs: BoundedVec::new(0),\n\n            \n            unencrypted_logs_hash: BoundedVec::new(0),\n            unencrypted_logs_preimages_length: 0,\n\n            block_header: inputs.block_header,\n            prover_address: 0,\n\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n        }\n    }\n\n    pub fn msg_sender(self) -> Field {\n        self.inputs.call_context.msg_sender\n    }\n\n    pub fn this_address(self) -> Field {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    pub fn this_portal_address(self) -> Field {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    pub fn chain_id(self) -> Field {\n        self.inputs.public_global_variables.chain_id\n    }\n\n    pub fn version(self) -> Field {\n        self.inputs.public_global_variables.version\n    }\n\n    pub fn selector(self) -> Field {\n        self.inputs.call_context.function_selector\n    }\n\n    pub fn block_number(self) -> Field {\n        self.inputs.public_global_variables.block_number\n    }\n\n    pub fn timestamp(self) -> Field {\n        self.inputs.public_global_variables.timestamp\n    }\n\n    pub fn finish(self) -> abi::PublicCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let unencrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let unencrypted_log_preimages_length = 0;\n\n\n        // Compute the public call stack hashes\n        let pub_circuit_pub_inputs = abi::PublicCircuitPublicInputs {\n            call_context: self.inputs.call_context, // Done\n            args_hash: self.args_hash, // Done\n            contract_storage_update_requests: self.contract_storage_update_requests.storage,\n            contract_storage_read: self.contract_storage_read.storage,\n            return_values: self.return_values.storage,\n            new_commitments: self.new_commitments.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            public_call_stack: self.public_call_stack.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            unencrypted_logs_hash: unencrypted_logs_hash,\n            unencrypted_log_preimages_length: unencrypted_log_preimages_length,\n            block_header: self.inputs.block_header,\n            prover_address: self.prover_address,\n        };\n        pub_circuit_pub_inputs\n    }\n\n    pub fn push_new_note_hash(&mut self, note_hash: Field) {\n        self.new_commitments.push(note_hash);\n    }\n\n    pub fn push_new_nullifier(&mut self, nullifier: Field, _nullified_commitment: Field) {\n        self.new_nullifiers.push(nullifier);\n    }\n\n    pub fn message_portal(&mut self, content: Field) {\n        self.new_l2_to_l1_msgs.push(content);\n    }\n\n    // PrivateContextInputs must be temporarily passed in to prevent too many unknowns\n    // Note this returns self to get around an issue where mutable structs do not maintain mutations unless reassigned\n    pub fn consume_l1_to_l2_message(&mut self, msg_key: Field, content: Field, secret: Field) {\n        let this = (*self).this_address();\n        let nullifier = process_l1_to_l2_message(self.block_header.l1_to_l2_messages_tree_root, this, self.this_portal_address(), self.chain_id(), self.version(), msg_key, content, secret);\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT)\n    }\n\n    pub fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn call_public_function<ARGS_COUNT>(\n        _self: Self,\n        contract_address: Field, \n        function_selector: Field,\n        args: [Field; ARGS_COUNT],\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = abi::hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        call_public_function_internal(\n            contract_address, \n            function_selector, \n            args_hash,\n        )\n    }\n\n    pub fn call_public_function_no_args(\n        _self: Self,\n        contract_address: Field, \n        function_selector: Field,\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        call_public_function_internal(\n            contract_address, \n            function_selector, \n            0,\n        )\n    }\n\n}\n\nstruct Context {\n    private: Option<&mut PrivateContext>,\n    public: Option<&mut PublicContext>,\n}\n\nimpl Context {\n    pub fn private(context: &mut PrivateContext) -> Context {\n        Context {\n            private: Option::some(context),\n            public: Option::none()\n        }\n    }\n\n    pub fn public(context: &mut PublicContext) -> Context {\n        Context {\n            public: Option::some(context),\n            private: Option::none()\n        }\n    }\n\n    pub fn none() -> Context {\n        Context {\n            public: Option::none(),\n            private: Option::none()\n        }\n    }\n}\n",
        "path": "/aztec/context.nr"
      },
      "95": {
        "source": "use dep::std::hash::{pedersen_hash_with_separator, sha256};\nuse dep::protocol_types::constants::{\n  GENERATOR_INDEX__SIGNATURE_PAYLOAD,\n  GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET,\n};\n\npub fn sha256_to_field<N>(bytes_to_hash: [u8; N]) -> Field {\n    let sha256_hashed = sha256(bytes_to_hash);\n\n    // Convert it to a field element\n    let mut v = 1;\n    let mut high = 0 as Field;\n    let mut low = 0 as Field;\n\n    for i in 0..16 {\n        high = high + (sha256_hashed[15 - i] as Field) * v;\n        low = low + (sha256_hashed[16 + 15 - i] as Field) * v;\n        v = v * 256;\n    }\n\n    // Abuse that a % p + b % p = (a + b) % p and that low < p\n    let hash_in_a_field = low + high * v;\n\n    hash_in_a_field\n}\n\npub fn compute_secret_hash(secret: Field) -> Field {\n    // TODO(#1205) This is probably not the right index to use\n    pedersen_hash([secret], GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET)\n}\n\npub fn pedersen_hash<N>(inputs: [Field; N], hash_index: u32) -> Field {\n    pedersen_hash_with_separator(inputs, hash_index)\n}\n",
        "path": "/aztec/hash.nr"
      },
      "102": {
        "source": "use crate::context::{PrivateContext, PublicContext};\nuse crate::oracle;\nuse crate::types::point::Point;\n\npub fn emit_encrypted_log<N>(\n    context: &mut PrivateContext,\n    contract_address: Field,\n    storage_slot: Field,\n    encryption_pub_key: Point,\n    log: [Field; N]\n) {\n    let _ = oracle::logs::emit_encrypted_log(contract_address, storage_slot, encryption_pub_key, log);\n    context.accumulate_encrypted_logs(log);\n}\n\npub fn emit_unencrypted_log<T>(context: &mut PublicContext, log: T) {\n    let contract_address = context.this_address();\n    let event_selector = 5; // TODO: compute actual event selector.\n    let _ = oracle::logs::emit_unencrypted_log(contract_address, event_selector, log);\n    // context.accumulate_unencrypted_logs(log);\n}\n\n// TODO: We might want to remove this since emitting unencrypted logs from private functions is violating privacy.\n// --> might be a better approach to force devs to make a public function call that emits the log if needed then\n// it would be less easy to accidentally leak information.\n// If we decide to keep this function around would make sense to wait for traits and then merge it with emit_unencrypted_log.\npub fn emit_unencrypted_log_from_private<T>(context: &mut PrivateContext, log: T) {\n    let contract_address = context.this_address();\n    let event_selector = 5; // TODO: compute actual event selector.\n    let _ = oracle::logs::emit_unencrypted_log(contract_address, event_selector, log);\n    // context.accumulate_unencrypted_logs(log);\n}\n",
        "path": "/aztec/log.nr"
      },
      "107": {
        "source": "use crate::abi::PublicContextInputs;\nuse crate::context::{\n    PrivateContext,\n    PublicContext,\n};\nuse crate::note::{\n    note_header::NoteHeader,\n    note_interface::NoteInterface,\n    utils::compute_inner_note_hash,\n};\nuse crate::oracle::notes::{notify_created_note, notify_nullified_note};\nuse dep::protocol_types::constants::EMPTY_NULLIFIED_COMMITMENT;\n\npub fn create_note<Note, N>(\n    context: &mut PrivateContext,\n    storage_slot: Field,\n    note: &mut Note,\n    note_interface: NoteInterface<Note, N>,\n    broadcast: bool\n) {\n    let contract_address = (*context).this_address();\n\n    let header = NoteHeader { contract_address, storage_slot, nonce: 0, is_transient: true };\n    let set_header = note_interface.set_header;\n    set_header(note, header);\n    let inner_note_hash = compute_inner_note_hash(note_interface, *note);\n\n    let serialize = note_interface.serialize;\n    let serialized_note = serialize(*note);\n    assert(notify_created_note(storage_slot, serialized_note, inner_note_hash) == 0);\n\n    context.push_new_note_hash(inner_note_hash);\n\n    if broadcast {\n        let broadcast = note_interface.broadcast;\n        broadcast(context, storage_slot, *note);\n    }\n}\n\npub fn create_note_hash_from_public<Note, N>(\n    context: &mut PublicContext,\n    storage_slot: Field,\n    note: &mut Note,\n    note_interface: NoteInterface<Note, N>\n) {\n    let contract_address = (*context).this_address();\n\n    let header = NoteHeader { contract_address, storage_slot, nonce: 0, is_transient: true };\n    let set_header = note_interface.set_header;\n    set_header(note, header);\n    let inner_note_hash = compute_inner_note_hash(note_interface, *note);\n\n    context.push_new_note_hash(inner_note_hash);\n}\n\npub fn destroy_note<Note, N>(context: &mut PrivateContext, note: Note, note_interface: NoteInterface<Note, N>) {\n    let mut nullifier = 0;\n    let mut nullified_commitment: Field = EMPTY_NULLIFIED_COMMITMENT;\n    let compute_nullifier = note_interface.compute_nullifier;\n    nullifier = compute_nullifier(note);\n\n    // We also need the note commitment corresponding to the \"nullifier\"\n    let get_header = note_interface.get_header;\n    let header = get_header(note);\n    // `nullified_commitment` is used to inform the kernel which pending commitment\n    // the nullifier corresponds to so they can be matched and both squashed/deleted.\n    // nonzero nonce implies \"persistable\" nullifier (nullifies a persistent/in-tree\n    // commitment) in which case `nullified_commitment` is not used since the kernel\n    // just siloes and forwards the nullifier to its output.\n    if (header.is_transient) {\n        // TODO(1718): Can we reuse the note commitment computed in `compute_nullifier`?\n        nullified_commitment = compute_inner_note_hash(note_interface, note);\n    }\n    assert(notify_nullified_note(nullifier, nullified_commitment) == 0);\n\n    context.push_new_nullifier(nullifier, nullified_commitment)\n}\n",
        "path": "/aztec/note/lifecycle.nr"
      },
      "108": {
        "source": "use dep::std::option::Option;\nuse dep::protocol_types::constants::{\n    MAX_READ_REQUESTS_PER_CALL,\n    GET_NOTE_ORACLE_RETURN_LENGTH,\n    GET_NOTES_ORACLE_RETURN_LENGTH,\n    MAX_NOTES_PER_PAGE,\n    VIEW_NOTE_ORACLE_RETURN_LENGTH,\n};\nuse crate::context::PrivateContext;\nuse crate::note::{\n    note_getter_options::{NoteGetterOptions, Select, Sort, SortOrder},\n    note_interface::NoteInterface,\n    note_viewer_options::NoteViewerOptions,\n    utils::compute_note_hash_for_read_or_nullify,\n};\nuse crate::oracle;\nuse crate::types::vec::BoundedVec;\n\nfn check_note_header<Note, N>(context: PrivateContext, storage_slot: Field, note_interface: NoteInterface<Note, N>, note: Note) {\n    let get_header = note_interface.get_header;\n    let header = get_header(note);\n    let contract_address = context.this_address();\n    assert(header.contract_address == contract_address);\n    assert(header.storage_slot == storage_slot);\n}\n\nfn check_note_fields<N>(fields: [Field; N], selects: BoundedVec<Option<Select>, N>) {\n    for i in 0..selects.len {\n        let select = selects.get_unchecked(i).unwrap_unchecked();\n        assert(fields[select.field_index] == select.value, \"Mismatch return note field.\");\n    }\n}\n\nfn check_notes_order<N>(fields_0: [Field; N], fields_1: [Field; N], sorts: BoundedVec<Option<Sort>, N>) {\n    for i in 0..sorts.len {\n        let sort = sorts.get_unchecked(i).unwrap_unchecked();\n        let eq = fields_0[sort.field_index] == fields_1[sort.field_index];\n        let lt = fields_0[sort.field_index] as u120 < fields_1[sort.field_index] as u120;\n        if sort.order == SortOrder.ASC {\n            assert(eq | lt, \"Return notes not sorted in ascending order.\");\n        } else if !eq {\n            assert(!lt, \"Return notes not sorted in descending order.\");\n        }\n    }\n}\n\npub fn get_note<Note, N>(context: &mut PrivateContext, storage_slot: Field, note_interface: NoteInterface<Note, N>) -> Note {\n    let note = get_note_internal(storage_slot, note_interface);\n\n    check_note_header(*context, storage_slot, note_interface, note);\n\n    let note_hash_for_read_request = compute_note_hash_for_read_or_nullify(note_interface, note);\n\n    context.push_read_request(note_hash_for_read_request);\n    note\n}\n\npub fn get_notes<Note, N, FILTER_ARGS>(\n    context: &mut PrivateContext,\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    options: NoteGetterOptions<Note, N, FILTER_ARGS>\n) -> [Option<Note>; MAX_READ_REQUESTS_PER_CALL] {\n    let opt_notes = get_notes_internal(storage_slot, note_interface, options);\n    let mut num_notes = 0;\n    let mut prev_fields = [0; N];\n    for i in 0..opt_notes.len() {\n        let opt_note = opt_notes[i];\n        if opt_note.is_some() {\n            let note = opt_note.unwrap_unchecked();\n            let serialize = note_interface.serialize;\n            let fields = serialize(note);\n            check_note_header(*context, storage_slot, note_interface, note);\n            check_note_fields(fields, options.selects);\n            if i != 0 {\n                check_notes_order(prev_fields, fields, options.sorts);\n            }\n            prev_fields = fields;\n\n            let note_hash_for_read_request = compute_note_hash_for_read_or_nullify(note_interface, note);\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1410): test to ensure\n            // failure if malicious oracle injects 0 nonce here for a \"pre-existing\" note.\n            context.push_read_request(note_hash_for_read_request);\n\n            num_notes += 1;\n        };\n    }\n    if options.limit != 0 {\n        assert(num_notes <= options.limit, \"Invalid number of return notes.\");\n    }\n    opt_notes\n}\n\nunconstrained fn get_note_internal<Note, N>(storage_slot: Field, note_interface: NoteInterface<Note, N>) -> Note {\n    let placeholder_note = [Option::none()];\n    let placeholder_fields = [0; GET_NOTE_ORACLE_RETURN_LENGTH];\n    oracle::notes::get_notes(storage_slot,\n        note_interface,\n        0,\n        [],\n        [],\n        [],\n        [],\n        1, // limit\n        0, // offset\n        placeholder_note,\n        placeholder_fields)[0].unwrap() // Notice: we don't allow dummies to be returned from get_note (singular).\n}\n\nunconstrained fn get_notes_internal<Note, N, FILTER_ARGS>(\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    options: NoteGetterOptions<Note, N, FILTER_ARGS>\n) -> [Option<Note>; MAX_READ_REQUESTS_PER_CALL] {\n    let (num_selects, select_by, select_values, sort_by, sort_order) = flatten_options(options.selects, options.sorts);\n    let placeholder_opt_notes = [Option::none(); MAX_READ_REQUESTS_PER_CALL];\n    let placeholder_fields = [0; GET_NOTES_ORACLE_RETURN_LENGTH];\n    let opt_notes = oracle::notes::get_notes(storage_slot,\n        note_interface,\n        num_selects,\n        select_by,\n        select_values,\n        sort_by,\n        sort_order,\n        options.limit,\n        options.offset,\n        placeholder_opt_notes,\n        placeholder_fields);\n\n    let filter = options.filter;\n    let filter_args = options.filter_args;\n    filter(opt_notes, filter_args)\n}\n\nunconstrained pub fn view_notes<Note, N>(storage_slot: Field, note_interface: NoteInterface<Note, N>, options: NoteViewerOptions<Note, N>) -> [Option<Note>; MAX_NOTES_PER_PAGE] {\n    let (num_selects, select_by, select_values, sort_by, sort_order) = flatten_options(options.selects, options.sorts);\n    let placeholder_opt_notes = [Option::none(); MAX_NOTES_PER_PAGE];\n    let placeholder_fields = [0; VIEW_NOTE_ORACLE_RETURN_LENGTH];\n    oracle::notes::get_notes(storage_slot,\n        note_interface,\n        num_selects,\n        select_by,\n        select_values,\n        sort_by,\n        sort_order,\n        options.limit,\n        options.offset,\n        placeholder_opt_notes,\n        placeholder_fields)\n}\n\nunconstrained fn flatten_options<Note, N>(selects: BoundedVec<Option<Select>, N>, sorts: BoundedVec<Option<Sort>, N>) -> (u8, [u8; N], [Field; N], [u8; N], [u2; N]) {\n    let mut num_selects = 0;\n    let mut select_by = [0; N];\n    let mut select_values = [0; N];\n    for i in 0..selects.len {\n        let select = selects.get(i);\n        if select.is_some() {\n            select_by[num_selects] = select.unwrap_unchecked().field_index;\n            select_values[num_selects] = select.unwrap_unchecked().value;\n            num_selects += 1;\n        };\n    }\n\n    let mut sort_by = [0; N];\n    let mut sort_order = [0; N];\n    for i in 0..sorts.len {\n        let sort = sorts.get(i);\n        if sort.is_some() {\n            sort_by[i] = sort.unwrap_unchecked().field_index;\n            sort_order[i] = sort.unwrap_unchecked().order;\n        };\n    }\n\n    (num_selects, select_by, select_values, sort_by, sort_order)\n}\n",
        "path": "/aztec/note/note_getter.nr"
      },
      "110": {
        "source": "use crate::hash::pedersen_hash;\nuse dep::protocol_types::constants::{GENERATOR_INDEX__UNIQUE_COMMITMENT, GENERATOR_INDEX__SILOED_COMMITMENT};\n\npub fn compute_inner_hash(storage_slot: Field, note_hash: Field) -> Field {\n    // TODO(#1205) Do we need a generator index here?\n    pedersen_hash([storage_slot, note_hash], 0)\n}\n\npub fn compute_siloed_hash(contract_address: Field, inner_note_hash: Field) -> Field {\n    let inputs = [contract_address, inner_note_hash];\n    pedersen_hash(inputs, GENERATOR_INDEX__SILOED_COMMITMENT)\n}\n\npub fn compute_unique_hash(nonce: Field, siloed_note_hash: Field) -> Field {\n    let inputs = [nonce, siloed_note_hash];\n    pedersen_hash(inputs, GENERATOR_INDEX__UNIQUE_COMMITMENT)\n}\n",
        "path": "/aztec/note/note_hash.nr"
      },
      "114": {
        "source": "use dep::protocol_types::constants::GENERATOR_INDEX__OUTER_NULLIFIER;\nuse crate::{\n    note::{\n        note_hash::{compute_inner_hash, compute_siloed_hash, compute_unique_hash},\n        note_header::NoteHeader,\n        note_interface::NoteInterface,\n    },\n    utils::arr_copy_slice,\n    hash::pedersen_hash,\n};\n\npub fn compute_inner_note_hash<Note, N>(note_interface: NoteInterface<Note, N>, note: Note) -> Field {\n    let get_header = note_interface.get_header;\n    let header = get_header(note);\n\n    let compute_note_hash = note_interface.compute_note_hash;\n    let note_hash = compute_note_hash(note);\n\n    compute_inner_hash(header.storage_slot, note_hash)\n}\n\npub fn compute_siloed_note_hash<Note, N>(note_interface: NoteInterface<Note, N>, note_with_header: Note) -> Field {\n    let get_header = note_interface.get_header;\n    let header = get_header(note_with_header);\n\n    let inner_note_hash = compute_inner_note_hash(note_interface, note_with_header);\n\n    compute_siloed_hash(header.contract_address, inner_note_hash)\n}\n\npub fn compute_unique_siloed_note_hash<Note, N>(note_interface: NoteInterface<Note, N>, note_with_header: Note) -> Field {\n    let get_header = note_interface.get_header;\n    let header = get_header(note_with_header);\n\n    let siloed_note_hash = compute_siloed_note_hash(note_interface, note_with_header);\n\n    compute_unique_hash(header.nonce, siloed_note_hash)\n}\n\npub fn compute_siloed_nullifier<Note, N>(note_interface: NoteInterface<Note, N>, note_with_header: Note) -> Field {\n    let get_header = note_interface.get_header;\n    let header = get_header(note_with_header);\n\n    let compute_nullifier = note_interface.compute_nullifier;\n    let inner_nullifier = compute_nullifier(note_with_header);\n\n    let input = [header.contract_address, inner_nullifier];\n    pedersen_hash(input, GENERATOR_INDEX__OUTER_NULLIFIER)\n}\n\npub fn compute_note_hash_for_read_or_nullify<Note, N>(note_interface: NoteInterface<Note, N>, note_with_header: Note) -> Field {\n    let get_header = note_interface.get_header;\n    let header = get_header(note_with_header);\n\n    // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1386)\n    if (header.is_transient) {\n        // If a note is transient, we just read the inner_note_hash (kernel will silo by contract address).\n        compute_inner_note_hash(note_interface, note_with_header)\n    } else if (header.nonce == 0) {\n        // If not transient and nonce is zero, that means we are reading a public note.\n        compute_siloed_note_hash(note_interface, note_with_header)\n    } else {\n        // When nonce is nonzero, that means we are reading a settled note (from tree) created in a\n        // previous TX. So we need the unique_siloed_note_hash which has already been hashed with\n        // contract address and then nonce. This hash will match the existing leaf in the private\n        // data tree, so the kernel can just perform a membership check directly on this hash/leaf.\n        compute_unique_siloed_note_hash(note_interface, note_with_header)\n    }\n}\n\npub fn compute_note_hash_and_nullifier<Note, N, S>(note_interface: NoteInterface<Note, N>, note_header: NoteHeader, serialized_note: [Field; S]) -> [Field; 4] {\n    let deserialize = note_interface.deserialize;\n    let set_header = note_interface.set_header;\n    let mut note = deserialize(arr_copy_slice(serialized_note, [0; N], 0));\n    set_header(&mut note, note_header);\n\n    let compute_note_hash = note_interface.compute_note_hash;\n    let note_hash = compute_note_hash(note);\n    let inner_note_hash = compute_inner_hash(note_header.storage_slot, note_hash);\n\n    let siloed_note_hash = compute_siloed_hash(note_header.contract_address, inner_note_hash);\n\n    let unique_siloed_note_hash = compute_unique_hash(note_header.nonce, siloed_note_hash);\n\n    let compute_nullifier = note_interface.compute_nullifier;\n    let inner_nullifier = compute_nullifier(note);\n\n    [inner_note_hash, siloed_note_hash, unique_siloed_note_hash, inner_nullifier]\n}\n",
        "path": "/aztec/note/utils.nr"
      },
      "116": {
        "source": "#[oracle(packArguments)]\nfn pack_arguments_oracle<N>(_args: [Field; N]) -> Field {}\n\n// TODO: explain what this does.\nunconstrained pub fn pack_arguments<N>(args: [Field; N]) -> Field {\n    pack_arguments_oracle(args)\n}\n",
        "path": "/aztec/oracle/arguments.nr"
      },
      "117": {
        "source": "use dep::protocol_types::constants::CALL_PRIVATE_FUNCTION_RETURN_SIZE;\n\n#[oracle(callPrivateFunction)]\nfn call_private_function_oracle(_contract_address: Field, _function_selector: Field, _args_hash: Field) -> [Field; CALL_PRIVATE_FUNCTION_RETURN_SIZE] {}\n\nunconstrained pub fn call_private_function_internal(contract_address: Field, function_selector: Field, args_hash: Field) -> [Field; CALL_PRIVATE_FUNCTION_RETURN_SIZE] {\n    call_private_function_oracle(contract_address, function_selector, args_hash)\n}\n",
        "path": "/aztec/oracle/call_private_function.nr"
      },
      "123": {
        "source": "use crate::types::point::Point;\nuse crate::address::compute_address;\n\n#[oracle(getPublicKeyAndPartialAddress)]\nfn get_public_key_and_partial_address_oracle(_address: Field) -> [Field; 3] {}\n\nunconstrained fn get_public_key_and_partial_address_internal(address: Field) -> [Field; 3] {\n    get_public_key_and_partial_address_oracle(address)\n}\n\npub fn get_public_key(address: Field) -> Point {\n    let result = get_public_key_and_partial_address_internal(address);\n    let pub_key_x = result[0];\n    let pub_key_y = result[1];\n    let partial_address = result[2];\n\n    let calculated_address = compute_address(pub_key_x, pub_key_y, partial_address);\n    assert(calculated_address == address);\n\n    Point::new(pub_key_x, pub_key_y)\n}\n",
        "path": "/aztec/oracle/get_public_key.nr"
      },
      "127": {
        "source": "\n// contract_address + \n// args_hash +\n// crate::abi::FUNCTION_DATA_SIZE +\n// crate::abi::CALL_CONTEXT_SIZE +\n// = 2 + 4 + 7\nglobal ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE: Field = 13;\n\n#[oracle(enqueuePublicFunctionCall)]\nfn enqueue_public_function_call_oracle(_contract_address: Field, _function_selector: Field, _args_hash: Field) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE] {}\n\nunconstrained pub fn enqueue_public_function_call_internal(contract_address: Field, function_selector: Field, args_hash: Field) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE] {\n    enqueue_public_function_call_oracle(contract_address, function_selector, args_hash)\n}\n",
        "path": "/aztec/oracle/enqueue_public_function_call.nr"
      },
      "129": {
        "source": "use dep::protocol_types::constants::RETURN_VALUES_LENGTH;\n\n#[oracle(callPublicFunction)]\nfn call_public_function_oracle(_contract_address: Field, _function_selector: Field, _args_hash: Field) -> [Field; RETURN_VALUES_LENGTH] {}\n\nunconstrained pub fn call_public_function_internal(contract_address: Field, function_selector: Field, args_hash: Field) -> [Field; RETURN_VALUES_LENGTH] {\n    call_public_function_oracle(contract_address, function_selector, args_hash)\n}\n",
        "path": "/aztec/oracle/public_call.nr"
      },
      "130": {
        "source": "use dep::std::option::Option;\nuse crate::note::{\n    note_header::NoteHeader,\n    note_interface::NoteInterface,\n};\nuse crate::utils::arr_copy_slice;\n\n#[oracle(notifyCreatedNote)]\nfn notify_created_note_oracle<N>(_storage_slot: Field, _serialized_note: [Field; N], _inner_note_hash: Field) -> Field {}\n\nunconstrained pub fn notify_created_note<N>(storage_slot: Field, serialized_note: [Field; N], inner_note_hash: Field) -> Field {\n    notify_created_note_oracle(storage_slot, serialized_note, inner_note_hash)\n}\n\n#[oracle(notifyNullifiedNote)]\nfn notify_nullified_note_oracle<N>(_nullifier: Field, _inner_note_hash: Field) -> Field {}\n\nunconstrained pub fn notify_nullified_note<N>(nullifier: Field, inner_note_hash: Field) -> Field {\n    notify_nullified_note_oracle(nullifier, inner_note_hash)\n}\n\n#[oracle(getNotes)]\nfn get_notes_oracle<N, S>(\n    _storage_slot: Field,\n    _num_selects: u8,\n    _select_by: [u8; N],\n    _select_values: [Field; N],\n    _sort_by: [u8; N],\n    _sort_order: [u2; N],\n    _limit: u32,\n    _offset: u32,\n    _return_size: u32,\n    _placeholder_fields: [Field; S]\n) -> [Field; S] {}\n\nunconstrained fn get_notes_oracle_wrapper<N, S>(\n    storage_slot: Field,\n    num_selects: u8,\n    select_by: [u8; N],\n    select_values: [Field; N],\n    sort_by: [u8; N],\n    sort_order: [u2; N],\n    limit: u32,\n    offset: u32,\n    mut placeholder_fields: [Field; S]\n) -> [Field; S] {\n    let return_size = placeholder_fields.len() as u32;\n    get_notes_oracle(storage_slot,\n        num_selects,\n        select_by,\n        select_values,\n        sort_by,\n        sort_order,\n        limit,\n        offset,\n        return_size,\n        placeholder_fields)\n}\n\nunconstrained pub fn get_notes<Note, N, M, S, NS>(\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    num_selects: u8,\n    select_by: [u8; M],\n    select_values: [Field; M],\n    sort_by: [u8; M],\n    sort_order: [u2; M],\n    limit: u32,\n    offset: u32,\n    mut placeholder_opt_notes: [Option<Note>; S], // TODO: Remove it and use `limit` to initialize the note array.\n    placeholder_fields: [Field; NS] // TODO: Remove it and use `limit` to initialize the note array.\n) -> [Option<Note>; S] {\n    let fields = get_notes_oracle_wrapper(storage_slot,\n        num_selects,\n        select_by,\n        select_values,\n        sort_by,\n        sort_order,\n        limit,\n        offset,\n        placeholder_fields);\n    let num_notes = fields[0] as u32;\n    let contract_address = fields[1];\n    let deserialize = note_interface.deserialize;\n    let set_header = note_interface.set_header;\n    for i in 0..placeholder_opt_notes.len() {\n        if i as u32 < num_notes {\n            // lengths named as per typescript.\n            let return_header_length: Field = 2; // num_notes & contract_address.\n            let extra_preimage_length: Field = 2; // nonce & is_transient.\n            let read_offset: Field = return_header_length + i * (N + extra_preimage_length);\n            let nonce = fields[read_offset];\n            let is_transient = fields[read_offset + 1] as bool;\n            let header = NoteHeader { contract_address, nonce, storage_slot, is_transient };\n            let serialized_note = arr_copy_slice(fields, [0; N], read_offset + 2);\n            let mut note = deserialize(serialized_note);\n            set_header(&mut note, header);\n            placeholder_opt_notes[i] = Option::some(note);\n        };\n    }\n    placeholder_opt_notes\n}\n\n#[oracle(checkNullifierExists)]\nfn check_nullifier_exists_oracle(_inner_nullifier: Field) -> Field {}\n\nunconstrained pub fn check_nullifier_exists(inner_nullifier: Field) -> bool {\n    check_nullifier_exists_oracle(inner_nullifier) == 1\n}\n",
        "path": "/aztec/oracle/notes.nr"
      },
      "131": {
        "source": "#[oracle(storageRead)]\nfn storage_read_oracle<N>(_storage_slot: Field, _number_of_elements: Field) -> [Field; N] {}\n\nunconstrained fn storage_read_oracle_wrapper<N>(_storage_slot: Field) -> [Field; N] {\n    storage_read_oracle(_storage_slot, N)\n}\n\npub fn storage_read<T, N>(storage_slot: Field, deserialize: fn ([Field; N]) -> T) -> T {\n    let fields = storage_read_oracle_wrapper(storage_slot);\n    deserialize(fields)\n}\n\n#[oracle(storageWrite)]\nfn storage_write_oracle<N>(_storage_slot: Field, _values: [Field; N]) -> [Field; N] {}\n\n// TODO: Remove return value.\nunconstrained pub fn storage_write<N>(storage_slot: Field, fields: [Field; N]) {\n    let _hash = storage_write_oracle(storage_slot, fields);\n}\n",
        "path": "/aztec/oracle/storage.nr"
      },
      "132": {
        "source": "use crate::types::point::Point;\nuse dep::protocol_types::constants::NUM_FIELDS_PER_SHA256;\n\n// TODO: Should take encrypted data.\n#[oracle(emitEncryptedLog)]\nfn emit_encrypted_log_oracle<N>(_contract_address: Field, _storage_slot: Field, _encryption_pub_key: Point, _preimage: [Field; N]) -> Field {}\n\nunconstrained pub fn emit_encrypted_log<N>(contract_address: Field, storage_slot: Field, encryption_pub_key: Point, preimage: [Field; N]) -> [Field; NUM_FIELDS_PER_SHA256] {\n    [emit_encrypted_log_oracle(contract_address, storage_slot, encryption_pub_key, preimage), 0]\n}\n\n#[oracle(emitUnencryptedLog)]\nfn emit_unencrypted_log_oracle<T>(_contract_address: Field, _event_selector: Field, _message: T) -> Field {}\n\nunconstrained pub fn emit_unencrypted_log<T>(contract_address: Field, event_selector: Field, message: T) -> [Field; NUM_FIELDS_PER_SHA256] {\n    // https://github.com/AztecProtocol/aztec-packages/issues/885\n    [emit_unencrypted_log_oracle(contract_address, event_selector, message), 0]\n}\n",
        "path": "/aztec/oracle/logs.nr"
      },
      "133": {
        "source": "use crate::abi::FunctionData;\nuse crate::abi::PrivateCircuitPublicInputs;\nuse dep::protocol_types::constants::GENERATOR_INDEX__CALL_STACK_ITEM;\nuse crate::hash::pedersen_hash;\n\nstruct PrivateCallStackItem {\n    contract_address: Field,\n    function_data: FunctionData,\n    public_inputs: PrivateCircuitPublicInputs,\n    is_execution_request: bool,\n}\n\nimpl PrivateCallStackItem {\n    pub fn hash(self) -> Field {\n        pedersen_hash([\n            self.contract_address,\n            self.function_data.hash(),\n            self.public_inputs.hash(),\n        ], GENERATOR_INDEX__CALL_STACK_ITEM)\n    }\n}\n",
        "path": "/aztec/private_call_stack_item.nr"
      },
      "134": {
        "source": "use crate::{\n    abi,\n    hash::pedersen_hash,\n    abi::{\n        PublicCircuitPublicInputs,\n        FunctionData,\n    },\n};\nuse dep::protocol_types::constants::{\n    RETURN_VALUES_LENGTH,\n    GENERATOR_INDEX__CALL_STACK_ITEM,\n};\n\n// oracles\nuse crate::oracle::{\n    enqueue_public_function_call::enqueue_public_function_call_internal,\n};\n\nstruct PublicCallStackItem {\n    contract_address: Field,\n    function_data: FunctionData,\n    public_inputs: PublicCircuitPublicInputs,\n    is_execution_request: bool,\n}\n\nimpl PublicCallStackItem {\n    pub fn hash(self) -> Field {\n        pedersen_hash([\n            self.contract_address,\n            self.function_data.hash(),\n            self.public_inputs.hash(),\n        ], GENERATOR_INDEX__CALL_STACK_ITEM)\n    }\n}\n\n",
        "path": "/aztec/public_call_stack_item.nr"
      },
      "137": {
        "source": "use dep::std::option::Option;\nuse dep::protocol_types::constants::EMPTY_NULLIFIED_COMMITMENT;\nuse crate::context::{PrivateContext, Context};\nuse crate::note::{\n    lifecycle::create_note,\n    note_getter::{get_note, view_notes},\n    note_interface::NoteInterface,\n    note_viewer_options::NoteViewerOptions,\n};\nuse crate::oracle::notes::check_nullifier_exists;\nuse crate::state_vars::singleton::compute_singleton_initialization_nullifier;\n\n// docs:start:struct\nstruct ImmutableSingleton<Note, N> {\n    context: Option<&mut PrivateContext>,\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    compute_initialization_nullifier: fn (Field, Option<Field>) -> Field,\n}\n// docs:end:struct\n\nimpl<Note, N> ImmutableSingleton<Note, N> {\n    // docs:start:new\n    pub fn new(\n        context: Context,\n        storage_slot: Field,\n        note_interface: NoteInterface<Note, N>,\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        ImmutableSingleton {\n            context: context.private,\n            storage_slot,\n            note_interface,\n            compute_initialization_nullifier: compute_singleton_initialization_nullifier,\n        }\n    }\n    // docs:end:new\n\n    // docs:start:is_initialized\n    unconstrained pub fn is_initialized(self, owner: Option<Field>) -> bool {\n        let compute_initialization_nullifier = self.compute_initialization_nullifier;\n        let nullifier = compute_initialization_nullifier(self.storage_slot, owner);\n        check_nullifier_exists(nullifier)\n    }\n    // docs:end:is_initialized\n\n    // docs:start:initialize\n    pub fn initialize(\n        self,\n        note: &mut Note, \n        owner: Option<Field>,\n        broadcast: bool,\n    ) {\n        let context = self.context.unwrap();\n\n        // Nullify the storage slot.\n        let compute_initialization_nullifier = self.compute_initialization_nullifier;\n        let nullifier = compute_initialization_nullifier(self.storage_slot, owner);\n        context.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT);\n\n        create_note(\n            context,\n            self.storage_slot,\n            note,\n            self.note_interface,\n            broadcast,\n        );\n    }\n    // docs:end:initialize\n\n    // docs:start:get_note\n    pub fn get_note(self) -> Note {\n        let context = self.context.unwrap();\n        let storage_slot = self.storage_slot;\n        get_note(context, storage_slot, self.note_interface)\n    }\n    // docs:end:get_note\n\n    // docs:start:view_note\n    unconstrained pub fn view_note(self) -> Note {\n        let options = NoteViewerOptions::new().set_limit(1);\n        view_notes(self.storage_slot, self.note_interface, options)[0].unwrap()\n    }\n    // docs:end:view_note\n}\n",
        "path": "/aztec/state_vars/immutable_singleton.nr"
      },
      "138": {
        "source": "use crate::context::{PrivateContext, PublicContext, Context};\nuse dep::std::option::Option;\nuse crate::hash::pedersen_hash;\n\n// docs:start:map\nstruct Map<V> {\n    context: Context,\n    storage_slot: Field,\n    state_var_constructor: fn(Context, Field) -> V,\n}\n// docs:end:map\n\nimpl<V> Map<V> {\n    // docs:start:new\n    pub fn new(\n        context: Context,\n        storage_slot: Field,\n        state_var_constructor: fn(Context, Field) -> V,\n    ) -> Map<V> {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        Map {\n            context,\n            storage_slot,\n            state_var_constructor,\n        }\n    }\n    // docs:end:new\n\n    // docs:start:at\n    pub fn at(self, key: Field) -> V {\n        // TODO(#1204): use a generator index for the storage slot\n        let derived_storage_slot = pedersen_hash([self.storage_slot, key],0);\n\n        let state_var_constructor = self.state_var_constructor;\n        state_var_constructor(self.context, derived_storage_slot)\n    }\n    // docs:end:at\n}\n",
        "path": "/aztec/state_vars/map.nr"
      },
      "139": {
        "source": "use crate::context::{Context};\nuse crate::oracle::storage::storage_read;\nuse crate::oracle::storage::storage_write;\nuse crate::types::type_serialization::TypeSerializationInterface;\nuse dep::std::option::Option;\n\n// docs:start:public_state_struct\nstruct PublicState<T, T_SERIALIZED_LEN> {\n    context: Context,\n    storage_slot: Field,\n    serialization_methods: TypeSerializationInterface<T, T_SERIALIZED_LEN>,\n}\n// docs:end:public_state_struct\n\nimpl<T, T_SERIALIZED_LEN> PublicState<T, T_SERIALIZED_LEN> {\n    // docs:start:public_state_struct_new\n    pub fn new(\n        // Note: Passing the contexts to new(...) just to have an interface compatible with a Map.\n        context: Context,\n        storage_slot: Field,\n        serialization_methods: TypeSerializationInterface<T, T_SERIALIZED_LEN>,\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        PublicState {\n            context,\n            storage_slot,\n            serialization_methods,\n        }\n    }\n    // docs:end:public_state_struct_new\n\n    // docs:start:public_state_struct_read\n    pub fn read(self) -> T {\n        assert(self.context.private.is_none(), \"Public state writes only supported in public functions\");\n        storage_read(self.storage_slot, self.serialization_methods.deserialize)\n    }\n    // docs:end:public_state_struct_read\n\n    // docs:start:public_state_struct_write\n    pub fn write(self, value: T) {\n        assert(self.context.private.is_none(), \"Public state writes only supported in public functions\");\n        let serialize = self.serialization_methods.serialize;\n        let fields = serialize(value);\n        storage_write(self.storage_slot, fields);\n    }\n    // docs:end:public_state_struct_write\n}\n",
        "path": "/aztec/state_vars/public_state.nr"
      },
      "140": {
        "source": "use dep::std::option::Option;\nuse crate::abi::PublicContextInputs;\nuse dep::protocol_types::constants::{MAX_NOTES_PER_PAGE, MAX_READ_REQUESTS_PER_CALL};\nuse crate::context::{PrivateContext, PublicContext, Context};\nuse crate::note::{\n    lifecycle::{create_note, create_note_hash_from_public, destroy_note},\n    note_getter::{get_notes, view_notes},\n    note_getter_options::NoteGetterOptions,\n    note_header::NoteHeader,\n    note_interface::NoteInterface,\n    note_viewer_options::NoteViewerOptions,\n    utils::compute_note_hash_for_read_or_nullify,\n};\n\n// docs:start:struct\nstruct Set<Note, N> {\n    context: Context,\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n}\n// docs:end:struct\n\nimpl<Note, N> Set<Note, N> {\n    // docs:start:new\n    pub fn new(\n        context: Context,\n        storage_slot: Field,\n        note_interface: NoteInterface<Note, N>,\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        Set {\n            context,\n            storage_slot,\n            note_interface,\n        }\n    }\n    // docs:end:new\n\n    // docs:start:insert\n    pub fn insert(self,\n        note: &mut Note,\n        broadcast: bool,\n    ) {\n        create_note(\n            self.context.private.unwrap(),\n            self.storage_slot,\n            note,\n            self.note_interface,\n            broadcast,\n        );\n    }\n    // docs:end:insert\n\n    // docs:start:insert_from_public\n    pub fn insert_from_public(self, note: &mut Note) {\n        create_note_hash_from_public(\n            self.context.public.unwrap(),\n            self.storage_slot,\n            note,\n            self.note_interface,\n        );\n    }\n    // docs:end:insert_from_public\n    \n    // DEPRECATED\n    fn assert_contains_and_remove(_self: Self, _note: &mut Note, _nonce: Field) {\n        assert(false, \"`assert_contains_and_remove` has been deprecated. Please call PXE.addNote() to add a note to the database. Then use Set.get_notes() and Set.remove() in your contract to verify and remove a note.\");\n    }\n\n    // DEPRECATED\n    fn assert_contains_and_remove_publicly_created(_self: Self, _note: &mut Note) {\n        assert(false, \"`assert_contains_and_remove_publicly_created` has been deprecated. Please call PXE.addNote() to add a note to the database. Then use Set.get_notes() and Set.remove() in your contract to verify and remove a note.\");\n    }\n\n    // docs:start:remove\n    pub fn remove(self, note: Note) {\n        let context = self.context.private.unwrap();\n        let note_hash = compute_note_hash_for_read_or_nullify(self.note_interface, note);\n        let has_been_read = context.read_requests.any(|r| r == note_hash);\n        assert(has_been_read, \"Can only remove a note that has been read from the set.\");\n\n        destroy_note(\n            context,\n            note,\n            self.note_interface,\n        );\n    }\n    // docs:end:remove\n\n    // docs:start:get_notes\n    pub fn get_notes<FILTER_ARGS>(\n        self,\n        options: NoteGetterOptions<Note, N, FILTER_ARGS>,\n    ) -> [Option<Note>; MAX_READ_REQUESTS_PER_CALL] {\n        let storage_slot = self.storage_slot;\n        let opt_notes = get_notes(\n            self.context.private.unwrap(),\n            storage_slot,\n            self.note_interface,\n            options,\n        );\n        opt_notes\n    }\n    // docs:end:get_notes\n\n    // docs:start:view_notes\n    unconstrained pub fn view_notes(\n        self,\n        options: NoteViewerOptions<Note, N>,\n    ) -> [Option<Note>; MAX_NOTES_PER_PAGE] {\n        view_notes(self.storage_slot, self.note_interface, options)\n    }\n    // docs:end:view_notes\n}\n",
        "path": "/aztec/state_vars/set.nr"
      },
      "141": {
        "source": "use dep::std::option::Option;\nuse dep::protocol_types::constants::{EMPTY_NULLIFIED_COMMITMENT, GENERATOR_INDEX__INITIALIZATION_NULLIFIER};\nuse crate::context::{PrivateContext, PublicContext, Context};\nuse crate::note::{\n    lifecycle::{create_note, destroy_note},\n    note_getter::{get_note, view_notes},\n    note_interface::NoteInterface,\n    note_viewer_options::NoteViewerOptions,\n};\nuse crate::oracle::{\n    get_secret_key::get_secret_key,\n    notes::check_nullifier_exists,\n};\nuse crate::hash::pedersen_hash;\n\npub fn compute_singleton_initialization_nullifier(storage_slot: Field, owner: Option<Field>) -> Field {\n    if owner.is_some() {\n        let secret = get_secret_key(owner.unwrap_unchecked());\n        pedersen_hash([storage_slot, secret.low, secret.high],\n            GENERATOR_INDEX__INITIALIZATION_NULLIFIER)\n    } else {\n        pedersen_hash([storage_slot], GENERATOR_INDEX__INITIALIZATION_NULLIFIER)\n    }\n}\n\n// docs:start:struct\nstruct Singleton<Note, N> {\n    context: Option<&mut PrivateContext>,\n    storage_slot: Field,\n    note_interface: NoteInterface<Note, N>,\n    compute_initialization_nullifier: fn (Field, Option<Field>) -> Field,\n}\n// docs:end:struct\n\nimpl<Note, N> Singleton<Note, N> {\n    // docs:start:new\n    pub fn new(\n        context: Context,\n        storage_slot: Field,\n        note_interface: NoteInterface<Note, N>,\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        Singleton {\n            context: context.private,\n            storage_slot,\n            note_interface,\n            compute_initialization_nullifier: compute_singleton_initialization_nullifier,\n        }\n    }\n    // docs:end:new\n\n    // docs:start:is_initialized\n    unconstrained pub fn is_initialized(self, owner: Option<Field>) -> bool {\n        let compute_initialization_nullifier = self.compute_initialization_nullifier;\n        let nullifier = compute_initialization_nullifier(self.storage_slot, owner);\n        check_nullifier_exists(nullifier)\n    }\n    // docs:end:is_initialized\n\n    // docs:start:initialize\n    pub fn initialize(\n        self,\n        note: &mut Note,\n        owner: Option<Field>,\n        broadcast: bool,\n    ) {\n        let context = self.context.unwrap();\n\n        // Nullify the storage slot.\n        let compute_initialization_nullifier = self.compute_initialization_nullifier;\n        let nullifier = compute_initialization_nullifier(self.storage_slot, owner);\n        context.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT);\n\n        create_note(context, self.storage_slot, note, self.note_interface, broadcast);\n    }\n    // docs:end:initialize\n\n    // docs:start:replace\n    pub fn replace(\n        self,\n        new_note: &mut Note,\n        broadcast: bool,\n    ) {\n        let context = self.context.unwrap();\n        let prev_note = get_note(context, self.storage_slot, self.note_interface);\n\n        // Nullify previous note.\n        destroy_note(context, prev_note, self.note_interface);\n\n        // Add replacement note.\n        create_note(context, self.storage_slot, new_note, self.note_interface, broadcast);\n    }\n    // docs:end:replace\n\n    // docs:start:get_note\n    pub fn get_note(self, broadcast: bool) -> Note {\n        let context = self.context.unwrap();\n        let mut note = get_note(context, self.storage_slot, self.note_interface);\n\n        // Nullify current note to make sure it's reading the latest note.\n        destroy_note(context, note, self.note_interface);\n\n        // Add the same note again.\n        // Because a nonce is added to every note in the kernel, its nullifier will be different.\n        create_note(context, self.storage_slot, &mut note, self.note_interface, broadcast);\n\n        note\n    }\n    // docs:end:get_note\n\n    // docs:start:view_note\n    unconstrained pub fn view_note(self) -> Note {\n        let options = NoteViewerOptions::new().set_limit(1);\n        view_notes(self.storage_slot, self.note_interface, options)[0].unwrap()\n    }\n    // docs:end:view_note\n}\n",
        "path": "/aztec/state_vars/singleton.nr"
      },
      "145": {
        "source": "struct BoundedVec<T, MaxLen> {\n    storage: [T; MaxLen],\n    len: Field,\n}\n\nimpl<T, MaxLen> BoundedVec<T, MaxLen> {\n    pub fn new(initial_value: T) -> Self {\n        BoundedVec { storage: [initial_value; MaxLen], len: 0 }\n    }\n\n    pub fn get(mut self: Self, index: Field) -> T {\n        assert(index as u64 < self.len as u64);\n        self.storage[index]\n    }\n\n    pub fn get_unchecked(mut self: Self, index: Field) -> T {\n        self.storage[index]\n    }\n\n    pub fn push(&mut self, elem: T) {\n        assert(self.len as u64 < MaxLen as u64);\n\n        self.storage[self.len] = elem;\n        self.len += 1;\n    }\n\n    pub fn push_array<Len>(&mut self, array: [T; Len]) {\n        let newLen = self.len + array.len();\n        assert(newLen as u64 <= MaxLen as u64);\n        for i in 0..array.len() {\n            self.storage[self.len + i] = array[i];\n        }\n        self.len = newLen;\n    }\n\n    pub fn pop(&mut self) -> T {\n        assert(self.len as u64 > 0);\n\n        let elem = self.storage[self.len - 1];\n        self.len -= 1;\n        elem\n    }\n\n    pub fn any<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = false;\n        let mut exceeded_len = false;\n        for i in 0..MaxLen {\n            exceeded_len |= i == self.len;\n            if (!exceeded_len) {\n                ret |= predicate(self.storage[i]);\n            }\n        }\n        ret\n    }\n}\n\n#[test]\nfn test_vec_push_pop() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    assert(vec.len == 0);\n    vec.push(2);\n    assert(vec.len == 1);\n    vec.push(4);\n    assert(vec.len == 2);\n    vec.push(6);\n    assert(vec.len == 3);\n    let x = vec.pop();\n    assert(x == 6);\n    assert(vec.len == 2);\n    assert(vec.get(0) == 2);\n    assert(vec.get(1) == 4);\n}\n\n#[test]\nfn test_vec_push_array() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    vec.push_array([2, 4]);\n    assert(vec.len == 2);\n    assert(vec.get(0) == 2);\n    assert(vec.get(1) == 4);\n}\n\n#[test(should_fail)]\nfn test_vec_get_out_of_bound() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    vec.push_array([2, 4]);\n    let _x = vec.get(2);\n}\n\n#[test(should_fail)]\nfn test_vec_get_not_declared() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    vec.push_array([2]);\n    let _x = vec.get(1);\n}\n\n#[test(should_fail)]\nfn test_vec_get_uninitialized() {\n    let mut vec: BoundedVec<Field, 2> = BoundedVec::new(0);\n    let _x = vec.get(0);\n}\n\n#[test(should_fail)]\nfn test_vec_push_overflow() {\n    let mut vec: BoundedVec<Field, 1> = BoundedVec::new(0);\n    vec.push(1);\n    vec.push(2);\n}\n\n#[test]\nfn test_vec_any() {\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(0);\n    vec.push_array([2, 4, 6]);\n    assert(vec.any(|v| v == 2) == true);\n    assert(vec.any(|v| v == 4) == true);\n    assert(vec.any(|v| v == 6) == true);\n    assert(vec.any(|v| v == 3) == false);\n}\n\n#[test]\nfn test_vec_any_not_default() {\n    let default_value = 1;\n    let mut vec: BoundedVec<Field, 3> = BoundedVec::new(default_value);\n    vec.push_array([2, 4]);\n    assert(vec.any(|v| v == default_value) == false);\n}\n",
        "path": "/aztec/types/vec.nr"
      },
      "147": {
        "source": "use crate::types::type_serialization::TypeSerializationInterface;\n\nglobal BOOL_SERIALIZED_LEN: Field = 1;\n\nfn deserializeBool(fields: [Field; BOOL_SERIALIZED_LEN]) -> bool {\n    fields[0] as bool\n}\n\nfn serializeBool(value: bool) -> [Field; BOOL_SERIALIZED_LEN] {\n    [value as Field]\n}\n\nglobal BoolSerializationMethods = TypeSerializationInterface {\n    deserialize: deserializeBool,\n    serialize: serializeBool,\n};\n",
        "path": "/aztec/types/type_serialization/bool_serialization.nr"
      },
      "148": {
        "source": "use crate::types::type_serialization::TypeSerializationInterface;\n\n// docs:start:field_serialization\nglobal FIELD_SERIALIZED_LEN: Field = 1;\n\nfn deserializeField(fields: [Field; FIELD_SERIALIZED_LEN]) -> Field {\n    fields[0]\n}\n\nfn serializeField(value: Field) -> [Field; FIELD_SERIALIZED_LEN] {\n    [value]\n}\n\nglobal FieldSerializationMethods = TypeSerializationInterface {\n    deserialize: deserializeField,\n    serialize: serializeField,\n};\n// docs:end:field_serialization",
        "path": "/aztec/types/type_serialization/field_serialization.nr"
      },
      "150": {
        "source": "use crate::types::type_serialization::TypeSerializationInterface;\nuse crate::types::address::AztecAddress;\n\nglobal AZTEC_ADDRESS_SERIALIZED_LEN: Field = 1;\n\nfn deserialize(fields: [Field; AZTEC_ADDRESS_SERIALIZED_LEN]) -> AztecAddress {\n    AztecAddress::new(fields[0])\n}\n\nfn serialize(value: AztecAddress) -> [Field; AZTEC_ADDRESS_SERIALIZED_LEN] {\n    [value.address]\n}\n\nglobal AztecAddressSerializationMethods = TypeSerializationInterface {\n    deserialize,\n    serialize,\n};\n",
        "path": "/aztec/types/type_serialization/aztec_address_serialization.nr"
      },
      "151": {
        "source": "pub fn arr_copy_slice<T, N, M>(src: [T; N], mut dst: [T; M], offset: Field) -> [T; M] {\n    for i in 0..dst.len() {\n        dst[i] = src[i + offset];\n    }\n    dst\n}\n\npub fn field_from_bytes<N>(bytes: [u8; N], big_endian: bool) -> Field {\n    assert(bytes.len() as u32 < 32, \"field_from_bytes: N must be less than 32\");\n    let mut as_field = 0;\n    let mut offset = 1;\n    for i in 0..N {\n        let mut index = i;\n        if big_endian {\n            index = N - i - 1;\n        }\n        as_field += (bytes[index] as Field) * offset;\n        offset *= 256;\n    }\n\n    as_field\n}\n\n// TODO(#3470): Copied over from https://github.com/AztecProtocol/aztec-packages/blob/a07c4bd47313be6aa604a63f37857eb0136b41ba/yarn-project/noir-protocol-circuits/src/crates/rollup-lib/src/base/base_rollup_inputs.nr#L599\n// move to a shared place?\n\n// TODO to radix returns u8, so we cannot use bigger radixes. It'd be ideal to use a radix of the maximum range-constrained integer noir supports\npub fn full_field_less_than(lhs: Field, rhs: Field) -> bool {\n    dep::std::eddsa::lt_bytes32(lhs, rhs)\n}\n\npub fn full_field_greater_than(lhs: Field, rhs: Field) -> bool {\n    dep::std::eddsa::lt_bytes32(rhs, lhs)\n}",
        "path": "/aztec/utils.nr"
      },
      "153": {
        "source": "/////////////////////////////////////////////////////////////////////\n//                             Imports                             //\n/////////////////////////////////////////////////////////////////////\n\nuse dep::aztec::{\n    context::PrivateContext,\n    log::emit_encrypted_log,\n    note::{\n        note_header::NoteHeader,\n        note_interface::NoteInterface,\n        utils::compute_note_hash_for_read_or_nullify,\n    },\n    oracle::{\n        get_public_key::get_public_key,\n        get_secret_key::get_secret_key,\n        notes::check_nullifier_exists,\n        notes::check_nullifier_exists_oracle,\n        rand::rand,\n    },\n    types::address::AztecAddress\n};\n\nuse dep::protocol_types::{\n    constants::EMPTY_NULLIFIED_COMMITMENT,\n};\n\nuse dep::std::option::Option;\n\n\n/////////////////////////////////////////////////////////////////////\n//                              Class                              //\n/////////////////////////////////////////////////////////////////////\n\n/// @notice A note that represents a given bet, of a given user\n/// @member owner The owner of the note\n/// @member round_id The id of the round this bet is placed on\n/// @member bet The bet outcome given by the user (true or false)\n/// @member header The note header\nstruct BetNote {\n    owner: AztecAddress,\n    round_id: Field,\n    bet: bool, // Heads is 0 (False). Tails is 1 (True).\n    randomness: Field,\n    header: NoteHeader\n}\n\nglobal BET_NOTE_LEN: Field = 4;\n\nimpl BetNote {\n    /////////////////////////////////////////////////////////////////////\n    //                         Public methods                          //\n    /////////////////////////////////////////////////////////////////////\n\n    /// @notice Bet note constructor\n    /// @param _context The currenct context, used to push the round_id nullifier in order to ensure uniqueness\n    /// @param _owner The owner of the note\n    /// @param _bet The bet outcome given by the user (true or false, representing head or tail)\n    /// @param _round_id The id of the bet (randomly generated, by reusing the escrow randomness)\n    /// @param _randomness An extra randomness field, often generated during the function execution and not known beforehand.\n    ///                    Used for linking to other notes, identifaction and nullification.\n    pub fn new(_context: &mut PrivateContext, _owner: AztecAddress, _round_id: Field, _bet: bool, _randomness: Field) -> Self {\n        // Nullify round id and randomness combination\n        let compute_initialization_nullifier = BetNote::generate_round_randomness_nullifier;\n        let nullifier = compute_initialization_nullifier(_round_id, _randomness);\n        _context.push_new_nullifier(nullifier, EMPTY_NULLIFIED_COMMITMENT);\n\n        BetNote {\n            owner: _owner,\n            round_id: _round_id,\n            bet: _bet,\n            randomness: _randomness,\n            header: NoteHeader::empty(),\n        }\n    }\n\n    /// @notice Bet note round_id nullifying generator\n    /// @param _round_id The id of the bet to nullify\n    /// @param _randomness User defined randomness for a given bet\n    pub fn generate_round_randomness_nullifier(_round_id: Field, _randomness: Field) -> Field {\n        dep::std::hash::pedersen_hash([_round_id, _randomness])\n    }\n\n    /// @notice Bet note round_id initialization checker. Checks whether the round_id and randomness combination was added to the nullifying tree\n    /// @param _round_id The round id of the bet to check for nullification status\n    /// @param _randomness The randomness of the bet to check for nullification status\n    unconstrained pub fn is_round_randomness_nullified(_round_id: Field, _randomness: Field) -> bool {\n        let compute_initialization_nullifier = BetNote::generate_round_randomness_nullifier;\n        let nullifier = compute_initialization_nullifier(_round_id, _randomness);\n        check_nullifier_exists(nullifier)\n    }\n\n    /////////////////////////////////////////////////////////////////////\n    //                        Internal methods                         //\n    /////////////////////////////////////////////////////////////////////\n\n    /// @notice Serializes the note\n    fn serialize(self) -> [Field; BET_NOTE_LEN] {\n        [self.owner.address, self.round_id, self.bet as Field, self.randomness]\n    }\n\n    /// @notice Deserializes the note\n    fn deserialize(preimage: [Field; BET_NOTE_LEN]) -> Self {\n        BetNote {\n            owner: AztecAddress::new(preimage[0]),\n            round_id: preimage[1],\n            bet: preimage[2] as bool,\n            randomness: preimage[3],\n            header: NoteHeader::empty(),\n        }\n    }\n\n    /// @notice Computes the note hash of the note\n    fn compute_note_hash(self) -> Field {\n        dep::std::hash::pedersen_hash([\n            self.owner.address,\n            self.round_id,\n            self.bet as Field,\n            self.randomness\n        ])\n    }\n\n    /// @notice Computes the nullifier of the note\n    /// @dev    This is a pretty standard nullifier computation, using the round_id as the key\n    fn compute_nullifier(self) -> Field {\n        let note_hash_for_nullify = compute_note_hash_for_read_or_nullify(BetNoteMethods, self);\n        let nullifier_key = self.round_id;\n\n        dep::std::hash::pedersen_hash([\n            note_hash_for_nullify,\n            nullifier_key,\n        ])\n    }\n\n    /// @notice Sets the note header\n    fn set_header(&mut self, header: NoteHeader) {\n        self.header = header;\n    }\n\n    /// @notice Emit the note creation event using the owner public key\n    fn broadcast(self, context: &mut PrivateContext, slot: Field) {\n        let encryption_pub_key = get_public_key(self.owner.address);\n        emit_encrypted_log(\n            context,\n            (*context).this_address(),\n            slot,\n            encryption_pub_key,\n            self.serialize(),\n        );\n    }\n}\n\n/////////////////////////////////////////////////////////////////////\n//                         Global methods                          //\n/////////////////////////////////////////////////////////////////////\n\nfn deserialize(preimage: [Field; BET_NOTE_LEN]) -> BetNote {\n    BetNote::deserialize(preimage)\n}\n\nfn serialize(note: BetNote) -> [Field; BET_NOTE_LEN] {\n    note.serialize()\n}\n\nfn compute_note_hash(note: BetNote) -> Field {\n    note.compute_note_hash()\n}\n\nfn compute_nullifier(note: BetNote) -> Field {\n    note.compute_nullifier()\n}\n\nfn get_header(note: BetNote) -> NoteHeader {\n    note.header\n}\n\nfn set_header(note: &mut BetNote, header: NoteHeader) {\n    note.set_header(header)\n}\n\nfn broadcast(context: &mut PrivateContext, slot: Field, note: BetNote) {\n    note.broadcast(context, slot);\n}\n\nglobal BetNoteMethods = NoteInterface {\n    deserialize,\n    serialize,\n    compute_note_hash,\n    compute_nullifier,\n    get_header,\n    set_header,\n    broadcast,\n};",
        "path": "/home/shaito/wonderland/aztec-coin-toss-pvp/src/types/bet_note.nr"
      },
      "154": {
        "source": "/////////////////////////////////////////////////////////////////////\n//                             Imports                             //\n/////////////////////////////////////////////////////////////////////\n\nuse dep::aztec::{\n    context::PrivateContext,\n    note::{\n        note_header::NoteHeader,\n        note_interface::NoteInterface,\n    },\n    types::address::AztecAddress\n};\n\n/////////////////////////////////////////////////////////////////////\n//                              Class                              //\n/////////////////////////////////////////////////////////////////////\n\n/// @notice a note containing the (immutable) game configuration\n/// @member divinity the address of the divinity used by the oracle\n/// @member private_oracle the address of the private oracle contract\n/// @member token the address of the token used for betting\n/// @member bet_amount the amount of tokens to bet\n/// @member header the note header\nstruct ConfigNote {\n    divinity: AztecAddress,\n    private_oracle: AztecAddress,\n    token: AztecAddress,\n    bet_amount: Field,\n    header: NoteHeader\n}\n\nglobal CONFIG_NOTE_LEN: Field = 4;\n\nimpl ConfigNote {\n    \n    /////////////////////////////////////////////////////////////////////\n    //                         Public methods                          //\n    /////////////////////////////////////////////////////////////////////\n\n    /// @notice create a new config note\n    /// @param _divinity the address of the divinity used by the oracle\n    /// @param _private_oracle the address of the private oracle contract\n    /// @param _token the address of the token used for betting\n    /// @param _amount the amount of tokens to bet\n    pub fn new(_divinity: AztecAddress, _private_oracle: AztecAddress, _token: AztecAddress, _amount: Field) -> Self {\n        ConfigNote {\n            divinity: _divinity,\n            private_oracle: _private_oracle,\n            token: _token,\n            bet_amount: _amount,\n            header: NoteHeader::empty(),\n        }\n    }\n\n    /////////////////////////////////////////////////////////////////////\n    //                        Internal methods                         //\n    /////////////////////////////////////////////////////////////////////\n\n    /// @notice serialize the note\n    fn serialize(self) -> [Field; CONFIG_NOTE_LEN] {\n        [self.divinity.address, self.private_oracle.address, self.token.address, self.bet_amount]\n    }\n\n    /// @notice deserialize the note\n    fn deserialize(preimage: [Field; CONFIG_NOTE_LEN]) -> Self {\n        ConfigNote {\n            divinity: AztecAddress::new(preimage[0]),\n            private_oracle: AztecAddress::new(preimage[1]),\n            token: AztecAddress::new(preimage[2]),\n            bet_amount: preimage[3],\n            header: NoteHeader::empty(),\n        }\n    }\n\n    /// @notice compute the note hash\n    fn compute_note_hash(self) -> Field {\n        dep::std::hash::pedersen_hash([\n            self.divinity.address,\n            self.private_oracle.address,\n            self.token.address,\n            self.bet_amount\n        ])\n    }\n\n    /// @notice this note isn't nullifiable, returns 0\n    fn compute_nullifier(self) -> Field {\n         let _ = self; // Avoid compiler warning (same # acir opcodes and backend size)\n         0\n    }\n\n    /// @notice get the note header\n    fn set_header(&mut self, header: NoteHeader) {\n        self.header = header;\n    }\n\n    /// @notice this notes isn't private, no owner to emit to\n    fn broadcast(self, context: &mut PrivateContext, slot: Field) {\n        // no owner == no broadcast\n        let _ = self; // Avoid compiler warning (same # acir opcodes and backend size)\n        let __ = context;\n        let ___ = slot;\n    }\n}\n\n/////////////////////////////////////////////////////////////////////\n//                         Global methods                          //\n/////////////////////////////////////////////////////////////////////\n\nfn deserialize(preimage: [Field; CONFIG_NOTE_LEN]) -> ConfigNote {\n    ConfigNote::deserialize(preimage)\n}\n\nfn serialize(note: ConfigNote) -> [Field; CONFIG_NOTE_LEN] {\n    note.serialize()\n}\n\nfn compute_note_hash(note: ConfigNote) -> Field {\n    note.compute_note_hash()\n}\n\nfn compute_nullifier(note: ConfigNote) -> Field {\n    note.compute_nullifier()\n}\n\nfn get_header(note: ConfigNote) -> NoteHeader {\n    note.header\n}\n\nfn set_header(note: &mut ConfigNote, header: NoteHeader) {\n    note.set_header(header)\n}\n\nfn broadcast(context: &mut PrivateContext, slot: Field, note: ConfigNote) {\n    note.broadcast(context, slot);\n}\n\nglobal ConfigNoteMethods = NoteInterface {\n    deserialize,\n    serialize,\n    compute_note_hash,\n    compute_nullifier,\n    get_header,\n    set_header,\n    broadcast,\n};",
        "path": "/home/shaito/wonderland/aztec-coin-toss-pvp/src/types/config_note.nr"
      },
      "155": {
        "source": "/* Autogenerated file, do not edit! */\n  \nuse dep::std;\nuse dep::aztec::context::{ PrivateContext, PublicContext };\nuse dep::protocol_types::constants::RETURN_VALUES_LENGTH;\n\nstruct AccountsBroadcastEscrowNoteForStruct {\n  address: Field,\n}\n\nstruct FromBurnPublicStruct {\n  address: Field,\n}\n\nstruct FromEscrowStruct {\n  address: Field,\n}\n\nstruct OwnerEscrowStruct {\n  address: Field,\n}\n\nstruct ToMintPublicStruct {\n  address: Field,\n}\n\nstruct ToRedeemShieldStruct {\n  address: Field,\n}\n\nstruct NewAdminSetAdminStruct {\n  address: Field,\n}\n\nstruct MinterSetMinterStruct {\n  address: Field,\n}\n\nstruct OwnerSettleEscrowStruct {\n  address: Field,\n}\n\nstruct RecipientSettleEscrowStruct {\n  address: Field,\n}\n\nstruct FromShieldStruct {\n  address: Field,\n}\n\nstruct FromTransferStruct {\n  address: Field,\n}\n\nstruct ToTransferStruct {\n  address: Field,\n}\n\nstruct FromTransferPublicStruct {\n  address: Field,\n}\n\nstruct ToTransferPublicStruct {\n  address: Field,\n}\n\nstruct FromUnshieldStruct {\n  address: Field,\n}\n\nstruct ToUnshieldStruct {\n  address: Field,\n}\n\n\n// Interface for calling Token functions from a private context\nstruct TokenPrivateContextInterface {\n  address: Field,\n}\n\nimpl TokenPrivateContextInterface {\n  pub fn at(address: Field) -> Self {\n      Self {\n          address,\n      }\n  }\n  \n  pub fn broadcast_escrow_note_for(\n    self,\n    context: &mut PrivateContext,\n    accounts: [AccountsBroadcastEscrowNoteForStruct;4],\n    randomness: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 5];\n    serialized_args[0] = accounts[0].address;\n    serialized_args[1] = accounts[1].address;\n    serialized_args[2] = accounts[2].address;\n    serialized_args[3] = accounts[3].address;\n    serialized_args[4] = randomness;\n\n    context.call_private_function(self.address, 0x2426c148, serialized_args)\n  }\n  \n\n  pub fn burn_public(\n    self,\n    context: &mut PrivateContext,\n    from: FromBurnPublicStruct,\n    amount: Field,\n    nonce: Field\n  ) {\n    let mut serialized_args = [0; 3];\n    serialized_args[0] = from.address;\n    serialized_args[1] = amount;\n    serialized_args[2] = nonce;\n\n    context.call_public_function(self.address, 0xb0e964d5, serialized_args)\n  }\n  \n\n  pub fn escrow(\n    self,\n    context: &mut PrivateContext,\n    from: FromEscrowStruct,\n    owner: OwnerEscrowStruct,\n    amount: Field,\n    nonce: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 4];\n    serialized_args[0] = from.address;\n    serialized_args[1] = owner.address;\n    serialized_args[2] = amount;\n    serialized_args[3] = nonce;\n\n    context.call_private_function(self.address, 0x54f7b220, serialized_args)\n  }\n  \n\n  pub fn get_escrow(\n    self,\n    context: &mut PrivateContext,\n    randomness: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 1];\n    serialized_args[0] = randomness;\n\n    context.call_private_function(self.address, 0x37785550, serialized_args)\n  }\n  \n\n  pub fn mint_private(\n    self,\n    context: &mut PrivateContext,\n    amount: Field,\n    secret_hash: Field\n  ) {\n    let mut serialized_args = [0; 2];\n    serialized_args[0] = amount;\n    serialized_args[1] = secret_hash;\n\n    context.call_public_function(self.address, 0x10763932, serialized_args)\n  }\n  \n\n  pub fn mint_public(\n    self,\n    context: &mut PrivateContext,\n    to: ToMintPublicStruct,\n    amount: Field\n  ) {\n    let mut serialized_args = [0; 2];\n    serialized_args[0] = to.address;\n    serialized_args[1] = amount;\n\n    context.call_public_function(self.address, 0x6bfd1d5b, serialized_args)\n  }\n  \n\n  pub fn redeem_shield(\n    self,\n    context: &mut PrivateContext,\n    to: ToRedeemShieldStruct,\n    amount: Field,\n    secret: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 3];\n    serialized_args[0] = to.address;\n    serialized_args[1] = amount;\n    serialized_args[2] = secret;\n\n    context.call_private_function(self.address, 0xb77168f2, serialized_args)\n  }\n  \n\n  pub fn set_admin(\n    self,\n    context: &mut PrivateContext,\n    new_admin: NewAdminSetAdminStruct\n  ) {\n    let mut serialized_args = [0; 1];\n    serialized_args[0] = new_admin.address;\n\n    context.call_public_function(self.address, 0x41b90896, serialized_args)\n  }\n  \n\n  pub fn set_minter(\n    self,\n    context: &mut PrivateContext,\n    minter: MinterSetMinterStruct,\n    approve: bool\n  ) {\n    let mut serialized_args = [0; 2];\n    serialized_args[0] = minter.address;\n    serialized_args[1] = approve as Field;\n\n    context.call_public_function(self.address, 0x7f020b80, serialized_args)\n  }\n  \n\n  pub fn settle_escrow(\n    self,\n    context: &mut PrivateContext,\n    owner: OwnerSettleEscrowStruct,\n    recipient: RecipientSettleEscrowStruct,\n    randomness: Field,\n    nonce: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 4];\n    serialized_args[0] = owner.address;\n    serialized_args[1] = recipient.address;\n    serialized_args[2] = randomness;\n    serialized_args[3] = nonce;\n\n    context.call_private_function(self.address, 0x510f50d4, serialized_args)\n  }\n  \n\n  pub fn shield(\n    self,\n    context: &mut PrivateContext,\n    from: FromShieldStruct,\n    amount: Field,\n    secret_hash: Field,\n    nonce: Field\n  ) {\n    let mut serialized_args = [0; 4];\n    serialized_args[0] = from.address;\n    serialized_args[1] = amount;\n    serialized_args[2] = secret_hash;\n    serialized_args[3] = nonce;\n\n    context.call_public_function(self.address, 0x1d24add0, serialized_args)\n  }\n  \n\n  pub fn transfer(\n    self,\n    context: &mut PrivateContext,\n    from: FromTransferStruct,\n    to: ToTransferStruct,\n    amount: Field,\n    nonce: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 4];\n    serialized_args[0] = from.address;\n    serialized_args[1] = to.address;\n    serialized_args[2] = amount;\n    serialized_args[3] = nonce;\n\n    context.call_private_function(self.address, 0xb1aa668a, serialized_args)\n  }\n  \n\n  pub fn transfer_public(\n    self,\n    context: &mut PrivateContext,\n    from: FromTransferPublicStruct,\n    to: ToTransferPublicStruct,\n    amount: Field,\n    nonce: Field\n  ) {\n    let mut serialized_args = [0; 4];\n    serialized_args[0] = from.address;\n    serialized_args[1] = to.address;\n    serialized_args[2] = amount;\n    serialized_args[3] = nonce;\n\n    context.call_public_function(self.address, 0x7db8f449, serialized_args)\n  }\n  \n\n  pub fn unshield(\n    self,\n    context: &mut PrivateContext,\n    from: FromUnshieldStruct,\n    to: ToUnshieldStruct,\n    amount: Field,\n    nonce: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 4];\n    serialized_args[0] = from.address;\n    serialized_args[1] = to.address;\n    serialized_args[2] = amount;\n    serialized_args[3] = nonce;\n\n    context.call_private_function(self.address, 0x78303b89, serialized_args)\n  }\n  \n}\n  \n  \n\n\n// Interface for calling Token functions from a public context\nstruct TokenPublicContextInterface {\n  address: Field,\n}\n\nimpl TokenPublicContextInterface {\n  pub fn at(address: Field) -> Self {\n      Self {\n          address,\n      }\n  }\n  \n  pub fn burn_public(\n    self,\n    context: PublicContext,\n    from: FromBurnPublicStruct,\n    amount: Field,\n    nonce: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 3];\n    serialized_args[0] = from.address;\n    serialized_args[1] = amount;\n    serialized_args[2] = nonce;\n\n    context.call_public_function(self.address, 0xb0e964d5, serialized_args)\n  }\n  \n\n  pub fn mint_private(\n    self,\n    context: PublicContext,\n    amount: Field,\n    secret_hash: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 2];\n    serialized_args[0] = amount;\n    serialized_args[1] = secret_hash;\n\n    context.call_public_function(self.address, 0x10763932, serialized_args)\n  }\n  \n\n  pub fn mint_public(\n    self,\n    context: PublicContext,\n    to: ToMintPublicStruct,\n    amount: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 2];\n    serialized_args[0] = to.address;\n    serialized_args[1] = amount;\n\n    context.call_public_function(self.address, 0x6bfd1d5b, serialized_args)\n  }\n  \n\n  pub fn set_admin(\n    self,\n    context: PublicContext,\n    new_admin: NewAdminSetAdminStruct\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 1];\n    serialized_args[0] = new_admin.address;\n\n    context.call_public_function(self.address, 0x41b90896, serialized_args)\n  }\n  \n\n  pub fn set_minter(\n    self,\n    context: PublicContext,\n    minter: MinterSetMinterStruct,\n    approve: bool\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 2];\n    serialized_args[0] = minter.address;\n    serialized_args[1] = approve as Field;\n\n    context.call_public_function(self.address, 0x7f020b80, serialized_args)\n  }\n  \n\n  pub fn shield(\n    self,\n    context: PublicContext,\n    from: FromShieldStruct,\n    amount: Field,\n    secret_hash: Field,\n    nonce: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 4];\n    serialized_args[0] = from.address;\n    serialized_args[1] = amount;\n    serialized_args[2] = secret_hash;\n    serialized_args[3] = nonce;\n\n    context.call_public_function(self.address, 0x1d24add0, serialized_args)\n  }\n  \n\n  pub fn transfer_public(\n    self,\n    context: PublicContext,\n    from: FromTransferPublicStruct,\n    to: ToTransferPublicStruct,\n    amount: Field,\n    nonce: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 4];\n    serialized_args[0] = from.address;\n    serialized_args[1] = to.address;\n    serialized_args[2] = amount;\n    serialized_args[3] = nonce;\n\n    context.call_public_function(self.address, 0x7db8f449, serialized_args)\n  }\n  \n}\n  \n  \n",
        "path": "/home/shaito/wonderland/aztec-coin-toss-pvp/src/types/token.nr"
      },
      "156": {
        "source": "/* Autogenerated file, do not edit! */\n  \nuse dep::std;\nuse dep::aztec::context::{ PrivateContext, PublicContext };\nuse dep::protocol_types::constants::RETURN_VALUES_LENGTH;\n\nstruct RequesterSubmitAnswerStruct {\n  address: Field,\n}\n\nstruct FromSubmitQuestionStruct {\n  address: Field,\n}\n\nstruct DivinityAddressSubmitQuestionStruct {\n  address: Field,\n}\n\n\n// Interface for calling PrivateOracle functions from a private context\nstruct PrivateOraclePrivateContextInterface {\n  address: Field,\n}\n\nimpl PrivateOraclePrivateContextInterface {\n  pub fn at(address: Field) -> Self {\n      Self {\n          address,\n      }\n  }\n  \n  pub fn cancel_question(\n    self,\n    context: &mut PrivateContext,\n    question: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 1];\n    serialized_args[0] = question;\n\n    context.call_private_function(self.address, 0x7d126cd4, serialized_args)\n  }\n  \n\n  pub fn consult_answer(\n    self,\n    context: &mut PrivateContext,\n    question: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 1];\n    serialized_args[0] = question;\n\n    context.call_private_function(self.address, 0x907da598, serialized_args)\n  }\n  \n\n  pub fn get_fee(\n    self,\n    context: &mut PrivateContext\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 0];\n\n    context.call_private_function(self.address, 0x64af47cf, serialized_args)\n  }\n  \n\n  pub fn initialize_payment_token(\n    self,\n    context: &mut PrivateContext,\n    payment_token: Field,\n    fee: Field\n  ) {\n    let mut serialized_args = [0; 2];\n    serialized_args[0] = payment_token;\n    serialized_args[1] = fee;\n\n    context.call_public_function(self.address, 0x233e29de, serialized_args)\n  }\n  \n\n  pub fn submit_answer(\n    self,\n    context: &mut PrivateContext,\n    question: Field,\n    requester: RequesterSubmitAnswerStruct,\n    answer: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 3];\n    serialized_args[0] = question;\n    serialized_args[1] = requester.address;\n    serialized_args[2] = answer;\n\n    context.call_private_function(self.address, 0xdc92d6e8, serialized_args)\n  }\n  \n\n  pub fn submit_question(\n    self,\n    context: &mut PrivateContext,\n    from: FromSubmitQuestionStruct,\n    question: Field,\n    divinity_address: DivinityAddressSubmitQuestionStruct,\n    nonce: Field,\n    callback: [Field;6]\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 10];\n    serialized_args[0] = from.address;\n    serialized_args[1] = question;\n    serialized_args[2] = divinity_address.address;\n    serialized_args[3] = nonce;\n    serialized_args[4] = callback[0];\n    serialized_args[5] = callback[1];\n    serialized_args[6] = callback[2];\n    serialized_args[7] = callback[3];\n    serialized_args[8] = callback[4];\n    serialized_args[9] = callback[5];\n\n    context.call_private_function(self.address, 0xb9d88bb1, serialized_args)\n  }\n  \n}\n  \n  \n\n\n// Interface for calling PrivateOracle functions from a public context\nstruct PrivateOraclePublicContextInterface {\n  address: Field,\n}\n\nimpl PrivateOraclePublicContextInterface {\n  pub fn at(address: Field) -> Self {\n      Self {\n          address,\n      }\n  }\n  \n  pub fn initialize_payment_token(\n    self,\n    context: PublicContext,\n    payment_token: Field,\n    fee: Field\n  ) -> [Field; RETURN_VALUES_LENGTH] {\n    let mut serialized_args = [0; 2];\n    serialized_args[0] = payment_token;\n    serialized_args[1] = fee;\n\n    context.call_public_function(self.address, 0x233e29de, serialized_args)\n  }\n  \n}\n  \n  \n",
        "path": "/home/shaito/wonderland/aztec-coin-toss-pvp/src/types/oracle.nr"
      },
      "157": {
        "source": "use dep::aztec::types::type_serialization::TypeSerializationInterface;\n\nmod Phase {\n    global BETTING: u120 = 1;\n    global AWAITING_ANSWER: u120 = 2;\n    global REVEAL: u120 = 3;\n    global CLAIM: u120 = 4;\n}\n\nstruct RoundData {\n    phase: u120, \n    current_phase_end: u120, \n    reveals_count: u120,\n    bettors: u120,\n    claim_amount: u120,\n}\n\nimpl RoundData {\n    pub fn new(\n        _phase: u120,\n        _current_phase_end: u120,\n        _reveals_count: u120,\n        _bettors: u120,\n        _claim_amount: u120,\n    ) -> Self {\n        Self {\n            phase: _phase,\n            current_phase_end: _current_phase_end,\n            reveals_count: _reveals_count,\n            bettors: _bettors,\n            claim_amount: _claim_amount,\n        }\n    }\n\n    pub fn add_bettor(round_data: RoundData) -> Self {\n        Self {\n            phase: round_data.phase,\n            current_phase_end: round_data.current_phase_end,\n            reveals_count: round_data.reveals_count,\n            bettors: round_data.bettors + 1,\n            claim_amount: round_data.claim_amount,\n        }\n    }\n\n    pub fn increase_reveal_count(round_data: RoundData) -> Self {\n        Self {\n            phase: round_data.phase,\n            current_phase_end: round_data.current_phase_end,\n            reveals_count: round_data.reveals_count + 1,\n            bettors: round_data.bettors,\n            claim_amount: round_data.claim_amount,\n        }\n    }\n}\n\nglobal ROUND_DATA_SERIALIZED_LEN: Field = 5;\n\nfn deserializeRoundData(fields: [Field; ROUND_DATA_SERIALIZED_LEN]) -> RoundData {\n    RoundData{phase: fields[0] as u120, current_phase_end: fields[1] as u120, reveals_count: fields[2] as u120, bettors: fields[3] as u120, claim_amount: fields[4] as u120}\n}\n\nfn serializeRoundData(value: RoundData) -> [Field; ROUND_DATA_SERIALIZED_LEN] {\n    [value.phase as Field, value.current_phase_end as Field, value.reveals_count as Field, value.bettors as Field, value.claim_amount as Field]\n}\n\nglobal RoundDataSerializationMethods = TypeSerializationInterface {\n    deserialize: deserializeRoundData,\n    serialize: serializeRoundData,\n};",
        "path": "/home/shaito/wonderland/aztec-coin-toss-pvp/src/types/round_data.nr"
      },
      "158": {
        "source": "/////////////////////////////////////////////////////////////////////\n//                             Imports                             //\n/////////////////////////////////////////////////////////////////////\n\nuse dep::aztec::{\n    context::PrivateContext,\n    log::emit_encrypted_log,\n    note::{\n        note_header::NoteHeader,\n        note_interface::NoteInterface,\n        utils::compute_note_hash_for_read_or_nullify,\n    },\n    oracle::{\n        get_public_key::get_public_key,\n        get_secret_key::get_secret_key,\n        notes::check_nullifier_exists,\n        notes::check_nullifier_exists_oracle,\n        rand::rand,\n    },\n    types::address::AztecAddress\n};\n\nuse dep::protocol_types::{\n    constants::EMPTY_NULLIFIED_COMMITMENT,\n};\n\nuse dep::std::option::Option;\n\n\n/////////////////////////////////////////////////////////////////////\n//                              Class                              //\n/////////////////////////////////////////////////////////////////////\n\n/// @notice A note that represents a given bet, of a given user\n/// @member owner The owner of the note\n/// @member round_id The id of the round this bet is placed on\n/// @member header The note header\nstruct RevealNote {\n    owner: AztecAddress,\n    round_id: Field,\n    randomness: Field,\n    header: NoteHeader\n}\n\nglobal REVEAL_NOTE_LEN: Field = 3;\n\nimpl RevealNote {\n    /////////////////////////////////////////////////////////////////////\n    //                         Public methods                          //\n    /////////////////////////////////////////////////////////////////////\n\n    /// @notice Reveal note constructor\n    /// @param _owner The owner of the note\n    /// @param _round_id The round id of the bet\n    /// @param _randomness An extra randomness field. Used for linking to other notes, identifaction and nullification.\n    pub fn new(_owner: AztecAddress, _round_id: Field, _randomness: Field) -> Self {\n        RevealNote {\n            owner: _owner,\n            round_id: _round_id,\n            randomness: _randomness,\n            header: NoteHeader::empty(),\n        }\n    }\n\n    /////////////////////////////////////////////////////////////////////\n    //                        Internal methods                         //\n    /////////////////////////////////////////////////////////////////////\n\n    /// @notice Serializes the note\n    fn serialize(self) -> [Field; REVEAL_NOTE_LEN] {\n        [self.owner.address, self.round_id, self.randomness]\n    }\n\n    /// @notice Deserializes the note\n    fn deserialize(preimage: [Field; REVEAL_NOTE_LEN]) -> Self {\n        RevealNote {\n            owner: AztecAddress::new(preimage[0]),\n            round_id: preimage[1],\n            randomness: preimage[2],\n            header: NoteHeader::empty(),\n        }\n    }\n\n    /// @notice Computes the note hash of the note\n    fn compute_note_hash(self) -> Field {\n        dep::std::hash::pedersen_hash([\n            self.owner.address,\n            self.round_id,\n            self.randomness\n        ])\n    }\n\n    /// @notice Computes the nullifier of the note\n    fn compute_nullifier(self) -> Field {\n        let note_hash_for_nullify = compute_note_hash_for_read_or_nullify(RevealNoteMethods, self);\n        let nullifier_key = self.randomness;\n\n        dep::std::hash::pedersen_hash([\n            note_hash_for_nullify,\n            nullifier_key,\n        ])\n    }\n\n    /// @notice Sets the note header\n    fn set_header(&mut self, header: NoteHeader) {\n        self.header = header;\n    }\n\n    /// @notice Emit the note creation event using the owner public key\n    fn broadcast(self, context: &mut PrivateContext, slot: Field) {\n        let encryption_pub_key = get_public_key(self.owner.address);\n        emit_encrypted_log(\n            context,\n            (*context).this_address(),\n            slot,\n            encryption_pub_key,\n            self.serialize(),\n        );\n    }\n}\n\n/////////////////////////////////////////////////////////////////////\n//                         Global methods                          //\n/////////////////////////////////////////////////////////////////////\n\nfn deserialize(preimage: [Field; REVEAL_NOTE_LEN]) -> RevealNote {\n    RevealNote::deserialize(preimage)\n}\n\nfn serialize(note: RevealNote) -> [Field; REVEAL_NOTE_LEN] {\n    note.serialize()\n}\n\nfn compute_note_hash(note: RevealNote) -> Field {\n    note.compute_note_hash()\n}\n\nfn compute_nullifier(note: RevealNote) -> Field {\n    note.compute_nullifier()\n}\n\nfn get_header(note: RevealNote) -> NoteHeader {\n    note.header\n}\n\nfn set_header(note: &mut RevealNote, header: NoteHeader) {\n    note.set_header(header)\n}\n\nfn broadcast(context: &mut PrivateContext, slot: Field, note: RevealNote) {\n    note.broadcast(context, slot);\n}\n\nglobal RevealNoteMethods = NoteInterface {\n    deserialize,\n    serialize,\n    compute_note_hash,\n    compute_nullifier,\n    get_header,\n    set_header,\n    broadcast,\n};",
        "path": "/home/shaito/wonderland/aztec-coin-toss-pvp/src/types/reveal_note.nr"
      }
    }
  }
}